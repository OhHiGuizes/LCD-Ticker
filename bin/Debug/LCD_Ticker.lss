
bin/Debug/LCD_Ticker.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000c  00800100  00002646  000026fa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002646  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000012  0080010c  0080010c  00002706  2**0
                  ALLOC
  3 .fuse         00000003  00820000  00820000  00002706  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .stab         00002700  00000000  00000000  0000270c  2**2
                  CONTENTS, READONLY, DEBUGGING
  5 .stabstr      00000e8c  00000000  00000000  00004e0c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .comment      00000011  00000000  00000000  00005c98  2**0
                  CONTENTS, READONLY
  7 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00005cac  2**2
                  CONTENTS, READONLY
  8 .debug_info   000005f4  00000000  00000000  00005cec  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 000005a2  00000000  00000000  000062e0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_line   0000001d  00000000  00000000  00006882  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000208  00000000  00000000  0000689f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 19 10 	jmp	0x2032	; 0x2032 <__vector_18>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	e6 e4       	ldi	r30, 0x46	; 70
      7c:	f6 e2       	ldi	r31, 0x26	; 38
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	ac 30       	cpi	r26, 0x0C	; 12
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
      8a:	21 e0       	ldi	r18, 0x01	; 1
      8c:	ac e0       	ldi	r26, 0x0C	; 12
      8e:	b1 e0       	ldi	r27, 0x01	; 1
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	ae 31       	cpi	r26, 0x1E	; 30
      96:	b2 07       	cpc	r27, r18
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 02 10 	call	0x2004	; 0x2004 <main>
      9e:	0c 94 21 13 	jmp	0x2642	; 0x2642 <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <LCD_Command>:

#include <avr/io.h>
#include <util/delay.h>

void LCD_Command( unsigned char cmnd )
{
      a6:	0f 93       	push	r16
      a8:	1f 93       	push	r17
      aa:	cf 93       	push	r28
      ac:	df 93       	push	r29
      ae:	cd b7       	in	r28, 0x3d	; 61
      b0:	de b7       	in	r29, 0x3e	; 62
      b2:	cb 5f       	subi	r28, 0xFB	; 251
      b4:	d1 09       	sbc	r29, r1
      b6:	0f b6       	in	r0, 0x3f	; 63
      b8:	f8 94       	cli
      ba:	de bf       	out	0x3e, r29	; 62
      bc:	0f be       	out	0x3f, r0	; 63
      be:	cd bf       	out	0x3d, r28	; 61
      c0:	9e 01       	movw	r18, r28
      c2:	21 59       	subi	r18, 0x91	; 145
      c4:	3f 4f       	sbci	r19, 0xFF	; 255
      c6:	d9 01       	movw	r26, r18
      c8:	8c 93       	st	X, r24
	LCD_Port = ((LCD_Port & 0x0F) | (cmnd & 0xF0)) >> 2; /* sending upper nibble */
      ca:	85 e2       	ldi	r24, 0x25	; 37
      cc:	90 e0       	ldi	r25, 0x00	; 0
      ce:	fc 01       	movw	r30, r24
      d0:	80 81       	ld	r24, Z
      d2:	88 2f       	mov	r24, r24
      d4:	90 e0       	ldi	r25, 0x00	; 0
      d6:	9c 01       	movw	r18, r24
      d8:	2f 70       	andi	r18, 0x0F	; 15
      da:	33 27       	eor	r19, r19
      dc:	ce 01       	movw	r24, r28
      de:	81 59       	subi	r24, 0x91	; 145
      e0:	9f 4f       	sbci	r25, 0xFF	; 255
      e2:	dc 01       	movw	r26, r24
      e4:	8c 91       	ld	r24, X
      e6:	88 2f       	mov	r24, r24
      e8:	90 e0       	ldi	r25, 0x00	; 0
      ea:	80 7f       	andi	r24, 0xF0	; 240
      ec:	99 27       	eor	r25, r25
      ee:	82 2b       	or	r24, r18
      f0:	93 2b       	or	r25, r19
      f2:	9c 01       	movw	r18, r24
      f4:	35 95       	asr	r19
      f6:	27 95       	ror	r18
      f8:	35 95       	asr	r19
      fa:	27 95       	ror	r18
      fc:	85 e2       	ldi	r24, 0x25	; 37
      fe:	90 e0       	ldi	r25, 0x00	; 0
     100:	fc 01       	movw	r30, r24
     102:	20 83       	st	Z, r18
	LCD_Port &= ~ (1<<RS);		/* RS=0, command reg. */
     104:	85 e2       	ldi	r24, 0x25	; 37
     106:	90 e0       	ldi	r25, 0x00	; 0
     108:	dc 01       	movw	r26, r24
     10a:	2c 91       	ld	r18, X
     10c:	85 e2       	ldi	r24, 0x25	; 37
     10e:	90 e0       	ldi	r25, 0x00	; 0
     110:	2e 7f       	andi	r18, 0xFE	; 254
     112:	fc 01       	movw	r30, r24
     114:	20 83       	st	Z, r18
	LCD_Port |= (1<<EN);		/* Enable pulse */
     116:	85 e2       	ldi	r24, 0x25	; 37
     118:	90 e0       	ldi	r25, 0x00	; 0
     11a:	dc 01       	movw	r26, r24
     11c:	2c 91       	ld	r18, X
     11e:	85 e2       	ldi	r24, 0x25	; 37
     120:	90 e0       	ldi	r25, 0x00	; 0
     122:	22 60       	ori	r18, 0x02	; 2
     124:	fc 01       	movw	r30, r24
     126:	20 83       	st	Z, r18
     128:	9e 01       	movw	r18, r28
     12a:	21 5b       	subi	r18, 0xB1	; 177
     12c:	3f 4f       	sbci	r19, 0xFF	; 255
     12e:	80 e0       	ldi	r24, 0x00	; 0
     130:	90 e0       	ldi	r25, 0x00	; 0
     132:	a0 e8       	ldi	r26, 0x80	; 128
     134:	bf e3       	ldi	r27, 0x3F	; 63
     136:	f9 01       	movw	r30, r18
     138:	80 83       	st	Z, r24
     13a:	91 83       	std	Z+1, r25	; 0x01
     13c:	a2 83       	std	Z+2, r26	; 0x02
     13e:	b3 83       	std	Z+3, r27	; 0x03
	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint8_t __ticks;
	double __tmp2 ;
	__tmp = ((F_CPU) / 3e6) * __us;
     140:	8e 01       	movw	r16, r28
     142:	0d 5a       	subi	r16, 0xAD	; 173
     144:	1f 4f       	sbci	r17, 0xFF	; 255
     146:	ce 01       	movw	r24, r28
     148:	81 5b       	subi	r24, 0xB1	; 177
     14a:	9f 4f       	sbci	r25, 0xFF	; 255
     14c:	2b ea       	ldi	r18, 0xAB	; 171
     14e:	3a ea       	ldi	r19, 0xAA	; 170
     150:	4a ea       	ldi	r20, 0xAA	; 170
     152:	50 e4       	ldi	r21, 0x40	; 64
     154:	dc 01       	movw	r26, r24
     156:	6d 91       	ld	r22, X+
     158:	7d 91       	ld	r23, X+
     15a:	8d 91       	ld	r24, X+
     15c:	9c 91       	ld	r25, X
     15e:	0e 94 b4 12 	call	0x2568	; 0x2568 <__mulsf3>
     162:	c0 58       	subi	r28, 0x80	; 128
     164:	df 4f       	sbci	r29, 0xFF	; 255
     166:	68 83       	st	Y, r22
     168:	79 83       	std	Y+1, r23	; 0x01
     16a:	8a 83       	std	Y+2, r24	; 0x02
     16c:	9b 83       	std	Y+3, r25	; 0x03
     16e:	c0 58       	subi	r28, 0x80	; 128
     170:	d0 40       	sbci	r29, 0x00	; 0
     172:	c0 58       	subi	r28, 0x80	; 128
     174:	df 4f       	sbci	r29, 0xFF	; 255
     176:	88 81       	ld	r24, Y
     178:	99 81       	ldd	r25, Y+1	; 0x01
     17a:	aa 81       	ldd	r26, Y+2	; 0x02
     17c:	bb 81       	ldd	r27, Y+3	; 0x03
     17e:	c0 58       	subi	r28, 0x80	; 128
     180:	d0 40       	sbci	r29, 0x00	; 0
     182:	f8 01       	movw	r30, r16
     184:	80 83       	st	Z, r24
     186:	91 83       	std	Z+1, r25	; 0x01
     188:	a2 83       	std	Z+2, r26	; 0x02
     18a:	b3 83       	std	Z+3, r27	; 0x03
	__tmp2 = ((F_CPU) / 4e6) * __us;
     18c:	8e 01       	movw	r16, r28
     18e:	09 5a       	subi	r16, 0xA9	; 169
     190:	1f 4f       	sbci	r17, 0xFF	; 255
     192:	ce 01       	movw	r24, r28
     194:	81 5b       	subi	r24, 0xB1	; 177
     196:	9f 4f       	sbci	r25, 0xFF	; 255
     198:	20 e0       	ldi	r18, 0x00	; 0
     19a:	30 e0       	ldi	r19, 0x00	; 0
     19c:	40 e8       	ldi	r20, 0x80	; 128
     19e:	50 e4       	ldi	r21, 0x40	; 64
     1a0:	dc 01       	movw	r26, r24
     1a2:	6d 91       	ld	r22, X+
     1a4:	7d 91       	ld	r23, X+
     1a6:	8d 91       	ld	r24, X+
     1a8:	9c 91       	ld	r25, X
     1aa:	0e 94 b4 12 	call	0x2568	; 0x2568 <__mulsf3>
     1ae:	cc 57       	subi	r28, 0x7C	; 124
     1b0:	df 4f       	sbci	r29, 0xFF	; 255
     1b2:	68 83       	st	Y, r22
     1b4:	79 83       	std	Y+1, r23	; 0x01
     1b6:	8a 83       	std	Y+2, r24	; 0x02
     1b8:	9b 83       	std	Y+3, r25	; 0x03
     1ba:	c4 58       	subi	r28, 0x84	; 132
     1bc:	d0 40       	sbci	r29, 0x00	; 0
     1be:	cc 57       	subi	r28, 0x7C	; 124
     1c0:	df 4f       	sbci	r29, 0xFF	; 255
     1c2:	88 81       	ld	r24, Y
     1c4:	99 81       	ldd	r25, Y+1	; 0x01
     1c6:	aa 81       	ldd	r26, Y+2	; 0x02
     1c8:	bb 81       	ldd	r27, Y+3	; 0x03
     1ca:	c4 58       	subi	r28, 0x84	; 132
     1cc:	d0 40       	sbci	r29, 0x00	; 0
     1ce:	f8 01       	movw	r30, r16
     1d0:	80 83       	st	Z, r24
     1d2:	91 83       	std	Z+1, r25	; 0x01
     1d4:	a2 83       	std	Z+2, r26	; 0x02
     1d6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     1d8:	ce 01       	movw	r24, r28
     1da:	8d 5a       	subi	r24, 0xAD	; 173
     1dc:	9f 4f       	sbci	r25, 0xFF	; 255
     1de:	20 e0       	ldi	r18, 0x00	; 0
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e8       	ldi	r20, 0x80	; 128
     1e4:	5f e3       	ldi	r21, 0x3F	; 63
     1e6:	dc 01       	movw	r26, r24
     1e8:	6d 91       	ld	r22, X+
     1ea:	7d 91       	ld	r23, X+
     1ec:	8d 91       	ld	r24, X+
     1ee:	9c 91       	ld	r25, X
     1f0:	0e 94 94 11 	call	0x2328	; 0x2328 <__cmpsf2>
     1f4:	88 23       	and	r24, r24
     1f6:	3c f4       	brge	.+14     	; 0x206 <LCD_Command+0x160>
		__ticks = 1;
     1f8:	ce 01       	movw	r24, r28
     1fa:	85 5a       	subi	r24, 0xA5	; 165
     1fc:	9f 4f       	sbci	r25, 0xFF	; 255
     1fe:	21 e0       	ldi	r18, 0x01	; 1
     200:	fc 01       	movw	r30, r24
     202:	20 83       	st	Z, r18
     204:	99 c1       	rjmp	.+818    	; 0x538 <__FUSE_REGION_LENGTH__+0x138>
	else if (__tmp2 > 65535)
     206:	ce 01       	movw	r24, r28
     208:	89 5a       	subi	r24, 0xA9	; 169
     20a:	9f 4f       	sbci	r25, 0xFF	; 255
     20c:	20 e0       	ldi	r18, 0x00	; 0
     20e:	3f ef       	ldi	r19, 0xFF	; 255
     210:	4f e7       	ldi	r20, 0x7F	; 127
     212:	57 e4       	ldi	r21, 0x47	; 71
     214:	dc 01       	movw	r26, r24
     216:	6d 91       	ld	r22, X+
     218:	7d 91       	ld	r23, X+
     21a:	8d 91       	ld	r24, X+
     21c:	9c 91       	ld	r25, X
     21e:	0e 94 af 12 	call	0x255e	; 0x255e <__gesf2>
     222:	18 16       	cp	r1, r24
     224:	0c f0       	brlt	.+2      	; 0x228 <LCD_Command+0x182>
     226:	22 c1       	rjmp	.+580    	; 0x46c <__FUSE_REGION_LENGTH__+0x6c>
	{
		_delay_ms(__us / 1000.0);
     228:	ce 01       	movw	r24, r28
     22a:	81 5b       	subi	r24, 0xB1	; 177
     22c:	9f 4f       	sbci	r25, 0xFF	; 255
     22e:	20 e0       	ldi	r18, 0x00	; 0
     230:	30 e0       	ldi	r19, 0x00	; 0
     232:	4a e7       	ldi	r20, 0x7A	; 122
     234:	54 e4       	ldi	r21, 0x44	; 68
     236:	fc 01       	movw	r30, r24
     238:	60 81       	ld	r22, Z
     23a:	71 81       	ldd	r23, Z+1	; 0x01
     23c:	82 81       	ldd	r24, Z+2	; 0x02
     23e:	93 81       	ldd	r25, Z+3	; 0x03
     240:	0e 94 99 11 	call	0x2332	; 0x2332 <__divsf3>
     244:	c8 57       	subi	r28, 0x78	; 120
     246:	df 4f       	sbci	r29, 0xFF	; 255
     248:	68 83       	st	Y, r22
     24a:	79 83       	std	Y+1, r23	; 0x01
     24c:	8a 83       	std	Y+2, r24	; 0x02
     24e:	9b 83       	std	Y+3, r25	; 0x03
     250:	c8 58       	subi	r28, 0x88	; 136
     252:	d0 40       	sbci	r29, 0x00	; 0
     254:	c8 57       	subi	r28, 0x78	; 120
     256:	df 4f       	sbci	r29, 0xFF	; 255
     258:	88 81       	ld	r24, Y
     25a:	99 81       	ldd	r25, Y+1	; 0x01
     25c:	aa 81       	ldd	r26, Y+2	; 0x02
     25e:	bb 81       	ldd	r27, Y+3	; 0x03
     260:	c8 58       	subi	r28, 0x88	; 136
     262:	d0 40       	sbci	r29, 0x00	; 0
     264:	9e 01       	movw	r18, r28
     266:	24 5a       	subi	r18, 0xA4	; 164
     268:	3f 4f       	sbci	r19, 0xFF	; 255
     26a:	f9 01       	movw	r30, r18
     26c:	80 83       	st	Z, r24
     26e:	91 83       	std	Z+1, r25	; 0x01
     270:	a2 83       	std	Z+2, r26	; 0x02
     272:	b3 83       	std	Z+3, r27	; 0x03
	__tmp = ((F_CPU) / 4e3) * __ms;
     274:	8e 01       	movw	r16, r28
     276:	00 5a       	subi	r16, 0xA0	; 160
     278:	1f 4f       	sbci	r17, 0xFF	; 255
     27a:	ce 01       	movw	r24, r28
     27c:	84 5a       	subi	r24, 0xA4	; 164
     27e:	9f 4f       	sbci	r25, 0xFF	; 255
     280:	20 e0       	ldi	r18, 0x00	; 0
     282:	30 e0       	ldi	r19, 0x00	; 0
     284:	4a e7       	ldi	r20, 0x7A	; 122
     286:	55 e4       	ldi	r21, 0x45	; 69
     288:	dc 01       	movw	r26, r24
     28a:	6d 91       	ld	r22, X+
     28c:	7d 91       	ld	r23, X+
     28e:	8d 91       	ld	r24, X+
     290:	9c 91       	ld	r25, X
     292:	0e 94 b4 12 	call	0x2568	; 0x2568 <__mulsf3>
     296:	c4 57       	subi	r28, 0x74	; 116
     298:	df 4f       	sbci	r29, 0xFF	; 255
     29a:	68 83       	st	Y, r22
     29c:	79 83       	std	Y+1, r23	; 0x01
     29e:	8a 83       	std	Y+2, r24	; 0x02
     2a0:	9b 83       	std	Y+3, r25	; 0x03
     2a2:	cc 58       	subi	r28, 0x8C	; 140
     2a4:	d0 40       	sbci	r29, 0x00	; 0
     2a6:	c4 57       	subi	r28, 0x74	; 116
     2a8:	df 4f       	sbci	r29, 0xFF	; 255
     2aa:	88 81       	ld	r24, Y
     2ac:	99 81       	ldd	r25, Y+1	; 0x01
     2ae:	aa 81       	ldd	r26, Y+2	; 0x02
     2b0:	bb 81       	ldd	r27, Y+3	; 0x03
     2b2:	cc 58       	subi	r28, 0x8C	; 140
     2b4:	d0 40       	sbci	r29, 0x00	; 0
     2b6:	f8 01       	movw	r30, r16
     2b8:	80 83       	st	Z, r24
     2ba:	91 83       	std	Z+1, r25	; 0x01
     2bc:	a2 83       	std	Z+2, r26	; 0x02
     2be:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     2c0:	ce 01       	movw	r24, r28
     2c2:	80 5a       	subi	r24, 0xA0	; 160
     2c4:	9f 4f       	sbci	r25, 0xFF	; 255
     2c6:	20 e0       	ldi	r18, 0x00	; 0
     2c8:	30 e0       	ldi	r19, 0x00	; 0
     2ca:	40 e8       	ldi	r20, 0x80	; 128
     2cc:	5f e3       	ldi	r21, 0x3F	; 63
     2ce:	dc 01       	movw	r26, r24
     2d0:	6d 91       	ld	r22, X+
     2d2:	7d 91       	ld	r23, X+
     2d4:	8d 91       	ld	r24, X+
     2d6:	9c 91       	ld	r25, X
     2d8:	0e 94 94 11 	call	0x2328	; 0x2328 <__cmpsf2>
     2dc:	88 23       	and	r24, r24
     2de:	4c f4       	brge	.+18     	; 0x2f2 <LCD_Command+0x24c>
		__ticks = 1;
     2e0:	ce 01       	movw	r24, r28
     2e2:	8c 59       	subi	r24, 0x9C	; 156
     2e4:	9f 4f       	sbci	r25, 0xFF	; 255
     2e6:	21 e0       	ldi	r18, 0x01	; 1
     2e8:	30 e0       	ldi	r19, 0x00	; 0
     2ea:	fc 01       	movw	r30, r24
     2ec:	31 83       	std	Z+1, r19	; 0x01
     2ee:	20 83       	st	Z, r18
     2f0:	a2 c0       	rjmp	.+324    	; 0x436 <__FUSE_REGION_LENGTH__+0x36>
	else if (__tmp > 65535)
     2f2:	ce 01       	movw	r24, r28
     2f4:	80 5a       	subi	r24, 0xA0	; 160
     2f6:	9f 4f       	sbci	r25, 0xFF	; 255
     2f8:	20 e0       	ldi	r18, 0x00	; 0
     2fa:	3f ef       	ldi	r19, 0xFF	; 255
     2fc:	4f e7       	ldi	r20, 0x7F	; 127
     2fe:	57 e4       	ldi	r21, 0x47	; 71
     300:	dc 01       	movw	r26, r24
     302:	6d 91       	ld	r22, X+
     304:	7d 91       	ld	r23, X+
     306:	8d 91       	ld	r24, X+
     308:	9c 91       	ld	r25, X
     30a:	0e 94 af 12 	call	0x255e	; 0x255e <__gesf2>
     30e:	18 16       	cp	r1, r24
     310:	0c f0       	brlt	.+2      	; 0x314 <LCD_Command+0x26e>
     312:	73 c0       	rjmp	.+230    	; 0x3fa <LCD_Command+0x354>
		__ticks = (uint16_t) (__ms * 10.0);
     314:	ce 01       	movw	r24, r28
     316:	84 5a       	subi	r24, 0xA4	; 164
     318:	9f 4f       	sbci	r25, 0xFF	; 255
     31a:	20 e0       	ldi	r18, 0x00	; 0
     31c:	30 e0       	ldi	r19, 0x00	; 0
     31e:	40 e2       	ldi	r20, 0x20	; 32
     320:	51 e4       	ldi	r21, 0x41	; 65
     322:	fc 01       	movw	r30, r24
     324:	60 81       	ld	r22, Z
     326:	71 81       	ldd	r23, Z+1	; 0x01
     328:	82 81       	ldd	r24, Z+2	; 0x02
     32a:	93 81       	ldd	r25, Z+3	; 0x03
     32c:	0e 94 b4 12 	call	0x2568	; 0x2568 <__mulsf3>
     330:	c0 57       	subi	r28, 0x70	; 112
     332:	df 4f       	sbci	r29, 0xFF	; 255
     334:	68 83       	st	Y, r22
     336:	79 83       	std	Y+1, r23	; 0x01
     338:	8a 83       	std	Y+2, r24	; 0x02
     33a:	9b 83       	std	Y+3, r25	; 0x03
     33c:	c0 59       	subi	r28, 0x90	; 144
     33e:	d0 40       	sbci	r29, 0x00	; 0
     340:	c0 57       	subi	r28, 0x70	; 112
     342:	df 4f       	sbci	r29, 0xFF	; 255
     344:	88 81       	ld	r24, Y
     346:	99 81       	ldd	r25, Y+1	; 0x01
     348:	aa 81       	ldd	r26, Y+2	; 0x02
     34a:	bb 81       	ldd	r27, Y+3	; 0x03
     34c:	c0 59       	subi	r28, 0x90	; 144
     34e:	d0 40       	sbci	r29, 0x00	; 0
     350:	c4 58       	subi	r28, 0x84	; 132
     352:	df 4f       	sbci	r29, 0xFF	; 255
     354:	88 83       	st	Y, r24
     356:	99 83       	std	Y+1, r25	; 0x01
     358:	aa 83       	std	Y+2, r26	; 0x02
     35a:	bb 83       	std	Y+3, r27	; 0x03
     35c:	cc 57       	subi	r28, 0x7C	; 124
     35e:	d0 40       	sbci	r29, 0x00	; 0
     360:	8e 01       	movw	r16, r28
     362:	0c 59       	subi	r16, 0x9C	; 156
     364:	1f 4f       	sbci	r17, 0xFF	; 255
     366:	c4 58       	subi	r28, 0x84	; 132
     368:	df 4f       	sbci	r29, 0xFF	; 255
     36a:	68 81       	ld	r22, Y
     36c:	79 81       	ldd	r23, Y+1	; 0x01
     36e:	8a 81       	ldd	r24, Y+2	; 0x02
     370:	9b 81       	ldd	r25, Y+3	; 0x03
     372:	cc 57       	subi	r28, 0x7C	; 124
     374:	d0 40       	sbci	r29, 0x00	; 0
     376:	0e 94 0b 12 	call	0x2416	; 0x2416 <__fixunssfsi>
     37a:	cc 56       	subi	r28, 0x6C	; 108
     37c:	df 4f       	sbci	r29, 0xFF	; 255
     37e:	68 83       	st	Y, r22
     380:	79 83       	std	Y+1, r23	; 0x01
     382:	8a 83       	std	Y+2, r24	; 0x02
     384:	9b 83       	std	Y+3, r25	; 0x03
     386:	c4 59       	subi	r28, 0x94	; 148
     388:	d0 40       	sbci	r29, 0x00	; 0
     38a:	cc 56       	subi	r28, 0x6C	; 108
     38c:	df 4f       	sbci	r29, 0xFF	; 255
     38e:	e8 81       	ld	r30, Y
     390:	f9 81       	ldd	r31, Y+1	; 0x01
     392:	c4 59       	subi	r28, 0x94	; 148
     394:	d0 40       	sbci	r29, 0x00	; 0
     396:	d8 01       	movw	r26, r16
     398:	ed 93       	st	X+, r30
     39a:	fc 93       	st	X, r31
		while(__ticks)
     39c:	25 c0       	rjmp	.+74     	; 0x3e8 <LCD_Command+0x342>
     39e:	ce 01       	movw	r24, r28
     3a0:	8a 59       	subi	r24, 0x9A	; 154
     3a2:	9f 4f       	sbci	r25, 0xFF	; 255
     3a4:	20 e9       	ldi	r18, 0x90	; 144
     3a6:	31 e0       	ldi	r19, 0x01	; 1
     3a8:	dc 01       	movw	r26, r24
     3aa:	2d 93       	st	X+, r18
     3ac:	3c 93       	st	X, r19
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     3ae:	ce 01       	movw	r24, r28
     3b0:	8a 59       	subi	r24, 0x9A	; 154
     3b2:	9f 4f       	sbci	r25, 0xFF	; 255
     3b4:	fc 01       	movw	r30, r24
     3b6:	80 81       	ld	r24, Z
     3b8:	91 81       	ldd	r25, Z+1	; 0x01
     3ba:	01 97       	sbiw	r24, 0x01	; 1
     3bc:	f1 f7       	brne	.-4      	; 0x3ba <LCD_Command+0x314>
     3be:	9e 01       	movw	r18, r28
     3c0:	2a 59       	subi	r18, 0x9A	; 154
     3c2:	3f 4f       	sbci	r19, 0xFF	; 255
     3c4:	d9 01       	movw	r26, r18
     3c6:	8d 93       	st	X+, r24
     3c8:	9c 93       	st	X, r25
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
}
     3ca:	00 00       	nop
			__ticks --;
     3cc:	ce 01       	movw	r24, r28
     3ce:	8c 59       	subi	r24, 0x9C	; 156
     3d0:	9f 4f       	sbci	r25, 0xFF	; 255
     3d2:	9e 01       	movw	r18, r28
     3d4:	2c 59       	subi	r18, 0x9C	; 156
     3d6:	3f 4f       	sbci	r19, 0xFF	; 255
     3d8:	f9 01       	movw	r30, r18
     3da:	20 81       	ld	r18, Z
     3dc:	31 81       	ldd	r19, Z+1	; 0x01
     3de:	21 50       	subi	r18, 0x01	; 1
     3e0:	31 09       	sbc	r19, r1
     3e2:	dc 01       	movw	r26, r24
     3e4:	2d 93       	st	X+, r18
     3e6:	3c 93       	st	X, r19
		while(__ticks)
     3e8:	ce 01       	movw	r24, r28
     3ea:	8c 59       	subi	r24, 0x9C	; 156
     3ec:	9f 4f       	sbci	r25, 0xFF	; 255
     3ee:	fc 01       	movw	r30, r24
     3f0:	80 81       	ld	r24, Z
     3f2:	91 81       	ldd	r25, Z+1	; 0x01
     3f4:	89 2b       	or	r24, r25
     3f6:	99 f6       	brne	.-90     	; 0x39e <LCD_Command+0x2f8>
		return;
     3f8:	9f c0       	rjmp	.+318    	; 0x538 <__FUSE_REGION_LENGTH__+0x138>
		__ticks = (uint16_t)__tmp;
     3fa:	8e 01       	movw	r16, r28
     3fc:	0c 59       	subi	r16, 0x9C	; 156
     3fe:	1f 4f       	sbci	r17, 0xFF	; 255
     400:	ce 01       	movw	r24, r28
     402:	80 5a       	subi	r24, 0xA0	; 160
     404:	9f 4f       	sbci	r25, 0xFF	; 255
     406:	dc 01       	movw	r26, r24
     408:	6d 91       	ld	r22, X+
     40a:	7d 91       	ld	r23, X+
     40c:	8d 91       	ld	r24, X+
     40e:	9c 91       	ld	r25, X
     410:	0e 94 0b 12 	call	0x2416	; 0x2416 <__fixunssfsi>
     414:	c8 56       	subi	r28, 0x68	; 104
     416:	df 4f       	sbci	r29, 0xFF	; 255
     418:	68 83       	st	Y, r22
     41a:	79 83       	std	Y+1, r23	; 0x01
     41c:	8a 83       	std	Y+2, r24	; 0x02
     41e:	9b 83       	std	Y+3, r25	; 0x03
     420:	c8 59       	subi	r28, 0x98	; 152
     422:	d0 40       	sbci	r29, 0x00	; 0
     424:	c8 56       	subi	r28, 0x68	; 104
     426:	df 4f       	sbci	r29, 0xFF	; 255
     428:	88 81       	ld	r24, Y
     42a:	99 81       	ldd	r25, Y+1	; 0x01
     42c:	c8 59       	subi	r28, 0x98	; 152
     42e:	d0 40       	sbci	r29, 0x00	; 0
     430:	f8 01       	movw	r30, r16
     432:	91 83       	std	Z+1, r25	; 0x01
     434:	80 83       	st	Z, r24
     436:	ce 01       	movw	r24, r28
     438:	88 59       	subi	r24, 0x98	; 152
     43a:	9f 4f       	sbci	r25, 0xFF	; 255
     43c:	9e 01       	movw	r18, r28
     43e:	2c 59       	subi	r18, 0x9C	; 156
     440:	3f 4f       	sbci	r19, 0xFF	; 255
     442:	d9 01       	movw	r26, r18
     444:	2d 91       	ld	r18, X+
     446:	3c 91       	ld	r19, X
     448:	fc 01       	movw	r30, r24
     44a:	31 83       	std	Z+1, r19	; 0x01
     44c:	20 83       	st	Z, r18
	__asm__ volatile (
     44e:	ce 01       	movw	r24, r28
     450:	88 59       	subi	r24, 0x98	; 152
     452:	9f 4f       	sbci	r25, 0xFF	; 255
     454:	dc 01       	movw	r26, r24
     456:	8d 91       	ld	r24, X+
     458:	9c 91       	ld	r25, X
     45a:	01 97       	sbiw	r24, 0x01	; 1
     45c:	f1 f7       	brne	.-4      	; 0x45a <__FUSE_REGION_LENGTH__+0x5a>
     45e:	9e 01       	movw	r18, r28
     460:	28 59       	subi	r18, 0x98	; 152
     462:	3f 4f       	sbci	r19, 0xFF	; 255
     464:	f9 01       	movw	r30, r18
     466:	91 83       	std	Z+1, r25	; 0x01
     468:	80 83       	st	Z, r24
}
     46a:	66 c0       	rjmp	.+204    	; 0x538 <__FUSE_REGION_LENGTH__+0x138>
	}
	else if (__tmp > 255)
     46c:	ce 01       	movw	r24, r28
     46e:	8d 5a       	subi	r24, 0xAD	; 173
     470:	9f 4f       	sbci	r25, 0xFF	; 255
     472:	20 e0       	ldi	r18, 0x00	; 0
     474:	30 e0       	ldi	r19, 0x00	; 0
     476:	4f e7       	ldi	r20, 0x7F	; 127
     478:	53 e4       	ldi	r21, 0x43	; 67
     47a:	dc 01       	movw	r26, r24
     47c:	6d 91       	ld	r22, X+
     47e:	7d 91       	ld	r23, X+
     480:	8d 91       	ld	r24, X+
     482:	9c 91       	ld	r25, X
     484:	0e 94 af 12 	call	0x255e	; 0x255e <__gesf2>
     488:	18 16       	cp	r1, r24
     48a:	d4 f5       	brge	.+116    	; 0x500 <__FUSE_REGION_LENGTH__+0x100>
	{
		uint16_t __ticks=(uint16_t)__tmp2;
     48c:	8e 01       	movw	r16, r28
     48e:	06 59       	subi	r16, 0x96	; 150
     490:	1f 4f       	sbci	r17, 0xFF	; 255
     492:	ce 01       	movw	r24, r28
     494:	89 5a       	subi	r24, 0xA9	; 169
     496:	9f 4f       	sbci	r25, 0xFF	; 255
     498:	fc 01       	movw	r30, r24
     49a:	60 81       	ld	r22, Z
     49c:	71 81       	ldd	r23, Z+1	; 0x01
     49e:	82 81       	ldd	r24, Z+2	; 0x02
     4a0:	93 81       	ldd	r25, Z+3	; 0x03
     4a2:	0e 94 0b 12 	call	0x2416	; 0x2416 <__fixunssfsi>
     4a6:	c4 56       	subi	r28, 0x64	; 100
     4a8:	df 4f       	sbci	r29, 0xFF	; 255
     4aa:	68 83       	st	Y, r22
     4ac:	79 83       	std	Y+1, r23	; 0x01
     4ae:	8a 83       	std	Y+2, r24	; 0x02
     4b0:	9b 83       	std	Y+3, r25	; 0x03
     4b2:	cc 59       	subi	r28, 0x9C	; 156
     4b4:	d0 40       	sbci	r29, 0x00	; 0
     4b6:	c4 56       	subi	r28, 0x64	; 100
     4b8:	df 4f       	sbci	r29, 0xFF	; 255
     4ba:	e8 81       	ld	r30, Y
     4bc:	f9 81       	ldd	r31, Y+1	; 0x01
     4be:	cc 59       	subi	r28, 0x9C	; 156
     4c0:	d0 40       	sbci	r29, 0x00	; 0
     4c2:	d8 01       	movw	r26, r16
     4c4:	ed 93       	st	X+, r30
     4c6:	fc 93       	st	X, r31
     4c8:	ce 01       	movw	r24, r28
     4ca:	84 59       	subi	r24, 0x94	; 148
     4cc:	9f 4f       	sbci	r25, 0xFF	; 255
     4ce:	9e 01       	movw	r18, r28
     4d0:	26 59       	subi	r18, 0x96	; 150
     4d2:	3f 4f       	sbci	r19, 0xFF	; 255
     4d4:	d9 01       	movw	r26, r18
     4d6:	2d 91       	ld	r18, X+
     4d8:	3c 91       	ld	r19, X
     4da:	fc 01       	movw	r30, r24
     4dc:	31 83       	std	Z+1, r19	; 0x01
     4de:	20 83       	st	Z, r18
	__asm__ volatile (
     4e0:	ce 01       	movw	r24, r28
     4e2:	84 59       	subi	r24, 0x94	; 148
     4e4:	9f 4f       	sbci	r25, 0xFF	; 255
     4e6:	dc 01       	movw	r26, r24
     4e8:	8d 91       	ld	r24, X+
     4ea:	9c 91       	ld	r25, X
     4ec:	01 97       	sbiw	r24, 0x01	; 1
     4ee:	f1 f7       	brne	.-4      	; 0x4ec <__FUSE_REGION_LENGTH__+0xec>
     4f0:	9e 01       	movw	r18, r28
     4f2:	24 59       	subi	r18, 0x94	; 148
     4f4:	3f 4f       	sbci	r19, 0xFF	; 255
     4f6:	f9 01       	movw	r30, r18
     4f8:	91 83       	std	Z+1, r25	; 0x01
     4fa:	80 83       	st	Z, r24
}
     4fc:	00 00       	nop
		_delay_loop_2(__ticks);
		return;
     4fe:	34 c0       	rjmp	.+104    	; 0x568 <__FUSE_REGION_LENGTH__+0x168>
	}
	else
		__ticks = (uint8_t)__tmp;
     500:	8e 01       	movw	r16, r28
     502:	05 5a       	subi	r16, 0xA5	; 165
     504:	1f 4f       	sbci	r17, 0xFF	; 255
     506:	ce 01       	movw	r24, r28
     508:	8d 5a       	subi	r24, 0xAD	; 173
     50a:	9f 4f       	sbci	r25, 0xFF	; 255
     50c:	dc 01       	movw	r26, r24
     50e:	6d 91       	ld	r22, X+
     510:	7d 91       	ld	r23, X+
     512:	8d 91       	ld	r24, X+
     514:	9c 91       	ld	r25, X
     516:	0e 94 0b 12 	call	0x2416	; 0x2416 <__fixunssfsi>
     51a:	c0 56       	subi	r28, 0x60	; 96
     51c:	df 4f       	sbci	r29, 0xFF	; 255
     51e:	68 83       	st	Y, r22
     520:	79 83       	std	Y+1, r23	; 0x01
     522:	8a 83       	std	Y+2, r24	; 0x02
     524:	9b 83       	std	Y+3, r25	; 0x03
     526:	c0 5a       	subi	r28, 0xA0	; 160
     528:	d0 40       	sbci	r29, 0x00	; 0
     52a:	c0 56       	subi	r28, 0x60	; 96
     52c:	df 4f       	sbci	r29, 0xFF	; 255
     52e:	88 81       	ld	r24, Y
     530:	c0 5a       	subi	r28, 0xA0	; 160
     532:	d0 40       	sbci	r29, 0x00	; 0
     534:	f8 01       	movw	r30, r16
     536:	80 83       	st	Z, r24
     538:	ce 01       	movw	r24, r28
     53a:	82 59       	subi	r24, 0x92	; 146
     53c:	9f 4f       	sbci	r25, 0xFF	; 255
     53e:	9e 01       	movw	r18, r28
     540:	25 5a       	subi	r18, 0xA5	; 165
     542:	3f 4f       	sbci	r19, 0xFF	; 255
     544:	d9 01       	movw	r26, r18
     546:	2c 91       	ld	r18, X
     548:	fc 01       	movw	r30, r24
     54a:	20 83       	st	Z, r18
	__asm__ volatile (
     54c:	ce 01       	movw	r24, r28
     54e:	82 59       	subi	r24, 0x92	; 146
     550:	9f 4f       	sbci	r25, 0xFF	; 255
     552:	dc 01       	movw	r26, r24
     554:	8c 91       	ld	r24, X
     556:	28 2f       	mov	r18, r24
     558:	2a 95       	dec	r18
     55a:	f1 f7       	brne	.-4      	; 0x558 <__FUSE_REGION_LENGTH__+0x158>
     55c:	ce 01       	movw	r24, r28
     55e:	82 59       	subi	r24, 0x92	; 146
     560:	9f 4f       	sbci	r25, 0xFF	; 255
     562:	fc 01       	movw	r30, r24
     564:	20 83       	st	Z, r18
}
     566:	00 00       	nop
	_delay_us(1);
	LCD_Port &= ~ (1<<EN);
     568:	85 e2       	ldi	r24, 0x25	; 37
     56a:	90 e0       	ldi	r25, 0x00	; 0
     56c:	dc 01       	movw	r26, r24
     56e:	2c 91       	ld	r18, X
     570:	85 e2       	ldi	r24, 0x25	; 37
     572:	90 e0       	ldi	r25, 0x00	; 0
     574:	2d 7f       	andi	r18, 0xFD	; 253
     576:	fc 01       	movw	r30, r24
     578:	20 83       	st	Z, r18
     57a:	80 e0       	ldi	r24, 0x00	; 0
     57c:	90 e0       	ldi	r25, 0x00	; 0
     57e:	a8 e4       	ldi	r26, 0x48	; 72
     580:	b3 e4       	ldi	r27, 0x43	; 67
     582:	8f a7       	std	Y+47, r24	; 0x2f
     584:	98 ab       	std	Y+48, r25	; 0x30
     586:	a9 ab       	std	Y+49, r26	; 0x31
     588:	ba ab       	std	Y+50, r27	; 0x32
	__tmp = ((F_CPU) / 3e6) * __us;
     58a:	2b ea       	ldi	r18, 0xAB	; 171
     58c:	3a ea       	ldi	r19, 0xAA	; 170
     58e:	4a ea       	ldi	r20, 0xAA	; 170
     590:	50 e4       	ldi	r21, 0x40	; 64
     592:	6f a5       	ldd	r22, Y+47	; 0x2f
     594:	78 a9       	ldd	r23, Y+48	; 0x30
     596:	89 a9       	ldd	r24, Y+49	; 0x31
     598:	9a a9       	ldd	r25, Y+50	; 0x32
     59a:	0e 94 b4 12 	call	0x2568	; 0x2568 <__mulsf3>
     59e:	cc 55       	subi	r28, 0x5C	; 92
     5a0:	df 4f       	sbci	r29, 0xFF	; 255
     5a2:	68 83       	st	Y, r22
     5a4:	79 83       	std	Y+1, r23	; 0x01
     5a6:	8a 83       	std	Y+2, r24	; 0x02
     5a8:	9b 83       	std	Y+3, r25	; 0x03
     5aa:	c4 5a       	subi	r28, 0xA4	; 164
     5ac:	d0 40       	sbci	r29, 0x00	; 0
     5ae:	cc 55       	subi	r28, 0x5C	; 92
     5b0:	df 4f       	sbci	r29, 0xFF	; 255
     5b2:	88 81       	ld	r24, Y
     5b4:	99 81       	ldd	r25, Y+1	; 0x01
     5b6:	aa 81       	ldd	r26, Y+2	; 0x02
     5b8:	bb 81       	ldd	r27, Y+3	; 0x03
     5ba:	c4 5a       	subi	r28, 0xA4	; 164
     5bc:	d0 40       	sbci	r29, 0x00	; 0
     5be:	8b ab       	std	Y+51, r24	; 0x33
     5c0:	9c ab       	std	Y+52, r25	; 0x34
     5c2:	ad ab       	std	Y+53, r26	; 0x35
     5c4:	be ab       	std	Y+54, r27	; 0x36
	__tmp2 = ((F_CPU) / 4e6) * __us;
     5c6:	20 e0       	ldi	r18, 0x00	; 0
     5c8:	30 e0       	ldi	r19, 0x00	; 0
     5ca:	40 e8       	ldi	r20, 0x80	; 128
     5cc:	50 e4       	ldi	r21, 0x40	; 64
     5ce:	6f a5       	ldd	r22, Y+47	; 0x2f
     5d0:	78 a9       	ldd	r23, Y+48	; 0x30
     5d2:	89 a9       	ldd	r24, Y+49	; 0x31
     5d4:	9a a9       	ldd	r25, Y+50	; 0x32
     5d6:	0e 94 b4 12 	call	0x2568	; 0x2568 <__mulsf3>
     5da:	c8 55       	subi	r28, 0x58	; 88
     5dc:	df 4f       	sbci	r29, 0xFF	; 255
     5de:	68 83       	st	Y, r22
     5e0:	79 83       	std	Y+1, r23	; 0x01
     5e2:	8a 83       	std	Y+2, r24	; 0x02
     5e4:	9b 83       	std	Y+3, r25	; 0x03
     5e6:	c8 5a       	subi	r28, 0xA8	; 168
     5e8:	d0 40       	sbci	r29, 0x00	; 0
     5ea:	c8 55       	subi	r28, 0x58	; 88
     5ec:	df 4f       	sbci	r29, 0xFF	; 255
     5ee:	88 81       	ld	r24, Y
     5f0:	99 81       	ldd	r25, Y+1	; 0x01
     5f2:	aa 81       	ldd	r26, Y+2	; 0x02
     5f4:	bb 81       	ldd	r27, Y+3	; 0x03
     5f6:	c8 5a       	subi	r28, 0xA8	; 168
     5f8:	d0 40       	sbci	r29, 0x00	; 0
     5fa:	8f ab       	std	Y+55, r24	; 0x37
     5fc:	98 af       	std	Y+56, r25	; 0x38
     5fe:	a9 af       	std	Y+57, r26	; 0x39
     600:	ba af       	std	Y+58, r27	; 0x3a
	if (__tmp < 1.0)
     602:	20 e0       	ldi	r18, 0x00	; 0
     604:	30 e0       	ldi	r19, 0x00	; 0
     606:	40 e8       	ldi	r20, 0x80	; 128
     608:	5f e3       	ldi	r21, 0x3F	; 63
     60a:	6b a9       	ldd	r22, Y+51	; 0x33
     60c:	7c a9       	ldd	r23, Y+52	; 0x34
     60e:	8d a9       	ldd	r24, Y+53	; 0x35
     610:	9e a9       	ldd	r25, Y+54	; 0x36
     612:	0e 94 94 11 	call	0x2328	; 0x2328 <__cmpsf2>
     616:	88 23       	and	r24, r24
     618:	1c f4       	brge	.+6      	; 0x620 <__FUSE_REGION_LENGTH__+0x220>
		__ticks = 1;
     61a:	81 e0       	ldi	r24, 0x01	; 1
     61c:	8b af       	std	Y+59, r24	; 0x3b
     61e:	71 c1       	rjmp	.+738    	; 0x902 <__stack+0x3>
	else if (__tmp2 > 65535)
     620:	20 e0       	ldi	r18, 0x00	; 0
     622:	3f ef       	ldi	r19, 0xFF	; 255
     624:	4f e7       	ldi	r20, 0x7F	; 127
     626:	57 e4       	ldi	r21, 0x47	; 71
     628:	6f a9       	ldd	r22, Y+55	; 0x37
     62a:	78 ad       	ldd	r23, Y+56	; 0x38
     62c:	89 ad       	ldd	r24, Y+57	; 0x39
     62e:	9a ad       	ldd	r25, Y+58	; 0x3a
     630:	0e 94 af 12 	call	0x255e	; 0x255e <__gesf2>
     634:	18 16       	cp	r1, r24
     636:	0c f0       	brlt	.+2      	; 0x63a <__FUSE_REGION_LENGTH__+0x23a>
     638:	0e c1       	rjmp	.+540    	; 0x856 <__FUSE_REGION_LENGTH__+0x456>
		_delay_ms(__us / 1000.0);
     63a:	20 e0       	ldi	r18, 0x00	; 0
     63c:	30 e0       	ldi	r19, 0x00	; 0
     63e:	4a e7       	ldi	r20, 0x7A	; 122
     640:	54 e4       	ldi	r21, 0x44	; 68
     642:	6f a5       	ldd	r22, Y+47	; 0x2f
     644:	78 a9       	ldd	r23, Y+48	; 0x30
     646:	89 a9       	ldd	r24, Y+49	; 0x31
     648:	9a a9       	ldd	r25, Y+50	; 0x32
     64a:	0e 94 99 11 	call	0x2332	; 0x2332 <__divsf3>
     64e:	c4 55       	subi	r28, 0x54	; 84
     650:	df 4f       	sbci	r29, 0xFF	; 255
     652:	68 83       	st	Y, r22
     654:	79 83       	std	Y+1, r23	; 0x01
     656:	8a 83       	std	Y+2, r24	; 0x02
     658:	9b 83       	std	Y+3, r25	; 0x03
     65a:	cc 5a       	subi	r28, 0xAC	; 172
     65c:	d0 40       	sbci	r29, 0x00	; 0
     65e:	c4 55       	subi	r28, 0x54	; 84
     660:	df 4f       	sbci	r29, 0xFF	; 255
     662:	88 81       	ld	r24, Y
     664:	99 81       	ldd	r25, Y+1	; 0x01
     666:	aa 81       	ldd	r26, Y+2	; 0x02
     668:	bb 81       	ldd	r27, Y+3	; 0x03
     66a:	cc 5a       	subi	r28, 0xAC	; 172
     66c:	d0 40       	sbci	r29, 0x00	; 0
     66e:	8c af       	std	Y+60, r24	; 0x3c
     670:	9d af       	std	Y+61, r25	; 0x3d
     672:	ae af       	std	Y+62, r26	; 0x3e
     674:	bf af       	std	Y+63, r27	; 0x3f
	__tmp = ((F_CPU) / 4e3) * __ms;
     676:	8e 01       	movw	r16, r28
     678:	00 5c       	subi	r16, 0xC0	; 192
     67a:	1f 4f       	sbci	r17, 0xFF	; 255
     67c:	20 e0       	ldi	r18, 0x00	; 0
     67e:	30 e0       	ldi	r19, 0x00	; 0
     680:	4a e7       	ldi	r20, 0x7A	; 122
     682:	55 e4       	ldi	r21, 0x45	; 69
     684:	6c ad       	ldd	r22, Y+60	; 0x3c
     686:	7d ad       	ldd	r23, Y+61	; 0x3d
     688:	8e ad       	ldd	r24, Y+62	; 0x3e
     68a:	9f ad       	ldd	r25, Y+63	; 0x3f
     68c:	0e 94 b4 12 	call	0x2568	; 0x2568 <__mulsf3>
     690:	c0 55       	subi	r28, 0x50	; 80
     692:	df 4f       	sbci	r29, 0xFF	; 255
     694:	68 83       	st	Y, r22
     696:	79 83       	std	Y+1, r23	; 0x01
     698:	8a 83       	std	Y+2, r24	; 0x02
     69a:	9b 83       	std	Y+3, r25	; 0x03
     69c:	c0 5b       	subi	r28, 0xB0	; 176
     69e:	d0 40       	sbci	r29, 0x00	; 0
     6a0:	c0 55       	subi	r28, 0x50	; 80
     6a2:	df 4f       	sbci	r29, 0xFF	; 255
     6a4:	88 81       	ld	r24, Y
     6a6:	99 81       	ldd	r25, Y+1	; 0x01
     6a8:	aa 81       	ldd	r26, Y+2	; 0x02
     6aa:	bb 81       	ldd	r27, Y+3	; 0x03
     6ac:	c0 5b       	subi	r28, 0xB0	; 176
     6ae:	d0 40       	sbci	r29, 0x00	; 0
     6b0:	f8 01       	movw	r30, r16
     6b2:	80 83       	st	Z, r24
     6b4:	91 83       	std	Z+1, r25	; 0x01
     6b6:	a2 83       	std	Z+2, r26	; 0x02
     6b8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     6ba:	ce 01       	movw	r24, r28
     6bc:	80 5c       	subi	r24, 0xC0	; 192
     6be:	9f 4f       	sbci	r25, 0xFF	; 255
     6c0:	20 e0       	ldi	r18, 0x00	; 0
     6c2:	30 e0       	ldi	r19, 0x00	; 0
     6c4:	40 e8       	ldi	r20, 0x80	; 128
     6c6:	5f e3       	ldi	r21, 0x3F	; 63
     6c8:	dc 01       	movw	r26, r24
     6ca:	6d 91       	ld	r22, X+
     6cc:	7d 91       	ld	r23, X+
     6ce:	8d 91       	ld	r24, X+
     6d0:	9c 91       	ld	r25, X
     6d2:	0e 94 94 11 	call	0x2328	; 0x2328 <__cmpsf2>
     6d6:	88 23       	and	r24, r24
     6d8:	4c f4       	brge	.+18     	; 0x6ec <__FUSE_REGION_LENGTH__+0x2ec>
		__ticks = 1;
     6da:	ce 01       	movw	r24, r28
     6dc:	8c 5b       	subi	r24, 0xBC	; 188
     6de:	9f 4f       	sbci	r25, 0xFF	; 255
     6e0:	21 e0       	ldi	r18, 0x01	; 1
     6e2:	30 e0       	ldi	r19, 0x00	; 0
     6e4:	fc 01       	movw	r30, r24
     6e6:	31 83       	std	Z+1, r19	; 0x01
     6e8:	20 83       	st	Z, r18
     6ea:	9a c0       	rjmp	.+308    	; 0x820 <__FUSE_REGION_LENGTH__+0x420>
	else if (__tmp > 65535)
     6ec:	ce 01       	movw	r24, r28
     6ee:	80 5c       	subi	r24, 0xC0	; 192
     6f0:	9f 4f       	sbci	r25, 0xFF	; 255
     6f2:	20 e0       	ldi	r18, 0x00	; 0
     6f4:	3f ef       	ldi	r19, 0xFF	; 255
     6f6:	4f e7       	ldi	r20, 0x7F	; 127
     6f8:	57 e4       	ldi	r21, 0x47	; 71
     6fa:	dc 01       	movw	r26, r24
     6fc:	6d 91       	ld	r22, X+
     6fe:	7d 91       	ld	r23, X+
     700:	8d 91       	ld	r24, X+
     702:	9c 91       	ld	r25, X
     704:	0e 94 af 12 	call	0x255e	; 0x255e <__gesf2>
     708:	18 16       	cp	r1, r24
     70a:	0c f0       	brlt	.+2      	; 0x70e <__FUSE_REGION_LENGTH__+0x30e>
     70c:	6b c0       	rjmp	.+214    	; 0x7e4 <__FUSE_REGION_LENGTH__+0x3e4>
		__ticks = (uint16_t) (__ms * 10.0);
     70e:	20 e0       	ldi	r18, 0x00	; 0
     710:	30 e0       	ldi	r19, 0x00	; 0
     712:	40 e2       	ldi	r20, 0x20	; 32
     714:	51 e4       	ldi	r21, 0x41	; 65
     716:	6c ad       	ldd	r22, Y+60	; 0x3c
     718:	7d ad       	ldd	r23, Y+61	; 0x3d
     71a:	8e ad       	ldd	r24, Y+62	; 0x3e
     71c:	9f ad       	ldd	r25, Y+63	; 0x3f
     71e:	0e 94 b4 12 	call	0x2568	; 0x2568 <__mulsf3>
     722:	cc 54       	subi	r28, 0x4C	; 76
     724:	df 4f       	sbci	r29, 0xFF	; 255
     726:	68 83       	st	Y, r22
     728:	79 83       	std	Y+1, r23	; 0x01
     72a:	8a 83       	std	Y+2, r24	; 0x02
     72c:	9b 83       	std	Y+3, r25	; 0x03
     72e:	c4 5b       	subi	r28, 0xB4	; 180
     730:	d0 40       	sbci	r29, 0x00	; 0
     732:	cc 54       	subi	r28, 0x4C	; 76
     734:	df 4f       	sbci	r29, 0xFF	; 255
     736:	88 81       	ld	r24, Y
     738:	99 81       	ldd	r25, Y+1	; 0x01
     73a:	aa 81       	ldd	r26, Y+2	; 0x02
     73c:	bb 81       	ldd	r27, Y+3	; 0x03
     73e:	c4 5b       	subi	r28, 0xB4	; 180
     740:	d0 40       	sbci	r29, 0x00	; 0
     742:	ec 96       	adiw	r28, 0x3c	; 60
     744:	8c af       	std	Y+60, r24	; 0x3c
     746:	9d af       	std	Y+61, r25	; 0x3d
     748:	ae af       	std	Y+62, r26	; 0x3e
     74a:	bf af       	std	Y+63, r27	; 0x3f
     74c:	ec 97       	sbiw	r28, 0x3c	; 60
     74e:	8e 01       	movw	r16, r28
     750:	0c 5b       	subi	r16, 0xBC	; 188
     752:	1f 4f       	sbci	r17, 0xFF	; 255
     754:	ec 96       	adiw	r28, 0x3c	; 60
     756:	6c ad       	ldd	r22, Y+60	; 0x3c
     758:	7d ad       	ldd	r23, Y+61	; 0x3d
     75a:	8e ad       	ldd	r24, Y+62	; 0x3e
     75c:	9f ad       	ldd	r25, Y+63	; 0x3f
     75e:	ec 97       	sbiw	r28, 0x3c	; 60
     760:	0e 94 0b 12 	call	0x2416	; 0x2416 <__fixunssfsi>
     764:	c8 54       	subi	r28, 0x48	; 72
     766:	df 4f       	sbci	r29, 0xFF	; 255
     768:	68 83       	st	Y, r22
     76a:	79 83       	std	Y+1, r23	; 0x01
     76c:	8a 83       	std	Y+2, r24	; 0x02
     76e:	9b 83       	std	Y+3, r25	; 0x03
     770:	c8 5b       	subi	r28, 0xB8	; 184
     772:	d0 40       	sbci	r29, 0x00	; 0
     774:	c8 54       	subi	r28, 0x48	; 72
     776:	df 4f       	sbci	r29, 0xFF	; 255
     778:	e8 81       	ld	r30, Y
     77a:	f9 81       	ldd	r31, Y+1	; 0x01
     77c:	c8 5b       	subi	r28, 0xB8	; 184
     77e:	d0 40       	sbci	r29, 0x00	; 0
     780:	d8 01       	movw	r26, r16
     782:	ed 93       	st	X+, r30
     784:	fc 93       	st	X, r31
		while(__ticks)
     786:	25 c0       	rjmp	.+74     	; 0x7d2 <__FUSE_REGION_LENGTH__+0x3d2>
     788:	ce 01       	movw	r24, r28
     78a:	8a 5b       	subi	r24, 0xBA	; 186
     78c:	9f 4f       	sbci	r25, 0xFF	; 255
     78e:	20 e9       	ldi	r18, 0x90	; 144
     790:	31 e0       	ldi	r19, 0x01	; 1
     792:	dc 01       	movw	r26, r24
     794:	2d 93       	st	X+, r18
     796:	3c 93       	st	X, r19
	__asm__ volatile (
     798:	ce 01       	movw	r24, r28
     79a:	8a 5b       	subi	r24, 0xBA	; 186
     79c:	9f 4f       	sbci	r25, 0xFF	; 255
     79e:	fc 01       	movw	r30, r24
     7a0:	80 81       	ld	r24, Z
     7a2:	91 81       	ldd	r25, Z+1	; 0x01
     7a4:	01 97       	sbiw	r24, 0x01	; 1
     7a6:	f1 f7       	brne	.-4      	; 0x7a4 <__FUSE_REGION_LENGTH__+0x3a4>
     7a8:	9e 01       	movw	r18, r28
     7aa:	2a 5b       	subi	r18, 0xBA	; 186
     7ac:	3f 4f       	sbci	r19, 0xFF	; 255
     7ae:	d9 01       	movw	r26, r18
     7b0:	8d 93       	st	X+, r24
     7b2:	9c 93       	st	X, r25
}
     7b4:	00 00       	nop
			__ticks --;
     7b6:	ce 01       	movw	r24, r28
     7b8:	8c 5b       	subi	r24, 0xBC	; 188
     7ba:	9f 4f       	sbci	r25, 0xFF	; 255
     7bc:	9e 01       	movw	r18, r28
     7be:	2c 5b       	subi	r18, 0xBC	; 188
     7c0:	3f 4f       	sbci	r19, 0xFF	; 255
     7c2:	f9 01       	movw	r30, r18
     7c4:	20 81       	ld	r18, Z
     7c6:	31 81       	ldd	r19, Z+1	; 0x01
     7c8:	21 50       	subi	r18, 0x01	; 1
     7ca:	31 09       	sbc	r19, r1
     7cc:	dc 01       	movw	r26, r24
     7ce:	2d 93       	st	X+, r18
     7d0:	3c 93       	st	X, r19
		while(__ticks)
     7d2:	ce 01       	movw	r24, r28
     7d4:	8c 5b       	subi	r24, 0xBC	; 188
     7d6:	9f 4f       	sbci	r25, 0xFF	; 255
     7d8:	fc 01       	movw	r30, r24
     7da:	80 81       	ld	r24, Z
     7dc:	91 81       	ldd	r25, Z+1	; 0x01
     7de:	89 2b       	or	r24, r25
     7e0:	99 f6       	brne	.-90     	; 0x788 <__FUSE_REGION_LENGTH__+0x388>
		return;
     7e2:	8f c0       	rjmp	.+286    	; 0x902 <__stack+0x3>
		__ticks = (uint16_t)__tmp;
     7e4:	8e 01       	movw	r16, r28
     7e6:	0c 5b       	subi	r16, 0xBC	; 188
     7e8:	1f 4f       	sbci	r17, 0xFF	; 255
     7ea:	ce 01       	movw	r24, r28
     7ec:	80 5c       	subi	r24, 0xC0	; 192
     7ee:	9f 4f       	sbci	r25, 0xFF	; 255
     7f0:	dc 01       	movw	r26, r24
     7f2:	6d 91       	ld	r22, X+
     7f4:	7d 91       	ld	r23, X+
     7f6:	8d 91       	ld	r24, X+
     7f8:	9c 91       	ld	r25, X
     7fa:	0e 94 0b 12 	call	0x2416	; 0x2416 <__fixunssfsi>
     7fe:	c4 54       	subi	r28, 0x44	; 68
     800:	df 4f       	sbci	r29, 0xFF	; 255
     802:	68 83       	st	Y, r22
     804:	79 83       	std	Y+1, r23	; 0x01
     806:	8a 83       	std	Y+2, r24	; 0x02
     808:	9b 83       	std	Y+3, r25	; 0x03
     80a:	cc 5b       	subi	r28, 0xBC	; 188
     80c:	d0 40       	sbci	r29, 0x00	; 0
     80e:	c4 54       	subi	r28, 0x44	; 68
     810:	df 4f       	sbci	r29, 0xFF	; 255
     812:	88 81       	ld	r24, Y
     814:	99 81       	ldd	r25, Y+1	; 0x01
     816:	cc 5b       	subi	r28, 0xBC	; 188
     818:	d0 40       	sbci	r29, 0x00	; 0
     81a:	f8 01       	movw	r30, r16
     81c:	91 83       	std	Z+1, r25	; 0x01
     81e:	80 83       	st	Z, r24
     820:	ce 01       	movw	r24, r28
     822:	88 5b       	subi	r24, 0xB8	; 184
     824:	9f 4f       	sbci	r25, 0xFF	; 255
     826:	9e 01       	movw	r18, r28
     828:	2c 5b       	subi	r18, 0xBC	; 188
     82a:	3f 4f       	sbci	r19, 0xFF	; 255
     82c:	d9 01       	movw	r26, r18
     82e:	2d 91       	ld	r18, X+
     830:	3c 91       	ld	r19, X
     832:	fc 01       	movw	r30, r24
     834:	31 83       	std	Z+1, r19	; 0x01
     836:	20 83       	st	Z, r18
	__asm__ volatile (
     838:	ce 01       	movw	r24, r28
     83a:	88 5b       	subi	r24, 0xB8	; 184
     83c:	9f 4f       	sbci	r25, 0xFF	; 255
     83e:	dc 01       	movw	r26, r24
     840:	8d 91       	ld	r24, X+
     842:	9c 91       	ld	r25, X
     844:	01 97       	sbiw	r24, 0x01	; 1
     846:	f1 f7       	brne	.-4      	; 0x844 <__FUSE_REGION_LENGTH__+0x444>
     848:	9e 01       	movw	r18, r28
     84a:	28 5b       	subi	r18, 0xB8	; 184
     84c:	3f 4f       	sbci	r19, 0xFF	; 255
     84e:	f9 01       	movw	r30, r18
     850:	91 83       	std	Z+1, r25	; 0x01
     852:	80 83       	st	Z, r24
}
     854:	56 c0       	rjmp	.+172    	; 0x902 <__stack+0x3>
	else if (__tmp > 255)
     856:	20 e0       	ldi	r18, 0x00	; 0
     858:	30 e0       	ldi	r19, 0x00	; 0
     85a:	4f e7       	ldi	r20, 0x7F	; 127
     85c:	53 e4       	ldi	r21, 0x43	; 67
     85e:	6b a9       	ldd	r22, Y+51	; 0x33
     860:	7c a9       	ldd	r23, Y+52	; 0x34
     862:	8d a9       	ldd	r24, Y+53	; 0x35
     864:	9e a9       	ldd	r25, Y+54	; 0x36
     866:	0e 94 af 12 	call	0x255e	; 0x255e <__gesf2>
     86a:	18 16       	cp	r1, r24
     86c:	b4 f5       	brge	.+108    	; 0x8da <__FUSE_REGION_LENGTH__+0x4da>
		uint16_t __ticks=(uint16_t)__tmp2;
     86e:	8e 01       	movw	r16, r28
     870:	06 5b       	subi	r16, 0xB6	; 182
     872:	1f 4f       	sbci	r17, 0xFF	; 255
     874:	6f a9       	ldd	r22, Y+55	; 0x37
     876:	78 ad       	ldd	r23, Y+56	; 0x38
     878:	89 ad       	ldd	r24, Y+57	; 0x39
     87a:	9a ad       	ldd	r25, Y+58	; 0x3a
     87c:	0e 94 0b 12 	call	0x2416	; 0x2416 <__fixunssfsi>
     880:	c0 54       	subi	r28, 0x40	; 64
     882:	df 4f       	sbci	r29, 0xFF	; 255
     884:	68 83       	st	Y, r22
     886:	79 83       	std	Y+1, r23	; 0x01
     888:	8a 83       	std	Y+2, r24	; 0x02
     88a:	9b 83       	std	Y+3, r25	; 0x03
     88c:	c0 5c       	subi	r28, 0xC0	; 192
     88e:	d0 40       	sbci	r29, 0x00	; 0
     890:	c0 54       	subi	r28, 0x40	; 64
     892:	df 4f       	sbci	r29, 0xFF	; 255
     894:	e8 81       	ld	r30, Y
     896:	f9 81       	ldd	r31, Y+1	; 0x01
     898:	c0 5c       	subi	r28, 0xC0	; 192
     89a:	d0 40       	sbci	r29, 0x00	; 0
     89c:	d8 01       	movw	r26, r16
     89e:	ed 93       	st	X+, r30
     8a0:	fc 93       	st	X, r31
     8a2:	ce 01       	movw	r24, r28
     8a4:	84 5b       	subi	r24, 0xB4	; 180
     8a6:	9f 4f       	sbci	r25, 0xFF	; 255
     8a8:	9e 01       	movw	r18, r28
     8aa:	26 5b       	subi	r18, 0xB6	; 182
     8ac:	3f 4f       	sbci	r19, 0xFF	; 255
     8ae:	d9 01       	movw	r26, r18
     8b0:	2d 91       	ld	r18, X+
     8b2:	3c 91       	ld	r19, X
     8b4:	fc 01       	movw	r30, r24
     8b6:	31 83       	std	Z+1, r19	; 0x01
     8b8:	20 83       	st	Z, r18
	__asm__ volatile (
     8ba:	ce 01       	movw	r24, r28
     8bc:	84 5b       	subi	r24, 0xB4	; 180
     8be:	9f 4f       	sbci	r25, 0xFF	; 255
     8c0:	dc 01       	movw	r26, r24
     8c2:	8d 91       	ld	r24, X+
     8c4:	9c 91       	ld	r25, X
     8c6:	01 97       	sbiw	r24, 0x01	; 1
     8c8:	f1 f7       	brne	.-4      	; 0x8c6 <__FUSE_REGION_LENGTH__+0x4c6>
     8ca:	9e 01       	movw	r18, r28
     8cc:	24 5b       	subi	r18, 0xB4	; 180
     8ce:	3f 4f       	sbci	r19, 0xFF	; 255
     8d0:	f9 01       	movw	r30, r18
     8d2:	91 83       	std	Z+1, r25	; 0x01
     8d4:	80 83       	st	Z, r24
}
     8d6:	00 00       	nop
		return;
     8d8:	28 c0       	rjmp	.+80     	; 0x92a <__stack+0x2b>
		__ticks = (uint8_t)__tmp;
     8da:	6b a9       	ldd	r22, Y+51	; 0x33
     8dc:	7c a9       	ldd	r23, Y+52	; 0x34
     8de:	8d a9       	ldd	r24, Y+53	; 0x35
     8e0:	9e a9       	ldd	r25, Y+54	; 0x36
     8e2:	0e 94 0b 12 	call	0x2416	; 0x2416 <__fixunssfsi>
     8e6:	cc 53       	subi	r28, 0x3C	; 60
     8e8:	df 4f       	sbci	r29, 0xFF	; 255
     8ea:	68 83       	st	Y, r22
     8ec:	79 83       	std	Y+1, r23	; 0x01
     8ee:	8a 83       	std	Y+2, r24	; 0x02
     8f0:	9b 83       	std	Y+3, r25	; 0x03
     8f2:	c4 5c       	subi	r28, 0xC4	; 196
     8f4:	d0 40       	sbci	r29, 0x00	; 0
     8f6:	cc 53       	subi	r28, 0x3C	; 60
     8f8:	df 4f       	sbci	r29, 0xFF	; 255
     8fa:	f8 81       	ld	r31, Y
     8fc:	c4 5c       	subi	r28, 0xC4	; 196
     8fe:	d0 40       	sbci	r29, 0x00	; 0
     900:	fb af       	std	Y+59, r31	; 0x3b
     902:	ce 01       	movw	r24, r28
     904:	82 5b       	subi	r24, 0xB2	; 178
     906:	9f 4f       	sbci	r25, 0xFF	; 255
     908:	2b ad       	ldd	r18, Y+59	; 0x3b
     90a:	dc 01       	movw	r26, r24
     90c:	2c 93       	st	X, r18
	__asm__ volatile (
     90e:	ce 01       	movw	r24, r28
     910:	82 5b       	subi	r24, 0xB2	; 178
     912:	9f 4f       	sbci	r25, 0xFF	; 255
     914:	fc 01       	movw	r30, r24
     916:	80 81       	ld	r24, Z
     918:	28 2f       	mov	r18, r24
     91a:	2a 95       	dec	r18
     91c:	f1 f7       	brne	.-4      	; 0x91a <__stack+0x1b>
     91e:	ce 01       	movw	r24, r28
     920:	82 5b       	subi	r24, 0xB2	; 178
     922:	9f 4f       	sbci	r25, 0xFF	; 255
     924:	dc 01       	movw	r26, r24
     926:	2c 93       	st	X, r18
}
     928:	00 00       	nop

	_delay_us(200);

	LCD_Port = ((LCD_Port & 0x0F) | (cmnd << 4)) >> 2;  /* sending lower nibble */
     92a:	85 e2       	ldi	r24, 0x25	; 37
     92c:	90 e0       	ldi	r25, 0x00	; 0
     92e:	fc 01       	movw	r30, r24
     930:	80 81       	ld	r24, Z
     932:	88 2f       	mov	r24, r24
     934:	90 e0       	ldi	r25, 0x00	; 0
     936:	9c 01       	movw	r18, r24
     938:	2f 70       	andi	r18, 0x0F	; 15
     93a:	33 27       	eor	r19, r19
     93c:	ce 01       	movw	r24, r28
     93e:	81 59       	subi	r24, 0x91	; 145
     940:	9f 4f       	sbci	r25, 0xFF	; 255
     942:	dc 01       	movw	r26, r24
     944:	8c 91       	ld	r24, X
     946:	88 2f       	mov	r24, r24
     948:	90 e0       	ldi	r25, 0x00	; 0
     94a:	82 95       	swap	r24
     94c:	92 95       	swap	r25
     94e:	90 7f       	andi	r25, 0xF0	; 240
     950:	98 27       	eor	r25, r24
     952:	80 7f       	andi	r24, 0xF0	; 240
     954:	98 27       	eor	r25, r24
     956:	82 2b       	or	r24, r18
     958:	93 2b       	or	r25, r19
     95a:	9c 01       	movw	r18, r24
     95c:	35 95       	asr	r19
     95e:	27 95       	ror	r18
     960:	35 95       	asr	r19
     962:	27 95       	ror	r18
     964:	85 e2       	ldi	r24, 0x25	; 37
     966:	90 e0       	ldi	r25, 0x00	; 0
     968:	fc 01       	movw	r30, r24
     96a:	20 83       	st	Z, r18
	LCD_Port &= ~ (1<<RS);		/* RS=0, command reg. */
     96c:	85 e2       	ldi	r24, 0x25	; 37
     96e:	90 e0       	ldi	r25, 0x00	; 0
     970:	dc 01       	movw	r26, r24
     972:	2c 91       	ld	r18, X
     974:	85 e2       	ldi	r24, 0x25	; 37
     976:	90 e0       	ldi	r25, 0x00	; 0
     978:	2e 7f       	andi	r18, 0xFE	; 254
     97a:	fc 01       	movw	r30, r24
     97c:	20 83       	st	Z, r18
	LCD_Port |= (1<<EN);
     97e:	85 e2       	ldi	r24, 0x25	; 37
     980:	90 e0       	ldi	r25, 0x00	; 0
     982:	dc 01       	movw	r26, r24
     984:	2c 91       	ld	r18, X
     986:	85 e2       	ldi	r24, 0x25	; 37
     988:	90 e0       	ldi	r25, 0x00	; 0
     98a:	22 60       	ori	r18, 0x02	; 2
     98c:	fc 01       	movw	r30, r24
     98e:	20 83       	st	Z, r18
     990:	80 e0       	ldi	r24, 0x00	; 0
     992:	90 e0       	ldi	r25, 0x00	; 0
     994:	a0 e8       	ldi	r26, 0x80	; 128
     996:	bf e3       	ldi	r27, 0x3F	; 63
     998:	8f 87       	std	Y+15, r24	; 0x0f
     99a:	98 8b       	std	Y+16, r25	; 0x10
     99c:	a9 8b       	std	Y+17, r26	; 0x11
     99e:	ba 8b       	std	Y+18, r27	; 0x12
	__tmp = ((F_CPU) / 3e6) * __us;
     9a0:	2b ea       	ldi	r18, 0xAB	; 171
     9a2:	3a ea       	ldi	r19, 0xAA	; 170
     9a4:	4a ea       	ldi	r20, 0xAA	; 170
     9a6:	50 e4       	ldi	r21, 0x40	; 64
     9a8:	6f 85       	ldd	r22, Y+15	; 0x0f
     9aa:	78 89       	ldd	r23, Y+16	; 0x10
     9ac:	89 89       	ldd	r24, Y+17	; 0x11
     9ae:	9a 89       	ldd	r25, Y+18	; 0x12
     9b0:	0e 94 b4 12 	call	0x2568	; 0x2568 <__mulsf3>
     9b4:	c8 53       	subi	r28, 0x38	; 56
     9b6:	df 4f       	sbci	r29, 0xFF	; 255
     9b8:	68 83       	st	Y, r22
     9ba:	79 83       	std	Y+1, r23	; 0x01
     9bc:	8a 83       	std	Y+2, r24	; 0x02
     9be:	9b 83       	std	Y+3, r25	; 0x03
     9c0:	c8 5c       	subi	r28, 0xC8	; 200
     9c2:	d0 40       	sbci	r29, 0x00	; 0
     9c4:	c8 53       	subi	r28, 0x38	; 56
     9c6:	df 4f       	sbci	r29, 0xFF	; 255
     9c8:	88 81       	ld	r24, Y
     9ca:	99 81       	ldd	r25, Y+1	; 0x01
     9cc:	aa 81       	ldd	r26, Y+2	; 0x02
     9ce:	bb 81       	ldd	r27, Y+3	; 0x03
     9d0:	c8 5c       	subi	r28, 0xC8	; 200
     9d2:	d0 40       	sbci	r29, 0x00	; 0
     9d4:	8b 8b       	std	Y+19, r24	; 0x13
     9d6:	9c 8b       	std	Y+20, r25	; 0x14
     9d8:	ad 8b       	std	Y+21, r26	; 0x15
     9da:	be 8b       	std	Y+22, r27	; 0x16
	__tmp2 = ((F_CPU) / 4e6) * __us;
     9dc:	20 e0       	ldi	r18, 0x00	; 0
     9de:	30 e0       	ldi	r19, 0x00	; 0
     9e0:	40 e8       	ldi	r20, 0x80	; 128
     9e2:	50 e4       	ldi	r21, 0x40	; 64
     9e4:	6f 85       	ldd	r22, Y+15	; 0x0f
     9e6:	78 89       	ldd	r23, Y+16	; 0x10
     9e8:	89 89       	ldd	r24, Y+17	; 0x11
     9ea:	9a 89       	ldd	r25, Y+18	; 0x12
     9ec:	0e 94 b4 12 	call	0x2568	; 0x2568 <__mulsf3>
     9f0:	c4 53       	subi	r28, 0x34	; 52
     9f2:	df 4f       	sbci	r29, 0xFF	; 255
     9f4:	68 83       	st	Y, r22
     9f6:	79 83       	std	Y+1, r23	; 0x01
     9f8:	8a 83       	std	Y+2, r24	; 0x02
     9fa:	9b 83       	std	Y+3, r25	; 0x03
     9fc:	cc 5c       	subi	r28, 0xCC	; 204
     9fe:	d0 40       	sbci	r29, 0x00	; 0
     a00:	c4 53       	subi	r28, 0x34	; 52
     a02:	df 4f       	sbci	r29, 0xFF	; 255
     a04:	88 81       	ld	r24, Y
     a06:	99 81       	ldd	r25, Y+1	; 0x01
     a08:	aa 81       	ldd	r26, Y+2	; 0x02
     a0a:	bb 81       	ldd	r27, Y+3	; 0x03
     a0c:	cc 5c       	subi	r28, 0xCC	; 204
     a0e:	d0 40       	sbci	r29, 0x00	; 0
     a10:	8f 8b       	std	Y+23, r24	; 0x17
     a12:	98 8f       	std	Y+24, r25	; 0x18
     a14:	a9 8f       	std	Y+25, r26	; 0x19
     a16:	ba 8f       	std	Y+26, r27	; 0x1a
	if (__tmp < 1.0)
     a18:	20 e0       	ldi	r18, 0x00	; 0
     a1a:	30 e0       	ldi	r19, 0x00	; 0
     a1c:	40 e8       	ldi	r20, 0x80	; 128
     a1e:	5f e3       	ldi	r21, 0x3F	; 63
     a20:	6b 89       	ldd	r22, Y+19	; 0x13
     a22:	7c 89       	ldd	r23, Y+20	; 0x14
     a24:	8d 89       	ldd	r24, Y+21	; 0x15
     a26:	9e 89       	ldd	r25, Y+22	; 0x16
     a28:	0e 94 94 11 	call	0x2328	; 0x2328 <__cmpsf2>
     a2c:	88 23       	and	r24, r24
     a2e:	1c f4       	brge	.+6      	; 0xa36 <__stack+0x137>
		__ticks = 1;
     a30:	81 e0       	ldi	r24, 0x01	; 1
     a32:	8b 8f       	std	Y+27, r24	; 0x1b
     a34:	18 c1       	rjmp	.+560    	; 0xc66 <__stack+0x367>
	else if (__tmp2 > 65535)
     a36:	20 e0       	ldi	r18, 0x00	; 0
     a38:	3f ef       	ldi	r19, 0xFF	; 255
     a3a:	4f e7       	ldi	r20, 0x7F	; 127
     a3c:	57 e4       	ldi	r21, 0x47	; 71
     a3e:	6f 89       	ldd	r22, Y+23	; 0x17
     a40:	78 8d       	ldd	r23, Y+24	; 0x18
     a42:	89 8d       	ldd	r24, Y+25	; 0x19
     a44:	9a 8d       	ldd	r25, Y+26	; 0x1a
     a46:	0e 94 af 12 	call	0x255e	; 0x255e <__gesf2>
     a4a:	18 16       	cp	r1, r24
     a4c:	0c f0       	brlt	.+2      	; 0xa50 <__stack+0x151>
     a4e:	c9 c0       	rjmp	.+402    	; 0xbe2 <__stack+0x2e3>
		_delay_ms(__us / 1000.0);
     a50:	20 e0       	ldi	r18, 0x00	; 0
     a52:	30 e0       	ldi	r19, 0x00	; 0
     a54:	4a e7       	ldi	r20, 0x7A	; 122
     a56:	54 e4       	ldi	r21, 0x44	; 68
     a58:	6f 85       	ldd	r22, Y+15	; 0x0f
     a5a:	78 89       	ldd	r23, Y+16	; 0x10
     a5c:	89 89       	ldd	r24, Y+17	; 0x11
     a5e:	9a 89       	ldd	r25, Y+18	; 0x12
     a60:	0e 94 99 11 	call	0x2332	; 0x2332 <__divsf3>
     a64:	c0 53       	subi	r28, 0x30	; 48
     a66:	df 4f       	sbci	r29, 0xFF	; 255
     a68:	68 83       	st	Y, r22
     a6a:	79 83       	std	Y+1, r23	; 0x01
     a6c:	8a 83       	std	Y+2, r24	; 0x02
     a6e:	9b 83       	std	Y+3, r25	; 0x03
     a70:	c0 5d       	subi	r28, 0xD0	; 208
     a72:	d0 40       	sbci	r29, 0x00	; 0
     a74:	c0 53       	subi	r28, 0x30	; 48
     a76:	df 4f       	sbci	r29, 0xFF	; 255
     a78:	88 81       	ld	r24, Y
     a7a:	99 81       	ldd	r25, Y+1	; 0x01
     a7c:	aa 81       	ldd	r26, Y+2	; 0x02
     a7e:	bb 81       	ldd	r27, Y+3	; 0x03
     a80:	c0 5d       	subi	r28, 0xD0	; 208
     a82:	d0 40       	sbci	r29, 0x00	; 0
     a84:	8c 8f       	std	Y+28, r24	; 0x1c
     a86:	9d 8f       	std	Y+29, r25	; 0x1d
     a88:	ae 8f       	std	Y+30, r26	; 0x1e
     a8a:	bf 8f       	std	Y+31, r27	; 0x1f
	__tmp = ((F_CPU) / 4e3) * __ms;
     a8c:	20 e0       	ldi	r18, 0x00	; 0
     a8e:	30 e0       	ldi	r19, 0x00	; 0
     a90:	4a e7       	ldi	r20, 0x7A	; 122
     a92:	55 e4       	ldi	r21, 0x45	; 69
     a94:	6c 8d       	ldd	r22, Y+28	; 0x1c
     a96:	7d 8d       	ldd	r23, Y+29	; 0x1d
     a98:	8e 8d       	ldd	r24, Y+30	; 0x1e
     a9a:	9f 8d       	ldd	r25, Y+31	; 0x1f
     a9c:	0e 94 b4 12 	call	0x2568	; 0x2568 <__mulsf3>
     aa0:	cc 52       	subi	r28, 0x2C	; 44
     aa2:	df 4f       	sbci	r29, 0xFF	; 255
     aa4:	68 83       	st	Y, r22
     aa6:	79 83       	std	Y+1, r23	; 0x01
     aa8:	8a 83       	std	Y+2, r24	; 0x02
     aaa:	9b 83       	std	Y+3, r25	; 0x03
     aac:	c4 5d       	subi	r28, 0xD4	; 212
     aae:	d0 40       	sbci	r29, 0x00	; 0
     ab0:	cc 52       	subi	r28, 0x2C	; 44
     ab2:	df 4f       	sbci	r29, 0xFF	; 255
     ab4:	88 81       	ld	r24, Y
     ab6:	99 81       	ldd	r25, Y+1	; 0x01
     ab8:	aa 81       	ldd	r26, Y+2	; 0x02
     aba:	bb 81       	ldd	r27, Y+3	; 0x03
     abc:	c4 5d       	subi	r28, 0xD4	; 212
     abe:	d0 40       	sbci	r29, 0x00	; 0
     ac0:	88 a3       	std	Y+32, r24	; 0x20
     ac2:	99 a3       	std	Y+33, r25	; 0x21
     ac4:	aa a3       	std	Y+34, r26	; 0x22
     ac6:	bb a3       	std	Y+35, r27	; 0x23
	if (__tmp < 1.0)
     ac8:	20 e0       	ldi	r18, 0x00	; 0
     aca:	30 e0       	ldi	r19, 0x00	; 0
     acc:	40 e8       	ldi	r20, 0x80	; 128
     ace:	5f e3       	ldi	r21, 0x3F	; 63
     ad0:	68 a1       	ldd	r22, Y+32	; 0x20
     ad2:	79 a1       	ldd	r23, Y+33	; 0x21
     ad4:	8a a1       	ldd	r24, Y+34	; 0x22
     ad6:	9b a1       	ldd	r25, Y+35	; 0x23
     ad8:	0e 94 94 11 	call	0x2328	; 0x2328 <__cmpsf2>
     adc:	88 23       	and	r24, r24
     ade:	2c f4       	brge	.+10     	; 0xaea <__stack+0x1eb>
		__ticks = 1;
     ae0:	81 e0       	ldi	r24, 0x01	; 1
     ae2:	90 e0       	ldi	r25, 0x00	; 0
     ae4:	9d a3       	std	Y+37, r25	; 0x25
     ae6:	8c a3       	std	Y+36, r24	; 0x24
     ae8:	71 c0       	rjmp	.+226    	; 0xbcc <__stack+0x2cd>
	else if (__tmp > 65535)
     aea:	20 e0       	ldi	r18, 0x00	; 0
     aec:	3f ef       	ldi	r19, 0xFF	; 255
     aee:	4f e7       	ldi	r20, 0x7F	; 127
     af0:	57 e4       	ldi	r21, 0x47	; 71
     af2:	68 a1       	ldd	r22, Y+32	; 0x20
     af4:	79 a1       	ldd	r23, Y+33	; 0x21
     af6:	8a a1       	ldd	r24, Y+34	; 0x22
     af8:	9b a1       	ldd	r25, Y+35	; 0x23
     afa:	0e 94 af 12 	call	0x255e	; 0x255e <__gesf2>
     afe:	18 16       	cp	r1, r24
     b00:	0c f0       	brlt	.+2      	; 0xb04 <__stack+0x205>
     b02:	4e c0       	rjmp	.+156    	; 0xba0 <__stack+0x2a1>
		__ticks = (uint16_t) (__ms * 10.0);
     b04:	20 e0       	ldi	r18, 0x00	; 0
     b06:	30 e0       	ldi	r19, 0x00	; 0
     b08:	40 e2       	ldi	r20, 0x20	; 32
     b0a:	51 e4       	ldi	r21, 0x41	; 65
     b0c:	6c 8d       	ldd	r22, Y+28	; 0x1c
     b0e:	7d 8d       	ldd	r23, Y+29	; 0x1d
     b10:	8e 8d       	ldd	r24, Y+30	; 0x1e
     b12:	9f 8d       	ldd	r25, Y+31	; 0x1f
     b14:	0e 94 b4 12 	call	0x2568	; 0x2568 <__mulsf3>
     b18:	c8 52       	subi	r28, 0x28	; 40
     b1a:	df 4f       	sbci	r29, 0xFF	; 255
     b1c:	68 83       	st	Y, r22
     b1e:	79 83       	std	Y+1, r23	; 0x01
     b20:	8a 83       	std	Y+2, r24	; 0x02
     b22:	9b 83       	std	Y+3, r25	; 0x03
     b24:	c8 5d       	subi	r28, 0xD8	; 216
     b26:	d0 40       	sbci	r29, 0x00	; 0
     b28:	c8 52       	subi	r28, 0x28	; 40
     b2a:	df 4f       	sbci	r29, 0xFF	; 255
     b2c:	88 81       	ld	r24, Y
     b2e:	99 81       	ldd	r25, Y+1	; 0x01
     b30:	aa 81       	ldd	r26, Y+2	; 0x02
     b32:	bb 81       	ldd	r27, Y+3	; 0x03
     b34:	c8 5d       	subi	r28, 0xD8	; 216
     b36:	d0 40       	sbci	r29, 0x00	; 0
     b38:	e8 96       	adiw	r28, 0x38	; 56
     b3a:	8c af       	std	Y+60, r24	; 0x3c
     b3c:	9d af       	std	Y+61, r25	; 0x3d
     b3e:	ae af       	std	Y+62, r26	; 0x3e
     b40:	bf af       	std	Y+63, r27	; 0x3f
     b42:	e8 97       	sbiw	r28, 0x38	; 56
     b44:	e8 96       	adiw	r28, 0x38	; 56
     b46:	6c ad       	ldd	r22, Y+60	; 0x3c
     b48:	7d ad       	ldd	r23, Y+61	; 0x3d
     b4a:	8e ad       	ldd	r24, Y+62	; 0x3e
     b4c:	9f ad       	ldd	r25, Y+63	; 0x3f
     b4e:	e8 97       	sbiw	r28, 0x38	; 56
     b50:	0e 94 0b 12 	call	0x2416	; 0x2416 <__fixunssfsi>
     b54:	c4 52       	subi	r28, 0x24	; 36
     b56:	df 4f       	sbci	r29, 0xFF	; 255
     b58:	68 83       	st	Y, r22
     b5a:	79 83       	std	Y+1, r23	; 0x01
     b5c:	8a 83       	std	Y+2, r24	; 0x02
     b5e:	9b 83       	std	Y+3, r25	; 0x03
     b60:	cc 5d       	subi	r28, 0xDC	; 220
     b62:	d0 40       	sbci	r29, 0x00	; 0
     b64:	c4 52       	subi	r28, 0x24	; 36
     b66:	df 4f       	sbci	r29, 0xFF	; 255
     b68:	a8 81       	ld	r26, Y
     b6a:	b9 81       	ldd	r27, Y+1	; 0x01
     b6c:	cc 5d       	subi	r28, 0xDC	; 220
     b6e:	d0 40       	sbci	r29, 0x00	; 0
     b70:	bd a3       	std	Y+37, r27	; 0x25
     b72:	ac a3       	std	Y+36, r26	; 0x24
		while(__ticks)
     b74:	10 c0       	rjmp	.+32     	; 0xb96 <__stack+0x297>
     b76:	80 e9       	ldi	r24, 0x90	; 144
     b78:	91 e0       	ldi	r25, 0x01	; 1
     b7a:	9f a3       	std	Y+39, r25	; 0x27
     b7c:	8e a3       	std	Y+38, r24	; 0x26
	__asm__ volatile (
     b7e:	8e a1       	ldd	r24, Y+38	; 0x26
     b80:	9f a1       	ldd	r25, Y+39	; 0x27
     b82:	01 97       	sbiw	r24, 0x01	; 1
     b84:	f1 f7       	brne	.-4      	; 0xb82 <__stack+0x283>
     b86:	9f a3       	std	Y+39, r25	; 0x27
     b88:	8e a3       	std	Y+38, r24	; 0x26
}
     b8a:	00 00       	nop
			__ticks --;
     b8c:	8c a1       	ldd	r24, Y+36	; 0x24
     b8e:	9d a1       	ldd	r25, Y+37	; 0x25
     b90:	01 97       	sbiw	r24, 0x01	; 1
     b92:	9d a3       	std	Y+37, r25	; 0x25
     b94:	8c a3       	std	Y+36, r24	; 0x24
		while(__ticks)
     b96:	8c a1       	ldd	r24, Y+36	; 0x24
     b98:	9d a1       	ldd	r25, Y+37	; 0x25
     b9a:	89 2b       	or	r24, r25
     b9c:	61 f7       	brne	.-40     	; 0xb76 <__stack+0x277>
		return;
     b9e:	63 c0       	rjmp	.+198    	; 0xc66 <__stack+0x367>
		__ticks = (uint16_t)__tmp;
     ba0:	68 a1       	ldd	r22, Y+32	; 0x20
     ba2:	79 a1       	ldd	r23, Y+33	; 0x21
     ba4:	8a a1       	ldd	r24, Y+34	; 0x22
     ba6:	9b a1       	ldd	r25, Y+35	; 0x23
     ba8:	0e 94 0b 12 	call	0x2416	; 0x2416 <__fixunssfsi>
     bac:	c0 52       	subi	r28, 0x20	; 32
     bae:	df 4f       	sbci	r29, 0xFF	; 255
     bb0:	68 83       	st	Y, r22
     bb2:	79 83       	std	Y+1, r23	; 0x01
     bb4:	8a 83       	std	Y+2, r24	; 0x02
     bb6:	9b 83       	std	Y+3, r25	; 0x03
     bb8:	c0 5e       	subi	r28, 0xE0	; 224
     bba:	d0 40       	sbci	r29, 0x00	; 0
     bbc:	c0 52       	subi	r28, 0x20	; 32
     bbe:	df 4f       	sbci	r29, 0xFF	; 255
     bc0:	e8 81       	ld	r30, Y
     bc2:	f9 81       	ldd	r31, Y+1	; 0x01
     bc4:	c0 5e       	subi	r28, 0xE0	; 224
     bc6:	d0 40       	sbci	r29, 0x00	; 0
     bc8:	fd a3       	std	Y+37, r31	; 0x25
     bca:	ec a3       	std	Y+36, r30	; 0x24
     bcc:	8c a1       	ldd	r24, Y+36	; 0x24
     bce:	9d a1       	ldd	r25, Y+37	; 0x25
     bd0:	99 a7       	std	Y+41, r25	; 0x29
     bd2:	88 a7       	std	Y+40, r24	; 0x28
	__asm__ volatile (
     bd4:	88 a5       	ldd	r24, Y+40	; 0x28
     bd6:	99 a5       	ldd	r25, Y+41	; 0x29
     bd8:	01 97       	sbiw	r24, 0x01	; 1
     bda:	f1 f7       	brne	.-4      	; 0xbd8 <__stack+0x2d9>
     bdc:	99 a7       	std	Y+41, r25	; 0x29
     bde:	88 a7       	std	Y+40, r24	; 0x28
}
     be0:	42 c0       	rjmp	.+132    	; 0xc66 <__stack+0x367>
	else if (__tmp > 255)
     be2:	20 e0       	ldi	r18, 0x00	; 0
     be4:	30 e0       	ldi	r19, 0x00	; 0
     be6:	4f e7       	ldi	r20, 0x7F	; 127
     be8:	53 e4       	ldi	r21, 0x43	; 67
     bea:	6b 89       	ldd	r22, Y+19	; 0x13
     bec:	7c 89       	ldd	r23, Y+20	; 0x14
     bee:	8d 89       	ldd	r24, Y+21	; 0x15
     bf0:	9e 89       	ldd	r25, Y+22	; 0x16
     bf2:	0e 94 af 12 	call	0x255e	; 0x255e <__gesf2>
     bf6:	18 16       	cp	r1, r24
     bf8:	14 f5       	brge	.+68     	; 0xc3e <__stack+0x33f>
		uint16_t __ticks=(uint16_t)__tmp2;
     bfa:	6f 89       	ldd	r22, Y+23	; 0x17
     bfc:	78 8d       	ldd	r23, Y+24	; 0x18
     bfe:	89 8d       	ldd	r24, Y+25	; 0x19
     c00:	9a 8d       	ldd	r25, Y+26	; 0x1a
     c02:	0e 94 0b 12 	call	0x2416	; 0x2416 <__fixunssfsi>
     c06:	cc 51       	subi	r28, 0x1C	; 28
     c08:	df 4f       	sbci	r29, 0xFF	; 255
     c0a:	68 83       	st	Y, r22
     c0c:	79 83       	std	Y+1, r23	; 0x01
     c0e:	8a 83       	std	Y+2, r24	; 0x02
     c10:	9b 83       	std	Y+3, r25	; 0x03
     c12:	c4 5e       	subi	r28, 0xE4	; 228
     c14:	d0 40       	sbci	r29, 0x00	; 0
     c16:	cc 51       	subi	r28, 0x1C	; 28
     c18:	df 4f       	sbci	r29, 0xFF	; 255
     c1a:	88 81       	ld	r24, Y
     c1c:	99 81       	ldd	r25, Y+1	; 0x01
     c1e:	c4 5e       	subi	r28, 0xE4	; 228
     c20:	d0 40       	sbci	r29, 0x00	; 0
     c22:	9b a7       	std	Y+43, r25	; 0x2b
     c24:	8a a7       	std	Y+42, r24	; 0x2a
     c26:	8a a5       	ldd	r24, Y+42	; 0x2a
     c28:	9b a5       	ldd	r25, Y+43	; 0x2b
     c2a:	9d a7       	std	Y+45, r25	; 0x2d
     c2c:	8c a7       	std	Y+44, r24	; 0x2c
	__asm__ volatile (
     c2e:	8c a5       	ldd	r24, Y+44	; 0x2c
     c30:	9d a5       	ldd	r25, Y+45	; 0x2d
     c32:	01 97       	sbiw	r24, 0x01	; 1
     c34:	f1 f7       	brne	.-4      	; 0xc32 <__stack+0x333>
     c36:	9d a7       	std	Y+45, r25	; 0x2d
     c38:	8c a7       	std	Y+44, r24	; 0x2c
}
     c3a:	00 00       	nop
		return;
     c3c:	1b c0       	rjmp	.+54     	; 0xc74 <__stack+0x375>
		__ticks = (uint8_t)__tmp;
     c3e:	6b 89       	ldd	r22, Y+19	; 0x13
     c40:	7c 89       	ldd	r23, Y+20	; 0x14
     c42:	8d 89       	ldd	r24, Y+21	; 0x15
     c44:	9e 89       	ldd	r25, Y+22	; 0x16
     c46:	0e 94 0b 12 	call	0x2416	; 0x2416 <__fixunssfsi>
     c4a:	c8 51       	subi	r28, 0x18	; 24
     c4c:	df 4f       	sbci	r29, 0xFF	; 255
     c4e:	68 83       	st	Y, r22
     c50:	79 83       	std	Y+1, r23	; 0x01
     c52:	8a 83       	std	Y+2, r24	; 0x02
     c54:	9b 83       	std	Y+3, r25	; 0x03
     c56:	c8 5e       	subi	r28, 0xE8	; 232
     c58:	d0 40       	sbci	r29, 0x00	; 0
     c5a:	c8 51       	subi	r28, 0x18	; 24
     c5c:	df 4f       	sbci	r29, 0xFF	; 255
     c5e:	98 81       	ld	r25, Y
     c60:	c8 5e       	subi	r28, 0xE8	; 232
     c62:	d0 40       	sbci	r29, 0x00	; 0
     c64:	9b 8f       	std	Y+27, r25	; 0x1b
     c66:	8b 8d       	ldd	r24, Y+27	; 0x1b
     c68:	8e a7       	std	Y+46, r24	; 0x2e
	__asm__ volatile (
     c6a:	8e a5       	ldd	r24, Y+46	; 0x2e
     c6c:	8a 95       	dec	r24
     c6e:	f1 f7       	brne	.-4      	; 0xc6c <__stack+0x36d>
     c70:	8e a7       	std	Y+46, r24	; 0x2e
}
     c72:	00 00       	nop
	_delay_us(1);
	LCD_Port &= ~ (1<<EN);
     c74:	85 e2       	ldi	r24, 0x25	; 37
     c76:	90 e0       	ldi	r25, 0x00	; 0
     c78:	dc 01       	movw	r26, r24
     c7a:	2c 91       	ld	r18, X
     c7c:	85 e2       	ldi	r24, 0x25	; 37
     c7e:	90 e0       	ldi	r25, 0x00	; 0
     c80:	2d 7f       	andi	r18, 0xFD	; 253
     c82:	fc 01       	movw	r30, r24
     c84:	20 83       	st	Z, r18
     c86:	80 e0       	ldi	r24, 0x00	; 0
     c88:	90 e0       	ldi	r25, 0x00	; 0
     c8a:	a0 e0       	ldi	r26, 0x00	; 0
     c8c:	b0 e4       	ldi	r27, 0x40	; 64
     c8e:	89 83       	std	Y+1, r24	; 0x01
     c90:	9a 83       	std	Y+2, r25	; 0x02
     c92:	ab 83       	std	Y+3, r26	; 0x03
     c94:	bc 83       	std	Y+4, r27	; 0x04
	__tmp = ((F_CPU) / 4e3) * __ms;
     c96:	20 e0       	ldi	r18, 0x00	; 0
     c98:	30 e0       	ldi	r19, 0x00	; 0
     c9a:	4a e7       	ldi	r20, 0x7A	; 122
     c9c:	55 e4       	ldi	r21, 0x45	; 69
     c9e:	69 81       	ldd	r22, Y+1	; 0x01
     ca0:	7a 81       	ldd	r23, Y+2	; 0x02
     ca2:	8b 81       	ldd	r24, Y+3	; 0x03
     ca4:	9c 81       	ldd	r25, Y+4	; 0x04
     ca6:	0e 94 b4 12 	call	0x2568	; 0x2568 <__mulsf3>
     caa:	c4 51       	subi	r28, 0x14	; 20
     cac:	df 4f       	sbci	r29, 0xFF	; 255
     cae:	68 83       	st	Y, r22
     cb0:	79 83       	std	Y+1, r23	; 0x01
     cb2:	8a 83       	std	Y+2, r24	; 0x02
     cb4:	9b 83       	std	Y+3, r25	; 0x03
     cb6:	cc 5e       	subi	r28, 0xEC	; 236
     cb8:	d0 40       	sbci	r29, 0x00	; 0
     cba:	c4 51       	subi	r28, 0x14	; 20
     cbc:	df 4f       	sbci	r29, 0xFF	; 255
     cbe:	88 81       	ld	r24, Y
     cc0:	99 81       	ldd	r25, Y+1	; 0x01
     cc2:	aa 81       	ldd	r26, Y+2	; 0x02
     cc4:	bb 81       	ldd	r27, Y+3	; 0x03
     cc6:	cc 5e       	subi	r28, 0xEC	; 236
     cc8:	d0 40       	sbci	r29, 0x00	; 0
     cca:	8d 83       	std	Y+5, r24	; 0x05
     ccc:	9e 83       	std	Y+6, r25	; 0x06
     cce:	af 83       	std	Y+7, r26	; 0x07
     cd0:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
     cd2:	20 e0       	ldi	r18, 0x00	; 0
     cd4:	30 e0       	ldi	r19, 0x00	; 0
     cd6:	40 e8       	ldi	r20, 0x80	; 128
     cd8:	5f e3       	ldi	r21, 0x3F	; 63
     cda:	6d 81       	ldd	r22, Y+5	; 0x05
     cdc:	7e 81       	ldd	r23, Y+6	; 0x06
     cde:	8f 81       	ldd	r24, Y+7	; 0x07
     ce0:	98 85       	ldd	r25, Y+8	; 0x08
     ce2:	0e 94 94 11 	call	0x2328	; 0x2328 <__cmpsf2>
     ce6:	88 23       	and	r24, r24
     ce8:	2c f4       	brge	.+10     	; 0xcf4 <__stack+0x3f5>
		__ticks = 1;
     cea:	81 e0       	ldi	r24, 0x01	; 1
     cec:	90 e0       	ldi	r25, 0x00	; 0
     cee:	9a 87       	std	Y+10, r25	; 0x0a
     cf0:	89 87       	std	Y+9, r24	; 0x09
     cf2:	71 c0       	rjmp	.+226    	; 0xdd6 <__stack+0x4d7>
	else if (__tmp > 65535)
     cf4:	20 e0       	ldi	r18, 0x00	; 0
     cf6:	3f ef       	ldi	r19, 0xFF	; 255
     cf8:	4f e7       	ldi	r20, 0x7F	; 127
     cfa:	57 e4       	ldi	r21, 0x47	; 71
     cfc:	6d 81       	ldd	r22, Y+5	; 0x05
     cfe:	7e 81       	ldd	r23, Y+6	; 0x06
     d00:	8f 81       	ldd	r24, Y+7	; 0x07
     d02:	98 85       	ldd	r25, Y+8	; 0x08
     d04:	0e 94 af 12 	call	0x255e	; 0x255e <__gesf2>
     d08:	18 16       	cp	r1, r24
     d0a:	0c f0       	brlt	.+2      	; 0xd0e <__stack+0x40f>
     d0c:	4e c0       	rjmp	.+156    	; 0xdaa <__stack+0x4ab>
		__ticks = (uint16_t) (__ms * 10.0);
     d0e:	20 e0       	ldi	r18, 0x00	; 0
     d10:	30 e0       	ldi	r19, 0x00	; 0
     d12:	40 e2       	ldi	r20, 0x20	; 32
     d14:	51 e4       	ldi	r21, 0x41	; 65
     d16:	69 81       	ldd	r22, Y+1	; 0x01
     d18:	7a 81       	ldd	r23, Y+2	; 0x02
     d1a:	8b 81       	ldd	r24, Y+3	; 0x03
     d1c:	9c 81       	ldd	r25, Y+4	; 0x04
     d1e:	0e 94 b4 12 	call	0x2568	; 0x2568 <__mulsf3>
     d22:	c0 51       	subi	r28, 0x10	; 16
     d24:	df 4f       	sbci	r29, 0xFF	; 255
     d26:	68 83       	st	Y, r22
     d28:	79 83       	std	Y+1, r23	; 0x01
     d2a:	8a 83       	std	Y+2, r24	; 0x02
     d2c:	9b 83       	std	Y+3, r25	; 0x03
     d2e:	c0 5f       	subi	r28, 0xF0	; 240
     d30:	d0 40       	sbci	r29, 0x00	; 0
     d32:	c0 51       	subi	r28, 0x10	; 16
     d34:	df 4f       	sbci	r29, 0xFF	; 255
     d36:	88 81       	ld	r24, Y
     d38:	99 81       	ldd	r25, Y+1	; 0x01
     d3a:	aa 81       	ldd	r26, Y+2	; 0x02
     d3c:	bb 81       	ldd	r27, Y+3	; 0x03
     d3e:	c0 5f       	subi	r28, 0xF0	; 240
     d40:	d0 40       	sbci	r29, 0x00	; 0
     d42:	e4 96       	adiw	r28, 0x34	; 52
     d44:	8c af       	std	Y+60, r24	; 0x3c
     d46:	9d af       	std	Y+61, r25	; 0x3d
     d48:	ae af       	std	Y+62, r26	; 0x3e
     d4a:	bf af       	std	Y+63, r27	; 0x3f
     d4c:	e4 97       	sbiw	r28, 0x34	; 52
     d4e:	e4 96       	adiw	r28, 0x34	; 52
     d50:	6c ad       	ldd	r22, Y+60	; 0x3c
     d52:	7d ad       	ldd	r23, Y+61	; 0x3d
     d54:	8e ad       	ldd	r24, Y+62	; 0x3e
     d56:	9f ad       	ldd	r25, Y+63	; 0x3f
     d58:	e4 97       	sbiw	r28, 0x34	; 52
     d5a:	0e 94 0b 12 	call	0x2416	; 0x2416 <__fixunssfsi>
     d5e:	cc 50       	subi	r28, 0x0C	; 12
     d60:	df 4f       	sbci	r29, 0xFF	; 255
     d62:	68 83       	st	Y, r22
     d64:	79 83       	std	Y+1, r23	; 0x01
     d66:	8a 83       	std	Y+2, r24	; 0x02
     d68:	9b 83       	std	Y+3, r25	; 0x03
     d6a:	c4 5f       	subi	r28, 0xF4	; 244
     d6c:	d0 40       	sbci	r29, 0x00	; 0
     d6e:	cc 50       	subi	r28, 0x0C	; 12
     d70:	df 4f       	sbci	r29, 0xFF	; 255
     d72:	a8 81       	ld	r26, Y
     d74:	b9 81       	ldd	r27, Y+1	; 0x01
     d76:	c4 5f       	subi	r28, 0xF4	; 244
     d78:	d0 40       	sbci	r29, 0x00	; 0
     d7a:	ba 87       	std	Y+10, r27	; 0x0a
     d7c:	a9 87       	std	Y+9, r26	; 0x09
		while(__ticks)
     d7e:	10 c0       	rjmp	.+32     	; 0xda0 <__stack+0x4a1>
     d80:	80 e9       	ldi	r24, 0x90	; 144
     d82:	91 e0       	ldi	r25, 0x01	; 1
     d84:	9c 87       	std	Y+12, r25	; 0x0c
     d86:	8b 87       	std	Y+11, r24	; 0x0b
	__asm__ volatile (
     d88:	8b 85       	ldd	r24, Y+11	; 0x0b
     d8a:	9c 85       	ldd	r25, Y+12	; 0x0c
     d8c:	01 97       	sbiw	r24, 0x01	; 1
     d8e:	f1 f7       	brne	.-4      	; 0xd8c <__stack+0x48d>
     d90:	9c 87       	std	Y+12, r25	; 0x0c
     d92:	8b 87       	std	Y+11, r24	; 0x0b
}
     d94:	00 00       	nop
			__ticks --;
     d96:	89 85       	ldd	r24, Y+9	; 0x09
     d98:	9a 85       	ldd	r25, Y+10	; 0x0a
     d9a:	01 97       	sbiw	r24, 0x01	; 1
     d9c:	9a 87       	std	Y+10, r25	; 0x0a
     d9e:	89 87       	std	Y+9, r24	; 0x09
		while(__ticks)
     da0:	89 85       	ldd	r24, Y+9	; 0x09
     da2:	9a 85       	ldd	r25, Y+10	; 0x0a
     da4:	89 2b       	or	r24, r25
     da6:	61 f7       	brne	.-40     	; 0xd80 <__stack+0x481>
		return;
     da8:	21 c0       	rjmp	.+66     	; 0xdec <__stack+0x4ed>
		__ticks = (uint16_t)__tmp;
     daa:	6d 81       	ldd	r22, Y+5	; 0x05
     dac:	7e 81       	ldd	r23, Y+6	; 0x06
     dae:	8f 81       	ldd	r24, Y+7	; 0x07
     db0:	98 85       	ldd	r25, Y+8	; 0x08
     db2:	0e 94 0b 12 	call	0x2416	; 0x2416 <__fixunssfsi>
     db6:	c8 50       	subi	r28, 0x08	; 8
     db8:	df 4f       	sbci	r29, 0xFF	; 255
     dba:	68 83       	st	Y, r22
     dbc:	79 83       	std	Y+1, r23	; 0x01
     dbe:	8a 83       	std	Y+2, r24	; 0x02
     dc0:	9b 83       	std	Y+3, r25	; 0x03
     dc2:	c8 5f       	subi	r28, 0xF8	; 248
     dc4:	d0 40       	sbci	r29, 0x00	; 0
     dc6:	c8 50       	subi	r28, 0x08	; 8
     dc8:	df 4f       	sbci	r29, 0xFF	; 255
     dca:	e8 81       	ld	r30, Y
     dcc:	f9 81       	ldd	r31, Y+1	; 0x01
     dce:	c8 5f       	subi	r28, 0xF8	; 248
     dd0:	d0 40       	sbci	r29, 0x00	; 0
     dd2:	fa 87       	std	Y+10, r31	; 0x0a
     dd4:	e9 87       	std	Y+9, r30	; 0x09
     dd6:	89 85       	ldd	r24, Y+9	; 0x09
     dd8:	9a 85       	ldd	r25, Y+10	; 0x0a
     dda:	9e 87       	std	Y+14, r25	; 0x0e
     ddc:	8d 87       	std	Y+13, r24	; 0x0d
	__asm__ volatile (
     dde:	8d 85       	ldd	r24, Y+13	; 0x0d
     de0:	9e 85       	ldd	r25, Y+14	; 0x0e
     de2:	01 97       	sbiw	r24, 0x01	; 1
     de4:	f1 f7       	brne	.-4      	; 0xde2 <__stack+0x4e3>
     de6:	9e 87       	std	Y+14, r25	; 0x0e
     de8:	8d 87       	std	Y+13, r24	; 0x0d
}
     dea:	00 00       	nop
	_delay_ms(2);
}
     dec:	00 00       	nop
     dee:	c5 50       	subi	r28, 0x05	; 5
     df0:	df 4f       	sbci	r29, 0xFF	; 255
     df2:	0f b6       	in	r0, 0x3f	; 63
     df4:	f8 94       	cli
     df6:	de bf       	out	0x3e, r29	; 62
     df8:	0f be       	out	0x3f, r0	; 63
     dfa:	cd bf       	out	0x3d, r28	; 61
     dfc:	df 91       	pop	r29
     dfe:	cf 91       	pop	r28
     e00:	1f 91       	pop	r17
     e02:	0f 91       	pop	r16
     e04:	08 95       	ret

00000e06 <LCD_Char>:



void LCD_Char( unsigned char data )
{
     e06:	0f 93       	push	r16
     e08:	1f 93       	push	r17
     e0a:	cf 93       	push	r28
     e0c:	df 93       	push	r29
     e0e:	cd b7       	in	r28, 0x3d	; 61
     e10:	de b7       	in	r29, 0x3e	; 62
     e12:	cb 5f       	subi	r28, 0xFB	; 251
     e14:	d1 09       	sbc	r29, r1
     e16:	0f b6       	in	r0, 0x3f	; 63
     e18:	f8 94       	cli
     e1a:	de bf       	out	0x3e, r29	; 62
     e1c:	0f be       	out	0x3f, r0	; 63
     e1e:	cd bf       	out	0x3d, r28	; 61
     e20:	9e 01       	movw	r18, r28
     e22:	21 59       	subi	r18, 0x91	; 145
     e24:	3f 4f       	sbci	r19, 0xFF	; 255
     e26:	d9 01       	movw	r26, r18
     e28:	8c 93       	st	X, r24
	LCD_Port = ((LCD_Port & 0x0F) | (data & 0xF0)) >> 2; /* sending upper nibble */
     e2a:	85 e2       	ldi	r24, 0x25	; 37
     e2c:	90 e0       	ldi	r25, 0x00	; 0
     e2e:	fc 01       	movw	r30, r24
     e30:	80 81       	ld	r24, Z
     e32:	88 2f       	mov	r24, r24
     e34:	90 e0       	ldi	r25, 0x00	; 0
     e36:	9c 01       	movw	r18, r24
     e38:	2f 70       	andi	r18, 0x0F	; 15
     e3a:	33 27       	eor	r19, r19
     e3c:	ce 01       	movw	r24, r28
     e3e:	81 59       	subi	r24, 0x91	; 145
     e40:	9f 4f       	sbci	r25, 0xFF	; 255
     e42:	dc 01       	movw	r26, r24
     e44:	8c 91       	ld	r24, X
     e46:	88 2f       	mov	r24, r24
     e48:	90 e0       	ldi	r25, 0x00	; 0
     e4a:	80 7f       	andi	r24, 0xF0	; 240
     e4c:	99 27       	eor	r25, r25
     e4e:	82 2b       	or	r24, r18
     e50:	93 2b       	or	r25, r19
     e52:	9c 01       	movw	r18, r24
     e54:	35 95       	asr	r19
     e56:	27 95       	ror	r18
     e58:	35 95       	asr	r19
     e5a:	27 95       	ror	r18
     e5c:	85 e2       	ldi	r24, 0x25	; 37
     e5e:	90 e0       	ldi	r25, 0x00	; 0
     e60:	fc 01       	movw	r30, r24
     e62:	20 83       	st	Z, r18
	LCD_Port |= (1<<RS);		/* RS=1, data reg. */
     e64:	85 e2       	ldi	r24, 0x25	; 37
     e66:	90 e0       	ldi	r25, 0x00	; 0
     e68:	dc 01       	movw	r26, r24
     e6a:	2c 91       	ld	r18, X
     e6c:	85 e2       	ldi	r24, 0x25	; 37
     e6e:	90 e0       	ldi	r25, 0x00	; 0
     e70:	21 60       	ori	r18, 0x01	; 1
     e72:	fc 01       	movw	r30, r24
     e74:	20 83       	st	Z, r18
	LCD_Port|= (1<<EN);
     e76:	85 e2       	ldi	r24, 0x25	; 37
     e78:	90 e0       	ldi	r25, 0x00	; 0
     e7a:	dc 01       	movw	r26, r24
     e7c:	2c 91       	ld	r18, X
     e7e:	85 e2       	ldi	r24, 0x25	; 37
     e80:	90 e0       	ldi	r25, 0x00	; 0
     e82:	22 60       	ori	r18, 0x02	; 2
     e84:	fc 01       	movw	r30, r24
     e86:	20 83       	st	Z, r18
     e88:	9e 01       	movw	r18, r28
     e8a:	21 5b       	subi	r18, 0xB1	; 177
     e8c:	3f 4f       	sbci	r19, 0xFF	; 255
     e8e:	80 e0       	ldi	r24, 0x00	; 0
     e90:	90 e0       	ldi	r25, 0x00	; 0
     e92:	a0 e8       	ldi	r26, 0x80	; 128
     e94:	bf e3       	ldi	r27, 0x3F	; 63
     e96:	f9 01       	movw	r30, r18
     e98:	80 83       	st	Z, r24
     e9a:	91 83       	std	Z+1, r25	; 0x01
     e9c:	a2 83       	std	Z+2, r26	; 0x02
     e9e:	b3 83       	std	Z+3, r27	; 0x03
	__tmp = ((F_CPU) / 3e6) * __us;
     ea0:	8e 01       	movw	r16, r28
     ea2:	0d 5a       	subi	r16, 0xAD	; 173
     ea4:	1f 4f       	sbci	r17, 0xFF	; 255
     ea6:	ce 01       	movw	r24, r28
     ea8:	81 5b       	subi	r24, 0xB1	; 177
     eaa:	9f 4f       	sbci	r25, 0xFF	; 255
     eac:	2b ea       	ldi	r18, 0xAB	; 171
     eae:	3a ea       	ldi	r19, 0xAA	; 170
     eb0:	4a ea       	ldi	r20, 0xAA	; 170
     eb2:	50 e4       	ldi	r21, 0x40	; 64
     eb4:	dc 01       	movw	r26, r24
     eb6:	6d 91       	ld	r22, X+
     eb8:	7d 91       	ld	r23, X+
     eba:	8d 91       	ld	r24, X+
     ebc:	9c 91       	ld	r25, X
     ebe:	0e 94 b4 12 	call	0x2568	; 0x2568 <__mulsf3>
     ec2:	c0 58       	subi	r28, 0x80	; 128
     ec4:	df 4f       	sbci	r29, 0xFF	; 255
     ec6:	68 83       	st	Y, r22
     ec8:	79 83       	std	Y+1, r23	; 0x01
     eca:	8a 83       	std	Y+2, r24	; 0x02
     ecc:	9b 83       	std	Y+3, r25	; 0x03
     ece:	c0 58       	subi	r28, 0x80	; 128
     ed0:	d0 40       	sbci	r29, 0x00	; 0
     ed2:	c0 58       	subi	r28, 0x80	; 128
     ed4:	df 4f       	sbci	r29, 0xFF	; 255
     ed6:	88 81       	ld	r24, Y
     ed8:	99 81       	ldd	r25, Y+1	; 0x01
     eda:	aa 81       	ldd	r26, Y+2	; 0x02
     edc:	bb 81       	ldd	r27, Y+3	; 0x03
     ede:	c0 58       	subi	r28, 0x80	; 128
     ee0:	d0 40       	sbci	r29, 0x00	; 0
     ee2:	f8 01       	movw	r30, r16
     ee4:	80 83       	st	Z, r24
     ee6:	91 83       	std	Z+1, r25	; 0x01
     ee8:	a2 83       	std	Z+2, r26	; 0x02
     eea:	b3 83       	std	Z+3, r27	; 0x03
	__tmp2 = ((F_CPU) / 4e6) * __us;
     eec:	8e 01       	movw	r16, r28
     eee:	09 5a       	subi	r16, 0xA9	; 169
     ef0:	1f 4f       	sbci	r17, 0xFF	; 255
     ef2:	ce 01       	movw	r24, r28
     ef4:	81 5b       	subi	r24, 0xB1	; 177
     ef6:	9f 4f       	sbci	r25, 0xFF	; 255
     ef8:	20 e0       	ldi	r18, 0x00	; 0
     efa:	30 e0       	ldi	r19, 0x00	; 0
     efc:	40 e8       	ldi	r20, 0x80	; 128
     efe:	50 e4       	ldi	r21, 0x40	; 64
     f00:	dc 01       	movw	r26, r24
     f02:	6d 91       	ld	r22, X+
     f04:	7d 91       	ld	r23, X+
     f06:	8d 91       	ld	r24, X+
     f08:	9c 91       	ld	r25, X
     f0a:	0e 94 b4 12 	call	0x2568	; 0x2568 <__mulsf3>
     f0e:	cc 57       	subi	r28, 0x7C	; 124
     f10:	df 4f       	sbci	r29, 0xFF	; 255
     f12:	68 83       	st	Y, r22
     f14:	79 83       	std	Y+1, r23	; 0x01
     f16:	8a 83       	std	Y+2, r24	; 0x02
     f18:	9b 83       	std	Y+3, r25	; 0x03
     f1a:	c4 58       	subi	r28, 0x84	; 132
     f1c:	d0 40       	sbci	r29, 0x00	; 0
     f1e:	cc 57       	subi	r28, 0x7C	; 124
     f20:	df 4f       	sbci	r29, 0xFF	; 255
     f22:	88 81       	ld	r24, Y
     f24:	99 81       	ldd	r25, Y+1	; 0x01
     f26:	aa 81       	ldd	r26, Y+2	; 0x02
     f28:	bb 81       	ldd	r27, Y+3	; 0x03
     f2a:	c4 58       	subi	r28, 0x84	; 132
     f2c:	d0 40       	sbci	r29, 0x00	; 0
     f2e:	f8 01       	movw	r30, r16
     f30:	80 83       	st	Z, r24
     f32:	91 83       	std	Z+1, r25	; 0x01
     f34:	a2 83       	std	Z+2, r26	; 0x02
     f36:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     f38:	ce 01       	movw	r24, r28
     f3a:	8d 5a       	subi	r24, 0xAD	; 173
     f3c:	9f 4f       	sbci	r25, 0xFF	; 255
     f3e:	20 e0       	ldi	r18, 0x00	; 0
     f40:	30 e0       	ldi	r19, 0x00	; 0
     f42:	40 e8       	ldi	r20, 0x80	; 128
     f44:	5f e3       	ldi	r21, 0x3F	; 63
     f46:	dc 01       	movw	r26, r24
     f48:	6d 91       	ld	r22, X+
     f4a:	7d 91       	ld	r23, X+
     f4c:	8d 91       	ld	r24, X+
     f4e:	9c 91       	ld	r25, X
     f50:	0e 94 94 11 	call	0x2328	; 0x2328 <__cmpsf2>
     f54:	88 23       	and	r24, r24
     f56:	3c f4       	brge	.+14     	; 0xf66 <LCD_Char+0x160>
		__ticks = 1;
     f58:	ce 01       	movw	r24, r28
     f5a:	85 5a       	subi	r24, 0xA5	; 165
     f5c:	9f 4f       	sbci	r25, 0xFF	; 255
     f5e:	21 e0       	ldi	r18, 0x01	; 1
     f60:	fc 01       	movw	r30, r24
     f62:	20 83       	st	Z, r18
     f64:	99 c1       	rjmp	.+818    	; 0x1298 <LCD_Char+0x492>
	else if (__tmp2 > 65535)
     f66:	ce 01       	movw	r24, r28
     f68:	89 5a       	subi	r24, 0xA9	; 169
     f6a:	9f 4f       	sbci	r25, 0xFF	; 255
     f6c:	20 e0       	ldi	r18, 0x00	; 0
     f6e:	3f ef       	ldi	r19, 0xFF	; 255
     f70:	4f e7       	ldi	r20, 0x7F	; 127
     f72:	57 e4       	ldi	r21, 0x47	; 71
     f74:	dc 01       	movw	r26, r24
     f76:	6d 91       	ld	r22, X+
     f78:	7d 91       	ld	r23, X+
     f7a:	8d 91       	ld	r24, X+
     f7c:	9c 91       	ld	r25, X
     f7e:	0e 94 af 12 	call	0x255e	; 0x255e <__gesf2>
     f82:	18 16       	cp	r1, r24
     f84:	0c f0       	brlt	.+2      	; 0xf88 <LCD_Char+0x182>
     f86:	22 c1       	rjmp	.+580    	; 0x11cc <LCD_Char+0x3c6>
		_delay_ms(__us / 1000.0);
     f88:	ce 01       	movw	r24, r28
     f8a:	81 5b       	subi	r24, 0xB1	; 177
     f8c:	9f 4f       	sbci	r25, 0xFF	; 255
     f8e:	20 e0       	ldi	r18, 0x00	; 0
     f90:	30 e0       	ldi	r19, 0x00	; 0
     f92:	4a e7       	ldi	r20, 0x7A	; 122
     f94:	54 e4       	ldi	r21, 0x44	; 68
     f96:	fc 01       	movw	r30, r24
     f98:	60 81       	ld	r22, Z
     f9a:	71 81       	ldd	r23, Z+1	; 0x01
     f9c:	82 81       	ldd	r24, Z+2	; 0x02
     f9e:	93 81       	ldd	r25, Z+3	; 0x03
     fa0:	0e 94 99 11 	call	0x2332	; 0x2332 <__divsf3>
     fa4:	c8 57       	subi	r28, 0x78	; 120
     fa6:	df 4f       	sbci	r29, 0xFF	; 255
     fa8:	68 83       	st	Y, r22
     faa:	79 83       	std	Y+1, r23	; 0x01
     fac:	8a 83       	std	Y+2, r24	; 0x02
     fae:	9b 83       	std	Y+3, r25	; 0x03
     fb0:	c8 58       	subi	r28, 0x88	; 136
     fb2:	d0 40       	sbci	r29, 0x00	; 0
     fb4:	c8 57       	subi	r28, 0x78	; 120
     fb6:	df 4f       	sbci	r29, 0xFF	; 255
     fb8:	88 81       	ld	r24, Y
     fba:	99 81       	ldd	r25, Y+1	; 0x01
     fbc:	aa 81       	ldd	r26, Y+2	; 0x02
     fbe:	bb 81       	ldd	r27, Y+3	; 0x03
     fc0:	c8 58       	subi	r28, 0x88	; 136
     fc2:	d0 40       	sbci	r29, 0x00	; 0
     fc4:	9e 01       	movw	r18, r28
     fc6:	24 5a       	subi	r18, 0xA4	; 164
     fc8:	3f 4f       	sbci	r19, 0xFF	; 255
     fca:	f9 01       	movw	r30, r18
     fcc:	80 83       	st	Z, r24
     fce:	91 83       	std	Z+1, r25	; 0x01
     fd0:	a2 83       	std	Z+2, r26	; 0x02
     fd2:	b3 83       	std	Z+3, r27	; 0x03
	__tmp = ((F_CPU) / 4e3) * __ms;
     fd4:	8e 01       	movw	r16, r28
     fd6:	00 5a       	subi	r16, 0xA0	; 160
     fd8:	1f 4f       	sbci	r17, 0xFF	; 255
     fda:	ce 01       	movw	r24, r28
     fdc:	84 5a       	subi	r24, 0xA4	; 164
     fde:	9f 4f       	sbci	r25, 0xFF	; 255
     fe0:	20 e0       	ldi	r18, 0x00	; 0
     fe2:	30 e0       	ldi	r19, 0x00	; 0
     fe4:	4a e7       	ldi	r20, 0x7A	; 122
     fe6:	55 e4       	ldi	r21, 0x45	; 69
     fe8:	dc 01       	movw	r26, r24
     fea:	6d 91       	ld	r22, X+
     fec:	7d 91       	ld	r23, X+
     fee:	8d 91       	ld	r24, X+
     ff0:	9c 91       	ld	r25, X
     ff2:	0e 94 b4 12 	call	0x2568	; 0x2568 <__mulsf3>
     ff6:	c4 57       	subi	r28, 0x74	; 116
     ff8:	df 4f       	sbci	r29, 0xFF	; 255
     ffa:	68 83       	st	Y, r22
     ffc:	79 83       	std	Y+1, r23	; 0x01
     ffe:	8a 83       	std	Y+2, r24	; 0x02
    1000:	9b 83       	std	Y+3, r25	; 0x03
    1002:	cc 58       	subi	r28, 0x8C	; 140
    1004:	d0 40       	sbci	r29, 0x00	; 0
    1006:	c4 57       	subi	r28, 0x74	; 116
    1008:	df 4f       	sbci	r29, 0xFF	; 255
    100a:	88 81       	ld	r24, Y
    100c:	99 81       	ldd	r25, Y+1	; 0x01
    100e:	aa 81       	ldd	r26, Y+2	; 0x02
    1010:	bb 81       	ldd	r27, Y+3	; 0x03
    1012:	cc 58       	subi	r28, 0x8C	; 140
    1014:	d0 40       	sbci	r29, 0x00	; 0
    1016:	f8 01       	movw	r30, r16
    1018:	80 83       	st	Z, r24
    101a:	91 83       	std	Z+1, r25	; 0x01
    101c:	a2 83       	std	Z+2, r26	; 0x02
    101e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1020:	ce 01       	movw	r24, r28
    1022:	80 5a       	subi	r24, 0xA0	; 160
    1024:	9f 4f       	sbci	r25, 0xFF	; 255
    1026:	20 e0       	ldi	r18, 0x00	; 0
    1028:	30 e0       	ldi	r19, 0x00	; 0
    102a:	40 e8       	ldi	r20, 0x80	; 128
    102c:	5f e3       	ldi	r21, 0x3F	; 63
    102e:	dc 01       	movw	r26, r24
    1030:	6d 91       	ld	r22, X+
    1032:	7d 91       	ld	r23, X+
    1034:	8d 91       	ld	r24, X+
    1036:	9c 91       	ld	r25, X
    1038:	0e 94 94 11 	call	0x2328	; 0x2328 <__cmpsf2>
    103c:	88 23       	and	r24, r24
    103e:	4c f4       	brge	.+18     	; 0x1052 <LCD_Char+0x24c>
		__ticks = 1;
    1040:	ce 01       	movw	r24, r28
    1042:	8c 59       	subi	r24, 0x9C	; 156
    1044:	9f 4f       	sbci	r25, 0xFF	; 255
    1046:	21 e0       	ldi	r18, 0x01	; 1
    1048:	30 e0       	ldi	r19, 0x00	; 0
    104a:	fc 01       	movw	r30, r24
    104c:	31 83       	std	Z+1, r19	; 0x01
    104e:	20 83       	st	Z, r18
    1050:	a2 c0       	rjmp	.+324    	; 0x1196 <LCD_Char+0x390>
	else if (__tmp > 65535)
    1052:	ce 01       	movw	r24, r28
    1054:	80 5a       	subi	r24, 0xA0	; 160
    1056:	9f 4f       	sbci	r25, 0xFF	; 255
    1058:	20 e0       	ldi	r18, 0x00	; 0
    105a:	3f ef       	ldi	r19, 0xFF	; 255
    105c:	4f e7       	ldi	r20, 0x7F	; 127
    105e:	57 e4       	ldi	r21, 0x47	; 71
    1060:	dc 01       	movw	r26, r24
    1062:	6d 91       	ld	r22, X+
    1064:	7d 91       	ld	r23, X+
    1066:	8d 91       	ld	r24, X+
    1068:	9c 91       	ld	r25, X
    106a:	0e 94 af 12 	call	0x255e	; 0x255e <__gesf2>
    106e:	18 16       	cp	r1, r24
    1070:	0c f0       	brlt	.+2      	; 0x1074 <LCD_Char+0x26e>
    1072:	73 c0       	rjmp	.+230    	; 0x115a <LCD_Char+0x354>
		__ticks = (uint16_t) (__ms * 10.0);
    1074:	ce 01       	movw	r24, r28
    1076:	84 5a       	subi	r24, 0xA4	; 164
    1078:	9f 4f       	sbci	r25, 0xFF	; 255
    107a:	20 e0       	ldi	r18, 0x00	; 0
    107c:	30 e0       	ldi	r19, 0x00	; 0
    107e:	40 e2       	ldi	r20, 0x20	; 32
    1080:	51 e4       	ldi	r21, 0x41	; 65
    1082:	fc 01       	movw	r30, r24
    1084:	60 81       	ld	r22, Z
    1086:	71 81       	ldd	r23, Z+1	; 0x01
    1088:	82 81       	ldd	r24, Z+2	; 0x02
    108a:	93 81       	ldd	r25, Z+3	; 0x03
    108c:	0e 94 b4 12 	call	0x2568	; 0x2568 <__mulsf3>
    1090:	c0 57       	subi	r28, 0x70	; 112
    1092:	df 4f       	sbci	r29, 0xFF	; 255
    1094:	68 83       	st	Y, r22
    1096:	79 83       	std	Y+1, r23	; 0x01
    1098:	8a 83       	std	Y+2, r24	; 0x02
    109a:	9b 83       	std	Y+3, r25	; 0x03
    109c:	c0 59       	subi	r28, 0x90	; 144
    109e:	d0 40       	sbci	r29, 0x00	; 0
    10a0:	c0 57       	subi	r28, 0x70	; 112
    10a2:	df 4f       	sbci	r29, 0xFF	; 255
    10a4:	88 81       	ld	r24, Y
    10a6:	99 81       	ldd	r25, Y+1	; 0x01
    10a8:	aa 81       	ldd	r26, Y+2	; 0x02
    10aa:	bb 81       	ldd	r27, Y+3	; 0x03
    10ac:	c0 59       	subi	r28, 0x90	; 144
    10ae:	d0 40       	sbci	r29, 0x00	; 0
    10b0:	c4 58       	subi	r28, 0x84	; 132
    10b2:	df 4f       	sbci	r29, 0xFF	; 255
    10b4:	88 83       	st	Y, r24
    10b6:	99 83       	std	Y+1, r25	; 0x01
    10b8:	aa 83       	std	Y+2, r26	; 0x02
    10ba:	bb 83       	std	Y+3, r27	; 0x03
    10bc:	cc 57       	subi	r28, 0x7C	; 124
    10be:	d0 40       	sbci	r29, 0x00	; 0
    10c0:	8e 01       	movw	r16, r28
    10c2:	0c 59       	subi	r16, 0x9C	; 156
    10c4:	1f 4f       	sbci	r17, 0xFF	; 255
    10c6:	c4 58       	subi	r28, 0x84	; 132
    10c8:	df 4f       	sbci	r29, 0xFF	; 255
    10ca:	68 81       	ld	r22, Y
    10cc:	79 81       	ldd	r23, Y+1	; 0x01
    10ce:	8a 81       	ldd	r24, Y+2	; 0x02
    10d0:	9b 81       	ldd	r25, Y+3	; 0x03
    10d2:	cc 57       	subi	r28, 0x7C	; 124
    10d4:	d0 40       	sbci	r29, 0x00	; 0
    10d6:	0e 94 0b 12 	call	0x2416	; 0x2416 <__fixunssfsi>
    10da:	cc 56       	subi	r28, 0x6C	; 108
    10dc:	df 4f       	sbci	r29, 0xFF	; 255
    10de:	68 83       	st	Y, r22
    10e0:	79 83       	std	Y+1, r23	; 0x01
    10e2:	8a 83       	std	Y+2, r24	; 0x02
    10e4:	9b 83       	std	Y+3, r25	; 0x03
    10e6:	c4 59       	subi	r28, 0x94	; 148
    10e8:	d0 40       	sbci	r29, 0x00	; 0
    10ea:	cc 56       	subi	r28, 0x6C	; 108
    10ec:	df 4f       	sbci	r29, 0xFF	; 255
    10ee:	e8 81       	ld	r30, Y
    10f0:	f9 81       	ldd	r31, Y+1	; 0x01
    10f2:	c4 59       	subi	r28, 0x94	; 148
    10f4:	d0 40       	sbci	r29, 0x00	; 0
    10f6:	d8 01       	movw	r26, r16
    10f8:	ed 93       	st	X+, r30
    10fa:	fc 93       	st	X, r31
		while(__ticks)
    10fc:	25 c0       	rjmp	.+74     	; 0x1148 <LCD_Char+0x342>
    10fe:	ce 01       	movw	r24, r28
    1100:	8a 59       	subi	r24, 0x9A	; 154
    1102:	9f 4f       	sbci	r25, 0xFF	; 255
    1104:	20 e9       	ldi	r18, 0x90	; 144
    1106:	31 e0       	ldi	r19, 0x01	; 1
    1108:	dc 01       	movw	r26, r24
    110a:	2d 93       	st	X+, r18
    110c:	3c 93       	st	X, r19
	__asm__ volatile (
    110e:	ce 01       	movw	r24, r28
    1110:	8a 59       	subi	r24, 0x9A	; 154
    1112:	9f 4f       	sbci	r25, 0xFF	; 255
    1114:	fc 01       	movw	r30, r24
    1116:	80 81       	ld	r24, Z
    1118:	91 81       	ldd	r25, Z+1	; 0x01
    111a:	01 97       	sbiw	r24, 0x01	; 1
    111c:	f1 f7       	brne	.-4      	; 0x111a <LCD_Char+0x314>
    111e:	9e 01       	movw	r18, r28
    1120:	2a 59       	subi	r18, 0x9A	; 154
    1122:	3f 4f       	sbci	r19, 0xFF	; 255
    1124:	d9 01       	movw	r26, r18
    1126:	8d 93       	st	X+, r24
    1128:	9c 93       	st	X, r25
}
    112a:	00 00       	nop
			__ticks --;
    112c:	ce 01       	movw	r24, r28
    112e:	8c 59       	subi	r24, 0x9C	; 156
    1130:	9f 4f       	sbci	r25, 0xFF	; 255
    1132:	9e 01       	movw	r18, r28
    1134:	2c 59       	subi	r18, 0x9C	; 156
    1136:	3f 4f       	sbci	r19, 0xFF	; 255
    1138:	f9 01       	movw	r30, r18
    113a:	20 81       	ld	r18, Z
    113c:	31 81       	ldd	r19, Z+1	; 0x01
    113e:	21 50       	subi	r18, 0x01	; 1
    1140:	31 09       	sbc	r19, r1
    1142:	dc 01       	movw	r26, r24
    1144:	2d 93       	st	X+, r18
    1146:	3c 93       	st	X, r19
		while(__ticks)
    1148:	ce 01       	movw	r24, r28
    114a:	8c 59       	subi	r24, 0x9C	; 156
    114c:	9f 4f       	sbci	r25, 0xFF	; 255
    114e:	fc 01       	movw	r30, r24
    1150:	80 81       	ld	r24, Z
    1152:	91 81       	ldd	r25, Z+1	; 0x01
    1154:	89 2b       	or	r24, r25
    1156:	99 f6       	brne	.-90     	; 0x10fe <LCD_Char+0x2f8>
		return;
    1158:	9f c0       	rjmp	.+318    	; 0x1298 <LCD_Char+0x492>
		__ticks = (uint16_t)__tmp;
    115a:	8e 01       	movw	r16, r28
    115c:	0c 59       	subi	r16, 0x9C	; 156
    115e:	1f 4f       	sbci	r17, 0xFF	; 255
    1160:	ce 01       	movw	r24, r28
    1162:	80 5a       	subi	r24, 0xA0	; 160
    1164:	9f 4f       	sbci	r25, 0xFF	; 255
    1166:	dc 01       	movw	r26, r24
    1168:	6d 91       	ld	r22, X+
    116a:	7d 91       	ld	r23, X+
    116c:	8d 91       	ld	r24, X+
    116e:	9c 91       	ld	r25, X
    1170:	0e 94 0b 12 	call	0x2416	; 0x2416 <__fixunssfsi>
    1174:	c8 56       	subi	r28, 0x68	; 104
    1176:	df 4f       	sbci	r29, 0xFF	; 255
    1178:	68 83       	st	Y, r22
    117a:	79 83       	std	Y+1, r23	; 0x01
    117c:	8a 83       	std	Y+2, r24	; 0x02
    117e:	9b 83       	std	Y+3, r25	; 0x03
    1180:	c8 59       	subi	r28, 0x98	; 152
    1182:	d0 40       	sbci	r29, 0x00	; 0
    1184:	c8 56       	subi	r28, 0x68	; 104
    1186:	df 4f       	sbci	r29, 0xFF	; 255
    1188:	88 81       	ld	r24, Y
    118a:	99 81       	ldd	r25, Y+1	; 0x01
    118c:	c8 59       	subi	r28, 0x98	; 152
    118e:	d0 40       	sbci	r29, 0x00	; 0
    1190:	f8 01       	movw	r30, r16
    1192:	91 83       	std	Z+1, r25	; 0x01
    1194:	80 83       	st	Z, r24
    1196:	ce 01       	movw	r24, r28
    1198:	88 59       	subi	r24, 0x98	; 152
    119a:	9f 4f       	sbci	r25, 0xFF	; 255
    119c:	9e 01       	movw	r18, r28
    119e:	2c 59       	subi	r18, 0x9C	; 156
    11a0:	3f 4f       	sbci	r19, 0xFF	; 255
    11a2:	d9 01       	movw	r26, r18
    11a4:	2d 91       	ld	r18, X+
    11a6:	3c 91       	ld	r19, X
    11a8:	fc 01       	movw	r30, r24
    11aa:	31 83       	std	Z+1, r19	; 0x01
    11ac:	20 83       	st	Z, r18
	__asm__ volatile (
    11ae:	ce 01       	movw	r24, r28
    11b0:	88 59       	subi	r24, 0x98	; 152
    11b2:	9f 4f       	sbci	r25, 0xFF	; 255
    11b4:	dc 01       	movw	r26, r24
    11b6:	8d 91       	ld	r24, X+
    11b8:	9c 91       	ld	r25, X
    11ba:	01 97       	sbiw	r24, 0x01	; 1
    11bc:	f1 f7       	brne	.-4      	; 0x11ba <LCD_Char+0x3b4>
    11be:	9e 01       	movw	r18, r28
    11c0:	28 59       	subi	r18, 0x98	; 152
    11c2:	3f 4f       	sbci	r19, 0xFF	; 255
    11c4:	f9 01       	movw	r30, r18
    11c6:	91 83       	std	Z+1, r25	; 0x01
    11c8:	80 83       	st	Z, r24
}
    11ca:	66 c0       	rjmp	.+204    	; 0x1298 <LCD_Char+0x492>
	else if (__tmp > 255)
    11cc:	ce 01       	movw	r24, r28
    11ce:	8d 5a       	subi	r24, 0xAD	; 173
    11d0:	9f 4f       	sbci	r25, 0xFF	; 255
    11d2:	20 e0       	ldi	r18, 0x00	; 0
    11d4:	30 e0       	ldi	r19, 0x00	; 0
    11d6:	4f e7       	ldi	r20, 0x7F	; 127
    11d8:	53 e4       	ldi	r21, 0x43	; 67
    11da:	dc 01       	movw	r26, r24
    11dc:	6d 91       	ld	r22, X+
    11de:	7d 91       	ld	r23, X+
    11e0:	8d 91       	ld	r24, X+
    11e2:	9c 91       	ld	r25, X
    11e4:	0e 94 af 12 	call	0x255e	; 0x255e <__gesf2>
    11e8:	18 16       	cp	r1, r24
    11ea:	d4 f5       	brge	.+116    	; 0x1260 <LCD_Char+0x45a>
		uint16_t __ticks=(uint16_t)__tmp2;
    11ec:	8e 01       	movw	r16, r28
    11ee:	06 59       	subi	r16, 0x96	; 150
    11f0:	1f 4f       	sbci	r17, 0xFF	; 255
    11f2:	ce 01       	movw	r24, r28
    11f4:	89 5a       	subi	r24, 0xA9	; 169
    11f6:	9f 4f       	sbci	r25, 0xFF	; 255
    11f8:	fc 01       	movw	r30, r24
    11fa:	60 81       	ld	r22, Z
    11fc:	71 81       	ldd	r23, Z+1	; 0x01
    11fe:	82 81       	ldd	r24, Z+2	; 0x02
    1200:	93 81       	ldd	r25, Z+3	; 0x03
    1202:	0e 94 0b 12 	call	0x2416	; 0x2416 <__fixunssfsi>
    1206:	c4 56       	subi	r28, 0x64	; 100
    1208:	df 4f       	sbci	r29, 0xFF	; 255
    120a:	68 83       	st	Y, r22
    120c:	79 83       	std	Y+1, r23	; 0x01
    120e:	8a 83       	std	Y+2, r24	; 0x02
    1210:	9b 83       	std	Y+3, r25	; 0x03
    1212:	cc 59       	subi	r28, 0x9C	; 156
    1214:	d0 40       	sbci	r29, 0x00	; 0
    1216:	c4 56       	subi	r28, 0x64	; 100
    1218:	df 4f       	sbci	r29, 0xFF	; 255
    121a:	e8 81       	ld	r30, Y
    121c:	f9 81       	ldd	r31, Y+1	; 0x01
    121e:	cc 59       	subi	r28, 0x9C	; 156
    1220:	d0 40       	sbci	r29, 0x00	; 0
    1222:	d8 01       	movw	r26, r16
    1224:	ed 93       	st	X+, r30
    1226:	fc 93       	st	X, r31
    1228:	ce 01       	movw	r24, r28
    122a:	84 59       	subi	r24, 0x94	; 148
    122c:	9f 4f       	sbci	r25, 0xFF	; 255
    122e:	9e 01       	movw	r18, r28
    1230:	26 59       	subi	r18, 0x96	; 150
    1232:	3f 4f       	sbci	r19, 0xFF	; 255
    1234:	d9 01       	movw	r26, r18
    1236:	2d 91       	ld	r18, X+
    1238:	3c 91       	ld	r19, X
    123a:	fc 01       	movw	r30, r24
    123c:	31 83       	std	Z+1, r19	; 0x01
    123e:	20 83       	st	Z, r18
	__asm__ volatile (
    1240:	ce 01       	movw	r24, r28
    1242:	84 59       	subi	r24, 0x94	; 148
    1244:	9f 4f       	sbci	r25, 0xFF	; 255
    1246:	dc 01       	movw	r26, r24
    1248:	8d 91       	ld	r24, X+
    124a:	9c 91       	ld	r25, X
    124c:	01 97       	sbiw	r24, 0x01	; 1
    124e:	f1 f7       	brne	.-4      	; 0x124c <LCD_Char+0x446>
    1250:	9e 01       	movw	r18, r28
    1252:	24 59       	subi	r18, 0x94	; 148
    1254:	3f 4f       	sbci	r19, 0xFF	; 255
    1256:	f9 01       	movw	r30, r18
    1258:	91 83       	std	Z+1, r25	; 0x01
    125a:	80 83       	st	Z, r24
}
    125c:	00 00       	nop
		return;
    125e:	34 c0       	rjmp	.+104    	; 0x12c8 <LCD_Char+0x4c2>
		__ticks = (uint8_t)__tmp;
    1260:	8e 01       	movw	r16, r28
    1262:	05 5a       	subi	r16, 0xA5	; 165
    1264:	1f 4f       	sbci	r17, 0xFF	; 255
    1266:	ce 01       	movw	r24, r28
    1268:	8d 5a       	subi	r24, 0xAD	; 173
    126a:	9f 4f       	sbci	r25, 0xFF	; 255
    126c:	dc 01       	movw	r26, r24
    126e:	6d 91       	ld	r22, X+
    1270:	7d 91       	ld	r23, X+
    1272:	8d 91       	ld	r24, X+
    1274:	9c 91       	ld	r25, X
    1276:	0e 94 0b 12 	call	0x2416	; 0x2416 <__fixunssfsi>
    127a:	c0 56       	subi	r28, 0x60	; 96
    127c:	df 4f       	sbci	r29, 0xFF	; 255
    127e:	68 83       	st	Y, r22
    1280:	79 83       	std	Y+1, r23	; 0x01
    1282:	8a 83       	std	Y+2, r24	; 0x02
    1284:	9b 83       	std	Y+3, r25	; 0x03
    1286:	c0 5a       	subi	r28, 0xA0	; 160
    1288:	d0 40       	sbci	r29, 0x00	; 0
    128a:	c0 56       	subi	r28, 0x60	; 96
    128c:	df 4f       	sbci	r29, 0xFF	; 255
    128e:	88 81       	ld	r24, Y
    1290:	c0 5a       	subi	r28, 0xA0	; 160
    1292:	d0 40       	sbci	r29, 0x00	; 0
    1294:	f8 01       	movw	r30, r16
    1296:	80 83       	st	Z, r24
    1298:	ce 01       	movw	r24, r28
    129a:	82 59       	subi	r24, 0x92	; 146
    129c:	9f 4f       	sbci	r25, 0xFF	; 255
    129e:	9e 01       	movw	r18, r28
    12a0:	25 5a       	subi	r18, 0xA5	; 165
    12a2:	3f 4f       	sbci	r19, 0xFF	; 255
    12a4:	d9 01       	movw	r26, r18
    12a6:	2c 91       	ld	r18, X
    12a8:	fc 01       	movw	r30, r24
    12aa:	20 83       	st	Z, r18
	__asm__ volatile (
    12ac:	ce 01       	movw	r24, r28
    12ae:	82 59       	subi	r24, 0x92	; 146
    12b0:	9f 4f       	sbci	r25, 0xFF	; 255
    12b2:	dc 01       	movw	r26, r24
    12b4:	8c 91       	ld	r24, X
    12b6:	28 2f       	mov	r18, r24
    12b8:	2a 95       	dec	r18
    12ba:	f1 f7       	brne	.-4      	; 0x12b8 <LCD_Char+0x4b2>
    12bc:	ce 01       	movw	r24, r28
    12be:	82 59       	subi	r24, 0x92	; 146
    12c0:	9f 4f       	sbci	r25, 0xFF	; 255
    12c2:	fc 01       	movw	r30, r24
    12c4:	20 83       	st	Z, r18
}
    12c6:	00 00       	nop
	_delay_us(1);
	LCD_Port &= ~ (1<<EN);
    12c8:	85 e2       	ldi	r24, 0x25	; 37
    12ca:	90 e0       	ldi	r25, 0x00	; 0
    12cc:	dc 01       	movw	r26, r24
    12ce:	2c 91       	ld	r18, X
    12d0:	85 e2       	ldi	r24, 0x25	; 37
    12d2:	90 e0       	ldi	r25, 0x00	; 0
    12d4:	2d 7f       	andi	r18, 0xFD	; 253
    12d6:	fc 01       	movw	r30, r24
    12d8:	20 83       	st	Z, r18
    12da:	80 e0       	ldi	r24, 0x00	; 0
    12dc:	90 e0       	ldi	r25, 0x00	; 0
    12de:	a8 e4       	ldi	r26, 0x48	; 72
    12e0:	b3 e4       	ldi	r27, 0x43	; 67
    12e2:	8f a7       	std	Y+47, r24	; 0x2f
    12e4:	98 ab       	std	Y+48, r25	; 0x30
    12e6:	a9 ab       	std	Y+49, r26	; 0x31
    12e8:	ba ab       	std	Y+50, r27	; 0x32
	__tmp = ((F_CPU) / 3e6) * __us;
    12ea:	2b ea       	ldi	r18, 0xAB	; 171
    12ec:	3a ea       	ldi	r19, 0xAA	; 170
    12ee:	4a ea       	ldi	r20, 0xAA	; 170
    12f0:	50 e4       	ldi	r21, 0x40	; 64
    12f2:	6f a5       	ldd	r22, Y+47	; 0x2f
    12f4:	78 a9       	ldd	r23, Y+48	; 0x30
    12f6:	89 a9       	ldd	r24, Y+49	; 0x31
    12f8:	9a a9       	ldd	r25, Y+50	; 0x32
    12fa:	0e 94 b4 12 	call	0x2568	; 0x2568 <__mulsf3>
    12fe:	cc 55       	subi	r28, 0x5C	; 92
    1300:	df 4f       	sbci	r29, 0xFF	; 255
    1302:	68 83       	st	Y, r22
    1304:	79 83       	std	Y+1, r23	; 0x01
    1306:	8a 83       	std	Y+2, r24	; 0x02
    1308:	9b 83       	std	Y+3, r25	; 0x03
    130a:	c4 5a       	subi	r28, 0xA4	; 164
    130c:	d0 40       	sbci	r29, 0x00	; 0
    130e:	cc 55       	subi	r28, 0x5C	; 92
    1310:	df 4f       	sbci	r29, 0xFF	; 255
    1312:	88 81       	ld	r24, Y
    1314:	99 81       	ldd	r25, Y+1	; 0x01
    1316:	aa 81       	ldd	r26, Y+2	; 0x02
    1318:	bb 81       	ldd	r27, Y+3	; 0x03
    131a:	c4 5a       	subi	r28, 0xA4	; 164
    131c:	d0 40       	sbci	r29, 0x00	; 0
    131e:	8b ab       	std	Y+51, r24	; 0x33
    1320:	9c ab       	std	Y+52, r25	; 0x34
    1322:	ad ab       	std	Y+53, r26	; 0x35
    1324:	be ab       	std	Y+54, r27	; 0x36
	__tmp2 = ((F_CPU) / 4e6) * __us;
    1326:	20 e0       	ldi	r18, 0x00	; 0
    1328:	30 e0       	ldi	r19, 0x00	; 0
    132a:	40 e8       	ldi	r20, 0x80	; 128
    132c:	50 e4       	ldi	r21, 0x40	; 64
    132e:	6f a5       	ldd	r22, Y+47	; 0x2f
    1330:	78 a9       	ldd	r23, Y+48	; 0x30
    1332:	89 a9       	ldd	r24, Y+49	; 0x31
    1334:	9a a9       	ldd	r25, Y+50	; 0x32
    1336:	0e 94 b4 12 	call	0x2568	; 0x2568 <__mulsf3>
    133a:	c8 55       	subi	r28, 0x58	; 88
    133c:	df 4f       	sbci	r29, 0xFF	; 255
    133e:	68 83       	st	Y, r22
    1340:	79 83       	std	Y+1, r23	; 0x01
    1342:	8a 83       	std	Y+2, r24	; 0x02
    1344:	9b 83       	std	Y+3, r25	; 0x03
    1346:	c8 5a       	subi	r28, 0xA8	; 168
    1348:	d0 40       	sbci	r29, 0x00	; 0
    134a:	c8 55       	subi	r28, 0x58	; 88
    134c:	df 4f       	sbci	r29, 0xFF	; 255
    134e:	88 81       	ld	r24, Y
    1350:	99 81       	ldd	r25, Y+1	; 0x01
    1352:	aa 81       	ldd	r26, Y+2	; 0x02
    1354:	bb 81       	ldd	r27, Y+3	; 0x03
    1356:	c8 5a       	subi	r28, 0xA8	; 168
    1358:	d0 40       	sbci	r29, 0x00	; 0
    135a:	8f ab       	std	Y+55, r24	; 0x37
    135c:	98 af       	std	Y+56, r25	; 0x38
    135e:	a9 af       	std	Y+57, r26	; 0x39
    1360:	ba af       	std	Y+58, r27	; 0x3a
	if (__tmp < 1.0)
    1362:	20 e0       	ldi	r18, 0x00	; 0
    1364:	30 e0       	ldi	r19, 0x00	; 0
    1366:	40 e8       	ldi	r20, 0x80	; 128
    1368:	5f e3       	ldi	r21, 0x3F	; 63
    136a:	6b a9       	ldd	r22, Y+51	; 0x33
    136c:	7c a9       	ldd	r23, Y+52	; 0x34
    136e:	8d a9       	ldd	r24, Y+53	; 0x35
    1370:	9e a9       	ldd	r25, Y+54	; 0x36
    1372:	0e 94 94 11 	call	0x2328	; 0x2328 <__cmpsf2>
    1376:	88 23       	and	r24, r24
    1378:	1c f4       	brge	.+6      	; 0x1380 <LCD_Char+0x57a>
		__ticks = 1;
    137a:	81 e0       	ldi	r24, 0x01	; 1
    137c:	8b af       	std	Y+59, r24	; 0x3b
    137e:	71 c1       	rjmp	.+738    	; 0x1662 <LCD_Char+0x85c>
	else if (__tmp2 > 65535)
    1380:	20 e0       	ldi	r18, 0x00	; 0
    1382:	3f ef       	ldi	r19, 0xFF	; 255
    1384:	4f e7       	ldi	r20, 0x7F	; 127
    1386:	57 e4       	ldi	r21, 0x47	; 71
    1388:	6f a9       	ldd	r22, Y+55	; 0x37
    138a:	78 ad       	ldd	r23, Y+56	; 0x38
    138c:	89 ad       	ldd	r24, Y+57	; 0x39
    138e:	9a ad       	ldd	r25, Y+58	; 0x3a
    1390:	0e 94 af 12 	call	0x255e	; 0x255e <__gesf2>
    1394:	18 16       	cp	r1, r24
    1396:	0c f0       	brlt	.+2      	; 0x139a <LCD_Char+0x594>
    1398:	0e c1       	rjmp	.+540    	; 0x15b6 <LCD_Char+0x7b0>
		_delay_ms(__us / 1000.0);
    139a:	20 e0       	ldi	r18, 0x00	; 0
    139c:	30 e0       	ldi	r19, 0x00	; 0
    139e:	4a e7       	ldi	r20, 0x7A	; 122
    13a0:	54 e4       	ldi	r21, 0x44	; 68
    13a2:	6f a5       	ldd	r22, Y+47	; 0x2f
    13a4:	78 a9       	ldd	r23, Y+48	; 0x30
    13a6:	89 a9       	ldd	r24, Y+49	; 0x31
    13a8:	9a a9       	ldd	r25, Y+50	; 0x32
    13aa:	0e 94 99 11 	call	0x2332	; 0x2332 <__divsf3>
    13ae:	c4 55       	subi	r28, 0x54	; 84
    13b0:	df 4f       	sbci	r29, 0xFF	; 255
    13b2:	68 83       	st	Y, r22
    13b4:	79 83       	std	Y+1, r23	; 0x01
    13b6:	8a 83       	std	Y+2, r24	; 0x02
    13b8:	9b 83       	std	Y+3, r25	; 0x03
    13ba:	cc 5a       	subi	r28, 0xAC	; 172
    13bc:	d0 40       	sbci	r29, 0x00	; 0
    13be:	c4 55       	subi	r28, 0x54	; 84
    13c0:	df 4f       	sbci	r29, 0xFF	; 255
    13c2:	88 81       	ld	r24, Y
    13c4:	99 81       	ldd	r25, Y+1	; 0x01
    13c6:	aa 81       	ldd	r26, Y+2	; 0x02
    13c8:	bb 81       	ldd	r27, Y+3	; 0x03
    13ca:	cc 5a       	subi	r28, 0xAC	; 172
    13cc:	d0 40       	sbci	r29, 0x00	; 0
    13ce:	8c af       	std	Y+60, r24	; 0x3c
    13d0:	9d af       	std	Y+61, r25	; 0x3d
    13d2:	ae af       	std	Y+62, r26	; 0x3e
    13d4:	bf af       	std	Y+63, r27	; 0x3f
	__tmp = ((F_CPU) / 4e3) * __ms;
    13d6:	8e 01       	movw	r16, r28
    13d8:	00 5c       	subi	r16, 0xC0	; 192
    13da:	1f 4f       	sbci	r17, 0xFF	; 255
    13dc:	20 e0       	ldi	r18, 0x00	; 0
    13de:	30 e0       	ldi	r19, 0x00	; 0
    13e0:	4a e7       	ldi	r20, 0x7A	; 122
    13e2:	55 e4       	ldi	r21, 0x45	; 69
    13e4:	6c ad       	ldd	r22, Y+60	; 0x3c
    13e6:	7d ad       	ldd	r23, Y+61	; 0x3d
    13e8:	8e ad       	ldd	r24, Y+62	; 0x3e
    13ea:	9f ad       	ldd	r25, Y+63	; 0x3f
    13ec:	0e 94 b4 12 	call	0x2568	; 0x2568 <__mulsf3>
    13f0:	c0 55       	subi	r28, 0x50	; 80
    13f2:	df 4f       	sbci	r29, 0xFF	; 255
    13f4:	68 83       	st	Y, r22
    13f6:	79 83       	std	Y+1, r23	; 0x01
    13f8:	8a 83       	std	Y+2, r24	; 0x02
    13fa:	9b 83       	std	Y+3, r25	; 0x03
    13fc:	c0 5b       	subi	r28, 0xB0	; 176
    13fe:	d0 40       	sbci	r29, 0x00	; 0
    1400:	c0 55       	subi	r28, 0x50	; 80
    1402:	df 4f       	sbci	r29, 0xFF	; 255
    1404:	88 81       	ld	r24, Y
    1406:	99 81       	ldd	r25, Y+1	; 0x01
    1408:	aa 81       	ldd	r26, Y+2	; 0x02
    140a:	bb 81       	ldd	r27, Y+3	; 0x03
    140c:	c0 5b       	subi	r28, 0xB0	; 176
    140e:	d0 40       	sbci	r29, 0x00	; 0
    1410:	f8 01       	movw	r30, r16
    1412:	80 83       	st	Z, r24
    1414:	91 83       	std	Z+1, r25	; 0x01
    1416:	a2 83       	std	Z+2, r26	; 0x02
    1418:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    141a:	ce 01       	movw	r24, r28
    141c:	80 5c       	subi	r24, 0xC0	; 192
    141e:	9f 4f       	sbci	r25, 0xFF	; 255
    1420:	20 e0       	ldi	r18, 0x00	; 0
    1422:	30 e0       	ldi	r19, 0x00	; 0
    1424:	40 e8       	ldi	r20, 0x80	; 128
    1426:	5f e3       	ldi	r21, 0x3F	; 63
    1428:	dc 01       	movw	r26, r24
    142a:	6d 91       	ld	r22, X+
    142c:	7d 91       	ld	r23, X+
    142e:	8d 91       	ld	r24, X+
    1430:	9c 91       	ld	r25, X
    1432:	0e 94 94 11 	call	0x2328	; 0x2328 <__cmpsf2>
    1436:	88 23       	and	r24, r24
    1438:	4c f4       	brge	.+18     	; 0x144c <LCD_Char+0x646>
		__ticks = 1;
    143a:	ce 01       	movw	r24, r28
    143c:	8c 5b       	subi	r24, 0xBC	; 188
    143e:	9f 4f       	sbci	r25, 0xFF	; 255
    1440:	21 e0       	ldi	r18, 0x01	; 1
    1442:	30 e0       	ldi	r19, 0x00	; 0
    1444:	fc 01       	movw	r30, r24
    1446:	31 83       	std	Z+1, r19	; 0x01
    1448:	20 83       	st	Z, r18
    144a:	9a c0       	rjmp	.+308    	; 0x1580 <LCD_Char+0x77a>
	else if (__tmp > 65535)
    144c:	ce 01       	movw	r24, r28
    144e:	80 5c       	subi	r24, 0xC0	; 192
    1450:	9f 4f       	sbci	r25, 0xFF	; 255
    1452:	20 e0       	ldi	r18, 0x00	; 0
    1454:	3f ef       	ldi	r19, 0xFF	; 255
    1456:	4f e7       	ldi	r20, 0x7F	; 127
    1458:	57 e4       	ldi	r21, 0x47	; 71
    145a:	dc 01       	movw	r26, r24
    145c:	6d 91       	ld	r22, X+
    145e:	7d 91       	ld	r23, X+
    1460:	8d 91       	ld	r24, X+
    1462:	9c 91       	ld	r25, X
    1464:	0e 94 af 12 	call	0x255e	; 0x255e <__gesf2>
    1468:	18 16       	cp	r1, r24
    146a:	0c f0       	brlt	.+2      	; 0x146e <LCD_Char+0x668>
    146c:	6b c0       	rjmp	.+214    	; 0x1544 <LCD_Char+0x73e>
		__ticks = (uint16_t) (__ms * 10.0);
    146e:	20 e0       	ldi	r18, 0x00	; 0
    1470:	30 e0       	ldi	r19, 0x00	; 0
    1472:	40 e2       	ldi	r20, 0x20	; 32
    1474:	51 e4       	ldi	r21, 0x41	; 65
    1476:	6c ad       	ldd	r22, Y+60	; 0x3c
    1478:	7d ad       	ldd	r23, Y+61	; 0x3d
    147a:	8e ad       	ldd	r24, Y+62	; 0x3e
    147c:	9f ad       	ldd	r25, Y+63	; 0x3f
    147e:	0e 94 b4 12 	call	0x2568	; 0x2568 <__mulsf3>
    1482:	cc 54       	subi	r28, 0x4C	; 76
    1484:	df 4f       	sbci	r29, 0xFF	; 255
    1486:	68 83       	st	Y, r22
    1488:	79 83       	std	Y+1, r23	; 0x01
    148a:	8a 83       	std	Y+2, r24	; 0x02
    148c:	9b 83       	std	Y+3, r25	; 0x03
    148e:	c4 5b       	subi	r28, 0xB4	; 180
    1490:	d0 40       	sbci	r29, 0x00	; 0
    1492:	cc 54       	subi	r28, 0x4C	; 76
    1494:	df 4f       	sbci	r29, 0xFF	; 255
    1496:	88 81       	ld	r24, Y
    1498:	99 81       	ldd	r25, Y+1	; 0x01
    149a:	aa 81       	ldd	r26, Y+2	; 0x02
    149c:	bb 81       	ldd	r27, Y+3	; 0x03
    149e:	c4 5b       	subi	r28, 0xB4	; 180
    14a0:	d0 40       	sbci	r29, 0x00	; 0
    14a2:	ec 96       	adiw	r28, 0x3c	; 60
    14a4:	8c af       	std	Y+60, r24	; 0x3c
    14a6:	9d af       	std	Y+61, r25	; 0x3d
    14a8:	ae af       	std	Y+62, r26	; 0x3e
    14aa:	bf af       	std	Y+63, r27	; 0x3f
    14ac:	ec 97       	sbiw	r28, 0x3c	; 60
    14ae:	8e 01       	movw	r16, r28
    14b0:	0c 5b       	subi	r16, 0xBC	; 188
    14b2:	1f 4f       	sbci	r17, 0xFF	; 255
    14b4:	ec 96       	adiw	r28, 0x3c	; 60
    14b6:	6c ad       	ldd	r22, Y+60	; 0x3c
    14b8:	7d ad       	ldd	r23, Y+61	; 0x3d
    14ba:	8e ad       	ldd	r24, Y+62	; 0x3e
    14bc:	9f ad       	ldd	r25, Y+63	; 0x3f
    14be:	ec 97       	sbiw	r28, 0x3c	; 60
    14c0:	0e 94 0b 12 	call	0x2416	; 0x2416 <__fixunssfsi>
    14c4:	c8 54       	subi	r28, 0x48	; 72
    14c6:	df 4f       	sbci	r29, 0xFF	; 255
    14c8:	68 83       	st	Y, r22
    14ca:	79 83       	std	Y+1, r23	; 0x01
    14cc:	8a 83       	std	Y+2, r24	; 0x02
    14ce:	9b 83       	std	Y+3, r25	; 0x03
    14d0:	c8 5b       	subi	r28, 0xB8	; 184
    14d2:	d0 40       	sbci	r29, 0x00	; 0
    14d4:	c8 54       	subi	r28, 0x48	; 72
    14d6:	df 4f       	sbci	r29, 0xFF	; 255
    14d8:	e8 81       	ld	r30, Y
    14da:	f9 81       	ldd	r31, Y+1	; 0x01
    14dc:	c8 5b       	subi	r28, 0xB8	; 184
    14de:	d0 40       	sbci	r29, 0x00	; 0
    14e0:	d8 01       	movw	r26, r16
    14e2:	ed 93       	st	X+, r30
    14e4:	fc 93       	st	X, r31
		while(__ticks)
    14e6:	25 c0       	rjmp	.+74     	; 0x1532 <LCD_Char+0x72c>
    14e8:	ce 01       	movw	r24, r28
    14ea:	8a 5b       	subi	r24, 0xBA	; 186
    14ec:	9f 4f       	sbci	r25, 0xFF	; 255
    14ee:	20 e9       	ldi	r18, 0x90	; 144
    14f0:	31 e0       	ldi	r19, 0x01	; 1
    14f2:	dc 01       	movw	r26, r24
    14f4:	2d 93       	st	X+, r18
    14f6:	3c 93       	st	X, r19
	__asm__ volatile (
    14f8:	ce 01       	movw	r24, r28
    14fa:	8a 5b       	subi	r24, 0xBA	; 186
    14fc:	9f 4f       	sbci	r25, 0xFF	; 255
    14fe:	fc 01       	movw	r30, r24
    1500:	80 81       	ld	r24, Z
    1502:	91 81       	ldd	r25, Z+1	; 0x01
    1504:	01 97       	sbiw	r24, 0x01	; 1
    1506:	f1 f7       	brne	.-4      	; 0x1504 <LCD_Char+0x6fe>
    1508:	9e 01       	movw	r18, r28
    150a:	2a 5b       	subi	r18, 0xBA	; 186
    150c:	3f 4f       	sbci	r19, 0xFF	; 255
    150e:	d9 01       	movw	r26, r18
    1510:	8d 93       	st	X+, r24
    1512:	9c 93       	st	X, r25
}
    1514:	00 00       	nop
			__ticks --;
    1516:	ce 01       	movw	r24, r28
    1518:	8c 5b       	subi	r24, 0xBC	; 188
    151a:	9f 4f       	sbci	r25, 0xFF	; 255
    151c:	9e 01       	movw	r18, r28
    151e:	2c 5b       	subi	r18, 0xBC	; 188
    1520:	3f 4f       	sbci	r19, 0xFF	; 255
    1522:	f9 01       	movw	r30, r18
    1524:	20 81       	ld	r18, Z
    1526:	31 81       	ldd	r19, Z+1	; 0x01
    1528:	21 50       	subi	r18, 0x01	; 1
    152a:	31 09       	sbc	r19, r1
    152c:	dc 01       	movw	r26, r24
    152e:	2d 93       	st	X+, r18
    1530:	3c 93       	st	X, r19
		while(__ticks)
    1532:	ce 01       	movw	r24, r28
    1534:	8c 5b       	subi	r24, 0xBC	; 188
    1536:	9f 4f       	sbci	r25, 0xFF	; 255
    1538:	fc 01       	movw	r30, r24
    153a:	80 81       	ld	r24, Z
    153c:	91 81       	ldd	r25, Z+1	; 0x01
    153e:	89 2b       	or	r24, r25
    1540:	99 f6       	brne	.-90     	; 0x14e8 <LCD_Char+0x6e2>
		return;
    1542:	8f c0       	rjmp	.+286    	; 0x1662 <LCD_Char+0x85c>
		__ticks = (uint16_t)__tmp;
    1544:	8e 01       	movw	r16, r28
    1546:	0c 5b       	subi	r16, 0xBC	; 188
    1548:	1f 4f       	sbci	r17, 0xFF	; 255
    154a:	ce 01       	movw	r24, r28
    154c:	80 5c       	subi	r24, 0xC0	; 192
    154e:	9f 4f       	sbci	r25, 0xFF	; 255
    1550:	dc 01       	movw	r26, r24
    1552:	6d 91       	ld	r22, X+
    1554:	7d 91       	ld	r23, X+
    1556:	8d 91       	ld	r24, X+
    1558:	9c 91       	ld	r25, X
    155a:	0e 94 0b 12 	call	0x2416	; 0x2416 <__fixunssfsi>
    155e:	c4 54       	subi	r28, 0x44	; 68
    1560:	df 4f       	sbci	r29, 0xFF	; 255
    1562:	68 83       	st	Y, r22
    1564:	79 83       	std	Y+1, r23	; 0x01
    1566:	8a 83       	std	Y+2, r24	; 0x02
    1568:	9b 83       	std	Y+3, r25	; 0x03
    156a:	cc 5b       	subi	r28, 0xBC	; 188
    156c:	d0 40       	sbci	r29, 0x00	; 0
    156e:	c4 54       	subi	r28, 0x44	; 68
    1570:	df 4f       	sbci	r29, 0xFF	; 255
    1572:	88 81       	ld	r24, Y
    1574:	99 81       	ldd	r25, Y+1	; 0x01
    1576:	cc 5b       	subi	r28, 0xBC	; 188
    1578:	d0 40       	sbci	r29, 0x00	; 0
    157a:	f8 01       	movw	r30, r16
    157c:	91 83       	std	Z+1, r25	; 0x01
    157e:	80 83       	st	Z, r24
    1580:	ce 01       	movw	r24, r28
    1582:	88 5b       	subi	r24, 0xB8	; 184
    1584:	9f 4f       	sbci	r25, 0xFF	; 255
    1586:	9e 01       	movw	r18, r28
    1588:	2c 5b       	subi	r18, 0xBC	; 188
    158a:	3f 4f       	sbci	r19, 0xFF	; 255
    158c:	d9 01       	movw	r26, r18
    158e:	2d 91       	ld	r18, X+
    1590:	3c 91       	ld	r19, X
    1592:	fc 01       	movw	r30, r24
    1594:	31 83       	std	Z+1, r19	; 0x01
    1596:	20 83       	st	Z, r18
	__asm__ volatile (
    1598:	ce 01       	movw	r24, r28
    159a:	88 5b       	subi	r24, 0xB8	; 184
    159c:	9f 4f       	sbci	r25, 0xFF	; 255
    159e:	dc 01       	movw	r26, r24
    15a0:	8d 91       	ld	r24, X+
    15a2:	9c 91       	ld	r25, X
    15a4:	01 97       	sbiw	r24, 0x01	; 1
    15a6:	f1 f7       	brne	.-4      	; 0x15a4 <LCD_Char+0x79e>
    15a8:	9e 01       	movw	r18, r28
    15aa:	28 5b       	subi	r18, 0xB8	; 184
    15ac:	3f 4f       	sbci	r19, 0xFF	; 255
    15ae:	f9 01       	movw	r30, r18
    15b0:	91 83       	std	Z+1, r25	; 0x01
    15b2:	80 83       	st	Z, r24
}
    15b4:	56 c0       	rjmp	.+172    	; 0x1662 <LCD_Char+0x85c>
	else if (__tmp > 255)
    15b6:	20 e0       	ldi	r18, 0x00	; 0
    15b8:	30 e0       	ldi	r19, 0x00	; 0
    15ba:	4f e7       	ldi	r20, 0x7F	; 127
    15bc:	53 e4       	ldi	r21, 0x43	; 67
    15be:	6b a9       	ldd	r22, Y+51	; 0x33
    15c0:	7c a9       	ldd	r23, Y+52	; 0x34
    15c2:	8d a9       	ldd	r24, Y+53	; 0x35
    15c4:	9e a9       	ldd	r25, Y+54	; 0x36
    15c6:	0e 94 af 12 	call	0x255e	; 0x255e <__gesf2>
    15ca:	18 16       	cp	r1, r24
    15cc:	b4 f5       	brge	.+108    	; 0x163a <LCD_Char+0x834>
		uint16_t __ticks=(uint16_t)__tmp2;
    15ce:	8e 01       	movw	r16, r28
    15d0:	06 5b       	subi	r16, 0xB6	; 182
    15d2:	1f 4f       	sbci	r17, 0xFF	; 255
    15d4:	6f a9       	ldd	r22, Y+55	; 0x37
    15d6:	78 ad       	ldd	r23, Y+56	; 0x38
    15d8:	89 ad       	ldd	r24, Y+57	; 0x39
    15da:	9a ad       	ldd	r25, Y+58	; 0x3a
    15dc:	0e 94 0b 12 	call	0x2416	; 0x2416 <__fixunssfsi>
    15e0:	c0 54       	subi	r28, 0x40	; 64
    15e2:	df 4f       	sbci	r29, 0xFF	; 255
    15e4:	68 83       	st	Y, r22
    15e6:	79 83       	std	Y+1, r23	; 0x01
    15e8:	8a 83       	std	Y+2, r24	; 0x02
    15ea:	9b 83       	std	Y+3, r25	; 0x03
    15ec:	c0 5c       	subi	r28, 0xC0	; 192
    15ee:	d0 40       	sbci	r29, 0x00	; 0
    15f0:	c0 54       	subi	r28, 0x40	; 64
    15f2:	df 4f       	sbci	r29, 0xFF	; 255
    15f4:	e8 81       	ld	r30, Y
    15f6:	f9 81       	ldd	r31, Y+1	; 0x01
    15f8:	c0 5c       	subi	r28, 0xC0	; 192
    15fa:	d0 40       	sbci	r29, 0x00	; 0
    15fc:	d8 01       	movw	r26, r16
    15fe:	ed 93       	st	X+, r30
    1600:	fc 93       	st	X, r31
    1602:	ce 01       	movw	r24, r28
    1604:	84 5b       	subi	r24, 0xB4	; 180
    1606:	9f 4f       	sbci	r25, 0xFF	; 255
    1608:	9e 01       	movw	r18, r28
    160a:	26 5b       	subi	r18, 0xB6	; 182
    160c:	3f 4f       	sbci	r19, 0xFF	; 255
    160e:	d9 01       	movw	r26, r18
    1610:	2d 91       	ld	r18, X+
    1612:	3c 91       	ld	r19, X
    1614:	fc 01       	movw	r30, r24
    1616:	31 83       	std	Z+1, r19	; 0x01
    1618:	20 83       	st	Z, r18
	__asm__ volatile (
    161a:	ce 01       	movw	r24, r28
    161c:	84 5b       	subi	r24, 0xB4	; 180
    161e:	9f 4f       	sbci	r25, 0xFF	; 255
    1620:	dc 01       	movw	r26, r24
    1622:	8d 91       	ld	r24, X+
    1624:	9c 91       	ld	r25, X
    1626:	01 97       	sbiw	r24, 0x01	; 1
    1628:	f1 f7       	brne	.-4      	; 0x1626 <LCD_Char+0x820>
    162a:	9e 01       	movw	r18, r28
    162c:	24 5b       	subi	r18, 0xB4	; 180
    162e:	3f 4f       	sbci	r19, 0xFF	; 255
    1630:	f9 01       	movw	r30, r18
    1632:	91 83       	std	Z+1, r25	; 0x01
    1634:	80 83       	st	Z, r24
}
    1636:	00 00       	nop
		return;
    1638:	28 c0       	rjmp	.+80     	; 0x168a <LCD_Char+0x884>
		__ticks = (uint8_t)__tmp;
    163a:	6b a9       	ldd	r22, Y+51	; 0x33
    163c:	7c a9       	ldd	r23, Y+52	; 0x34
    163e:	8d a9       	ldd	r24, Y+53	; 0x35
    1640:	9e a9       	ldd	r25, Y+54	; 0x36
    1642:	0e 94 0b 12 	call	0x2416	; 0x2416 <__fixunssfsi>
    1646:	cc 53       	subi	r28, 0x3C	; 60
    1648:	df 4f       	sbci	r29, 0xFF	; 255
    164a:	68 83       	st	Y, r22
    164c:	79 83       	std	Y+1, r23	; 0x01
    164e:	8a 83       	std	Y+2, r24	; 0x02
    1650:	9b 83       	std	Y+3, r25	; 0x03
    1652:	c4 5c       	subi	r28, 0xC4	; 196
    1654:	d0 40       	sbci	r29, 0x00	; 0
    1656:	cc 53       	subi	r28, 0x3C	; 60
    1658:	df 4f       	sbci	r29, 0xFF	; 255
    165a:	f8 81       	ld	r31, Y
    165c:	c4 5c       	subi	r28, 0xC4	; 196
    165e:	d0 40       	sbci	r29, 0x00	; 0
    1660:	fb af       	std	Y+59, r31	; 0x3b
    1662:	ce 01       	movw	r24, r28
    1664:	82 5b       	subi	r24, 0xB2	; 178
    1666:	9f 4f       	sbci	r25, 0xFF	; 255
    1668:	2b ad       	ldd	r18, Y+59	; 0x3b
    166a:	dc 01       	movw	r26, r24
    166c:	2c 93       	st	X, r18
	__asm__ volatile (
    166e:	ce 01       	movw	r24, r28
    1670:	82 5b       	subi	r24, 0xB2	; 178
    1672:	9f 4f       	sbci	r25, 0xFF	; 255
    1674:	fc 01       	movw	r30, r24
    1676:	80 81       	ld	r24, Z
    1678:	28 2f       	mov	r18, r24
    167a:	2a 95       	dec	r18
    167c:	f1 f7       	brne	.-4      	; 0x167a <LCD_Char+0x874>
    167e:	ce 01       	movw	r24, r28
    1680:	82 5b       	subi	r24, 0xB2	; 178
    1682:	9f 4f       	sbci	r25, 0xFF	; 255
    1684:	dc 01       	movw	r26, r24
    1686:	2c 93       	st	X, r18
}
    1688:	00 00       	nop

	_delay_us(200);

	LCD_Port = ((LCD_Port & 0x0F) | (data << 4)) >> 2; /* sending lower nibble */
    168a:	85 e2       	ldi	r24, 0x25	; 37
    168c:	90 e0       	ldi	r25, 0x00	; 0
    168e:	fc 01       	movw	r30, r24
    1690:	80 81       	ld	r24, Z
    1692:	88 2f       	mov	r24, r24
    1694:	90 e0       	ldi	r25, 0x00	; 0
    1696:	9c 01       	movw	r18, r24
    1698:	2f 70       	andi	r18, 0x0F	; 15
    169a:	33 27       	eor	r19, r19
    169c:	ce 01       	movw	r24, r28
    169e:	81 59       	subi	r24, 0x91	; 145
    16a0:	9f 4f       	sbci	r25, 0xFF	; 255
    16a2:	dc 01       	movw	r26, r24
    16a4:	8c 91       	ld	r24, X
    16a6:	88 2f       	mov	r24, r24
    16a8:	90 e0       	ldi	r25, 0x00	; 0
    16aa:	82 95       	swap	r24
    16ac:	92 95       	swap	r25
    16ae:	90 7f       	andi	r25, 0xF0	; 240
    16b0:	98 27       	eor	r25, r24
    16b2:	80 7f       	andi	r24, 0xF0	; 240
    16b4:	98 27       	eor	r25, r24
    16b6:	82 2b       	or	r24, r18
    16b8:	93 2b       	or	r25, r19
    16ba:	9c 01       	movw	r18, r24
    16bc:	35 95       	asr	r19
    16be:	27 95       	ror	r18
    16c0:	35 95       	asr	r19
    16c2:	27 95       	ror	r18
    16c4:	85 e2       	ldi	r24, 0x25	; 37
    16c6:	90 e0       	ldi	r25, 0x00	; 0
    16c8:	fc 01       	movw	r30, r24
    16ca:	20 83       	st	Z, r18
	LCD_Port |= (1<<RS);		/* RS=1, data reg. */
    16cc:	85 e2       	ldi	r24, 0x25	; 37
    16ce:	90 e0       	ldi	r25, 0x00	; 0
    16d0:	dc 01       	movw	r26, r24
    16d2:	2c 91       	ld	r18, X
    16d4:	85 e2       	ldi	r24, 0x25	; 37
    16d6:	90 e0       	ldi	r25, 0x00	; 0
    16d8:	21 60       	ori	r18, 0x01	; 1
    16da:	fc 01       	movw	r30, r24
    16dc:	20 83       	st	Z, r18
	LCD_Port |= (1<<EN);
    16de:	85 e2       	ldi	r24, 0x25	; 37
    16e0:	90 e0       	ldi	r25, 0x00	; 0
    16e2:	dc 01       	movw	r26, r24
    16e4:	2c 91       	ld	r18, X
    16e6:	85 e2       	ldi	r24, 0x25	; 37
    16e8:	90 e0       	ldi	r25, 0x00	; 0
    16ea:	22 60       	ori	r18, 0x02	; 2
    16ec:	fc 01       	movw	r30, r24
    16ee:	20 83       	st	Z, r18
    16f0:	80 e0       	ldi	r24, 0x00	; 0
    16f2:	90 e0       	ldi	r25, 0x00	; 0
    16f4:	a0 e8       	ldi	r26, 0x80	; 128
    16f6:	bf e3       	ldi	r27, 0x3F	; 63
    16f8:	8f 87       	std	Y+15, r24	; 0x0f
    16fa:	98 8b       	std	Y+16, r25	; 0x10
    16fc:	a9 8b       	std	Y+17, r26	; 0x11
    16fe:	ba 8b       	std	Y+18, r27	; 0x12
	__tmp = ((F_CPU) / 3e6) * __us;
    1700:	2b ea       	ldi	r18, 0xAB	; 171
    1702:	3a ea       	ldi	r19, 0xAA	; 170
    1704:	4a ea       	ldi	r20, 0xAA	; 170
    1706:	50 e4       	ldi	r21, 0x40	; 64
    1708:	6f 85       	ldd	r22, Y+15	; 0x0f
    170a:	78 89       	ldd	r23, Y+16	; 0x10
    170c:	89 89       	ldd	r24, Y+17	; 0x11
    170e:	9a 89       	ldd	r25, Y+18	; 0x12
    1710:	0e 94 b4 12 	call	0x2568	; 0x2568 <__mulsf3>
    1714:	c8 53       	subi	r28, 0x38	; 56
    1716:	df 4f       	sbci	r29, 0xFF	; 255
    1718:	68 83       	st	Y, r22
    171a:	79 83       	std	Y+1, r23	; 0x01
    171c:	8a 83       	std	Y+2, r24	; 0x02
    171e:	9b 83       	std	Y+3, r25	; 0x03
    1720:	c8 5c       	subi	r28, 0xC8	; 200
    1722:	d0 40       	sbci	r29, 0x00	; 0
    1724:	c8 53       	subi	r28, 0x38	; 56
    1726:	df 4f       	sbci	r29, 0xFF	; 255
    1728:	88 81       	ld	r24, Y
    172a:	99 81       	ldd	r25, Y+1	; 0x01
    172c:	aa 81       	ldd	r26, Y+2	; 0x02
    172e:	bb 81       	ldd	r27, Y+3	; 0x03
    1730:	c8 5c       	subi	r28, 0xC8	; 200
    1732:	d0 40       	sbci	r29, 0x00	; 0
    1734:	8b 8b       	std	Y+19, r24	; 0x13
    1736:	9c 8b       	std	Y+20, r25	; 0x14
    1738:	ad 8b       	std	Y+21, r26	; 0x15
    173a:	be 8b       	std	Y+22, r27	; 0x16
	__tmp2 = ((F_CPU) / 4e6) * __us;
    173c:	20 e0       	ldi	r18, 0x00	; 0
    173e:	30 e0       	ldi	r19, 0x00	; 0
    1740:	40 e8       	ldi	r20, 0x80	; 128
    1742:	50 e4       	ldi	r21, 0x40	; 64
    1744:	6f 85       	ldd	r22, Y+15	; 0x0f
    1746:	78 89       	ldd	r23, Y+16	; 0x10
    1748:	89 89       	ldd	r24, Y+17	; 0x11
    174a:	9a 89       	ldd	r25, Y+18	; 0x12
    174c:	0e 94 b4 12 	call	0x2568	; 0x2568 <__mulsf3>
    1750:	c4 53       	subi	r28, 0x34	; 52
    1752:	df 4f       	sbci	r29, 0xFF	; 255
    1754:	68 83       	st	Y, r22
    1756:	79 83       	std	Y+1, r23	; 0x01
    1758:	8a 83       	std	Y+2, r24	; 0x02
    175a:	9b 83       	std	Y+3, r25	; 0x03
    175c:	cc 5c       	subi	r28, 0xCC	; 204
    175e:	d0 40       	sbci	r29, 0x00	; 0
    1760:	c4 53       	subi	r28, 0x34	; 52
    1762:	df 4f       	sbci	r29, 0xFF	; 255
    1764:	88 81       	ld	r24, Y
    1766:	99 81       	ldd	r25, Y+1	; 0x01
    1768:	aa 81       	ldd	r26, Y+2	; 0x02
    176a:	bb 81       	ldd	r27, Y+3	; 0x03
    176c:	cc 5c       	subi	r28, 0xCC	; 204
    176e:	d0 40       	sbci	r29, 0x00	; 0
    1770:	8f 8b       	std	Y+23, r24	; 0x17
    1772:	98 8f       	std	Y+24, r25	; 0x18
    1774:	a9 8f       	std	Y+25, r26	; 0x19
    1776:	ba 8f       	std	Y+26, r27	; 0x1a
	if (__tmp < 1.0)
    1778:	20 e0       	ldi	r18, 0x00	; 0
    177a:	30 e0       	ldi	r19, 0x00	; 0
    177c:	40 e8       	ldi	r20, 0x80	; 128
    177e:	5f e3       	ldi	r21, 0x3F	; 63
    1780:	6b 89       	ldd	r22, Y+19	; 0x13
    1782:	7c 89       	ldd	r23, Y+20	; 0x14
    1784:	8d 89       	ldd	r24, Y+21	; 0x15
    1786:	9e 89       	ldd	r25, Y+22	; 0x16
    1788:	0e 94 94 11 	call	0x2328	; 0x2328 <__cmpsf2>
    178c:	88 23       	and	r24, r24
    178e:	1c f4       	brge	.+6      	; 0x1796 <LCD_Char+0x990>
		__ticks = 1;
    1790:	81 e0       	ldi	r24, 0x01	; 1
    1792:	8b 8f       	std	Y+27, r24	; 0x1b
    1794:	18 c1       	rjmp	.+560    	; 0x19c6 <LCD_Char+0xbc0>
	else if (__tmp2 > 65535)
    1796:	20 e0       	ldi	r18, 0x00	; 0
    1798:	3f ef       	ldi	r19, 0xFF	; 255
    179a:	4f e7       	ldi	r20, 0x7F	; 127
    179c:	57 e4       	ldi	r21, 0x47	; 71
    179e:	6f 89       	ldd	r22, Y+23	; 0x17
    17a0:	78 8d       	ldd	r23, Y+24	; 0x18
    17a2:	89 8d       	ldd	r24, Y+25	; 0x19
    17a4:	9a 8d       	ldd	r25, Y+26	; 0x1a
    17a6:	0e 94 af 12 	call	0x255e	; 0x255e <__gesf2>
    17aa:	18 16       	cp	r1, r24
    17ac:	0c f0       	brlt	.+2      	; 0x17b0 <LCD_Char+0x9aa>
    17ae:	c9 c0       	rjmp	.+402    	; 0x1942 <LCD_Char+0xb3c>
		_delay_ms(__us / 1000.0);
    17b0:	20 e0       	ldi	r18, 0x00	; 0
    17b2:	30 e0       	ldi	r19, 0x00	; 0
    17b4:	4a e7       	ldi	r20, 0x7A	; 122
    17b6:	54 e4       	ldi	r21, 0x44	; 68
    17b8:	6f 85       	ldd	r22, Y+15	; 0x0f
    17ba:	78 89       	ldd	r23, Y+16	; 0x10
    17bc:	89 89       	ldd	r24, Y+17	; 0x11
    17be:	9a 89       	ldd	r25, Y+18	; 0x12
    17c0:	0e 94 99 11 	call	0x2332	; 0x2332 <__divsf3>
    17c4:	c0 53       	subi	r28, 0x30	; 48
    17c6:	df 4f       	sbci	r29, 0xFF	; 255
    17c8:	68 83       	st	Y, r22
    17ca:	79 83       	std	Y+1, r23	; 0x01
    17cc:	8a 83       	std	Y+2, r24	; 0x02
    17ce:	9b 83       	std	Y+3, r25	; 0x03
    17d0:	c0 5d       	subi	r28, 0xD0	; 208
    17d2:	d0 40       	sbci	r29, 0x00	; 0
    17d4:	c0 53       	subi	r28, 0x30	; 48
    17d6:	df 4f       	sbci	r29, 0xFF	; 255
    17d8:	88 81       	ld	r24, Y
    17da:	99 81       	ldd	r25, Y+1	; 0x01
    17dc:	aa 81       	ldd	r26, Y+2	; 0x02
    17de:	bb 81       	ldd	r27, Y+3	; 0x03
    17e0:	c0 5d       	subi	r28, 0xD0	; 208
    17e2:	d0 40       	sbci	r29, 0x00	; 0
    17e4:	8c 8f       	std	Y+28, r24	; 0x1c
    17e6:	9d 8f       	std	Y+29, r25	; 0x1d
    17e8:	ae 8f       	std	Y+30, r26	; 0x1e
    17ea:	bf 8f       	std	Y+31, r27	; 0x1f
	__tmp = ((F_CPU) / 4e3) * __ms;
    17ec:	20 e0       	ldi	r18, 0x00	; 0
    17ee:	30 e0       	ldi	r19, 0x00	; 0
    17f0:	4a e7       	ldi	r20, 0x7A	; 122
    17f2:	55 e4       	ldi	r21, 0x45	; 69
    17f4:	6c 8d       	ldd	r22, Y+28	; 0x1c
    17f6:	7d 8d       	ldd	r23, Y+29	; 0x1d
    17f8:	8e 8d       	ldd	r24, Y+30	; 0x1e
    17fa:	9f 8d       	ldd	r25, Y+31	; 0x1f
    17fc:	0e 94 b4 12 	call	0x2568	; 0x2568 <__mulsf3>
    1800:	cc 52       	subi	r28, 0x2C	; 44
    1802:	df 4f       	sbci	r29, 0xFF	; 255
    1804:	68 83       	st	Y, r22
    1806:	79 83       	std	Y+1, r23	; 0x01
    1808:	8a 83       	std	Y+2, r24	; 0x02
    180a:	9b 83       	std	Y+3, r25	; 0x03
    180c:	c4 5d       	subi	r28, 0xD4	; 212
    180e:	d0 40       	sbci	r29, 0x00	; 0
    1810:	cc 52       	subi	r28, 0x2C	; 44
    1812:	df 4f       	sbci	r29, 0xFF	; 255
    1814:	88 81       	ld	r24, Y
    1816:	99 81       	ldd	r25, Y+1	; 0x01
    1818:	aa 81       	ldd	r26, Y+2	; 0x02
    181a:	bb 81       	ldd	r27, Y+3	; 0x03
    181c:	c4 5d       	subi	r28, 0xD4	; 212
    181e:	d0 40       	sbci	r29, 0x00	; 0
    1820:	88 a3       	std	Y+32, r24	; 0x20
    1822:	99 a3       	std	Y+33, r25	; 0x21
    1824:	aa a3       	std	Y+34, r26	; 0x22
    1826:	bb a3       	std	Y+35, r27	; 0x23
	if (__tmp < 1.0)
    1828:	20 e0       	ldi	r18, 0x00	; 0
    182a:	30 e0       	ldi	r19, 0x00	; 0
    182c:	40 e8       	ldi	r20, 0x80	; 128
    182e:	5f e3       	ldi	r21, 0x3F	; 63
    1830:	68 a1       	ldd	r22, Y+32	; 0x20
    1832:	79 a1       	ldd	r23, Y+33	; 0x21
    1834:	8a a1       	ldd	r24, Y+34	; 0x22
    1836:	9b a1       	ldd	r25, Y+35	; 0x23
    1838:	0e 94 94 11 	call	0x2328	; 0x2328 <__cmpsf2>
    183c:	88 23       	and	r24, r24
    183e:	2c f4       	brge	.+10     	; 0x184a <LCD_Char+0xa44>
		__ticks = 1;
    1840:	81 e0       	ldi	r24, 0x01	; 1
    1842:	90 e0       	ldi	r25, 0x00	; 0
    1844:	9d a3       	std	Y+37, r25	; 0x25
    1846:	8c a3       	std	Y+36, r24	; 0x24
    1848:	71 c0       	rjmp	.+226    	; 0x192c <LCD_Char+0xb26>
	else if (__tmp > 65535)
    184a:	20 e0       	ldi	r18, 0x00	; 0
    184c:	3f ef       	ldi	r19, 0xFF	; 255
    184e:	4f e7       	ldi	r20, 0x7F	; 127
    1850:	57 e4       	ldi	r21, 0x47	; 71
    1852:	68 a1       	ldd	r22, Y+32	; 0x20
    1854:	79 a1       	ldd	r23, Y+33	; 0x21
    1856:	8a a1       	ldd	r24, Y+34	; 0x22
    1858:	9b a1       	ldd	r25, Y+35	; 0x23
    185a:	0e 94 af 12 	call	0x255e	; 0x255e <__gesf2>
    185e:	18 16       	cp	r1, r24
    1860:	0c f0       	brlt	.+2      	; 0x1864 <LCD_Char+0xa5e>
    1862:	4e c0       	rjmp	.+156    	; 0x1900 <LCD_Char+0xafa>
		__ticks = (uint16_t) (__ms * 10.0);
    1864:	20 e0       	ldi	r18, 0x00	; 0
    1866:	30 e0       	ldi	r19, 0x00	; 0
    1868:	40 e2       	ldi	r20, 0x20	; 32
    186a:	51 e4       	ldi	r21, 0x41	; 65
    186c:	6c 8d       	ldd	r22, Y+28	; 0x1c
    186e:	7d 8d       	ldd	r23, Y+29	; 0x1d
    1870:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1872:	9f 8d       	ldd	r25, Y+31	; 0x1f
    1874:	0e 94 b4 12 	call	0x2568	; 0x2568 <__mulsf3>
    1878:	c8 52       	subi	r28, 0x28	; 40
    187a:	df 4f       	sbci	r29, 0xFF	; 255
    187c:	68 83       	st	Y, r22
    187e:	79 83       	std	Y+1, r23	; 0x01
    1880:	8a 83       	std	Y+2, r24	; 0x02
    1882:	9b 83       	std	Y+3, r25	; 0x03
    1884:	c8 5d       	subi	r28, 0xD8	; 216
    1886:	d0 40       	sbci	r29, 0x00	; 0
    1888:	c8 52       	subi	r28, 0x28	; 40
    188a:	df 4f       	sbci	r29, 0xFF	; 255
    188c:	88 81       	ld	r24, Y
    188e:	99 81       	ldd	r25, Y+1	; 0x01
    1890:	aa 81       	ldd	r26, Y+2	; 0x02
    1892:	bb 81       	ldd	r27, Y+3	; 0x03
    1894:	c8 5d       	subi	r28, 0xD8	; 216
    1896:	d0 40       	sbci	r29, 0x00	; 0
    1898:	e8 96       	adiw	r28, 0x38	; 56
    189a:	8c af       	std	Y+60, r24	; 0x3c
    189c:	9d af       	std	Y+61, r25	; 0x3d
    189e:	ae af       	std	Y+62, r26	; 0x3e
    18a0:	bf af       	std	Y+63, r27	; 0x3f
    18a2:	e8 97       	sbiw	r28, 0x38	; 56
    18a4:	e8 96       	adiw	r28, 0x38	; 56
    18a6:	6c ad       	ldd	r22, Y+60	; 0x3c
    18a8:	7d ad       	ldd	r23, Y+61	; 0x3d
    18aa:	8e ad       	ldd	r24, Y+62	; 0x3e
    18ac:	9f ad       	ldd	r25, Y+63	; 0x3f
    18ae:	e8 97       	sbiw	r28, 0x38	; 56
    18b0:	0e 94 0b 12 	call	0x2416	; 0x2416 <__fixunssfsi>
    18b4:	c4 52       	subi	r28, 0x24	; 36
    18b6:	df 4f       	sbci	r29, 0xFF	; 255
    18b8:	68 83       	st	Y, r22
    18ba:	79 83       	std	Y+1, r23	; 0x01
    18bc:	8a 83       	std	Y+2, r24	; 0x02
    18be:	9b 83       	std	Y+3, r25	; 0x03
    18c0:	cc 5d       	subi	r28, 0xDC	; 220
    18c2:	d0 40       	sbci	r29, 0x00	; 0
    18c4:	c4 52       	subi	r28, 0x24	; 36
    18c6:	df 4f       	sbci	r29, 0xFF	; 255
    18c8:	a8 81       	ld	r26, Y
    18ca:	b9 81       	ldd	r27, Y+1	; 0x01
    18cc:	cc 5d       	subi	r28, 0xDC	; 220
    18ce:	d0 40       	sbci	r29, 0x00	; 0
    18d0:	bd a3       	std	Y+37, r27	; 0x25
    18d2:	ac a3       	std	Y+36, r26	; 0x24
		while(__ticks)
    18d4:	10 c0       	rjmp	.+32     	; 0x18f6 <LCD_Char+0xaf0>
    18d6:	80 e9       	ldi	r24, 0x90	; 144
    18d8:	91 e0       	ldi	r25, 0x01	; 1
    18da:	9f a3       	std	Y+39, r25	; 0x27
    18dc:	8e a3       	std	Y+38, r24	; 0x26
	__asm__ volatile (
    18de:	8e a1       	ldd	r24, Y+38	; 0x26
    18e0:	9f a1       	ldd	r25, Y+39	; 0x27
    18e2:	01 97       	sbiw	r24, 0x01	; 1
    18e4:	f1 f7       	brne	.-4      	; 0x18e2 <LCD_Char+0xadc>
    18e6:	9f a3       	std	Y+39, r25	; 0x27
    18e8:	8e a3       	std	Y+38, r24	; 0x26
}
    18ea:	00 00       	nop
			__ticks --;
    18ec:	8c a1       	ldd	r24, Y+36	; 0x24
    18ee:	9d a1       	ldd	r25, Y+37	; 0x25
    18f0:	01 97       	sbiw	r24, 0x01	; 1
    18f2:	9d a3       	std	Y+37, r25	; 0x25
    18f4:	8c a3       	std	Y+36, r24	; 0x24
		while(__ticks)
    18f6:	8c a1       	ldd	r24, Y+36	; 0x24
    18f8:	9d a1       	ldd	r25, Y+37	; 0x25
    18fa:	89 2b       	or	r24, r25
    18fc:	61 f7       	brne	.-40     	; 0x18d6 <LCD_Char+0xad0>
		return;
    18fe:	63 c0       	rjmp	.+198    	; 0x19c6 <LCD_Char+0xbc0>
		__ticks = (uint16_t)__tmp;
    1900:	68 a1       	ldd	r22, Y+32	; 0x20
    1902:	79 a1       	ldd	r23, Y+33	; 0x21
    1904:	8a a1       	ldd	r24, Y+34	; 0x22
    1906:	9b a1       	ldd	r25, Y+35	; 0x23
    1908:	0e 94 0b 12 	call	0x2416	; 0x2416 <__fixunssfsi>
    190c:	c0 52       	subi	r28, 0x20	; 32
    190e:	df 4f       	sbci	r29, 0xFF	; 255
    1910:	68 83       	st	Y, r22
    1912:	79 83       	std	Y+1, r23	; 0x01
    1914:	8a 83       	std	Y+2, r24	; 0x02
    1916:	9b 83       	std	Y+3, r25	; 0x03
    1918:	c0 5e       	subi	r28, 0xE0	; 224
    191a:	d0 40       	sbci	r29, 0x00	; 0
    191c:	c0 52       	subi	r28, 0x20	; 32
    191e:	df 4f       	sbci	r29, 0xFF	; 255
    1920:	e8 81       	ld	r30, Y
    1922:	f9 81       	ldd	r31, Y+1	; 0x01
    1924:	c0 5e       	subi	r28, 0xE0	; 224
    1926:	d0 40       	sbci	r29, 0x00	; 0
    1928:	fd a3       	std	Y+37, r31	; 0x25
    192a:	ec a3       	std	Y+36, r30	; 0x24
    192c:	8c a1       	ldd	r24, Y+36	; 0x24
    192e:	9d a1       	ldd	r25, Y+37	; 0x25
    1930:	99 a7       	std	Y+41, r25	; 0x29
    1932:	88 a7       	std	Y+40, r24	; 0x28
	__asm__ volatile (
    1934:	88 a5       	ldd	r24, Y+40	; 0x28
    1936:	99 a5       	ldd	r25, Y+41	; 0x29
    1938:	01 97       	sbiw	r24, 0x01	; 1
    193a:	f1 f7       	brne	.-4      	; 0x1938 <LCD_Char+0xb32>
    193c:	99 a7       	std	Y+41, r25	; 0x29
    193e:	88 a7       	std	Y+40, r24	; 0x28
}
    1940:	42 c0       	rjmp	.+132    	; 0x19c6 <LCD_Char+0xbc0>
	else if (__tmp > 255)
    1942:	20 e0       	ldi	r18, 0x00	; 0
    1944:	30 e0       	ldi	r19, 0x00	; 0
    1946:	4f e7       	ldi	r20, 0x7F	; 127
    1948:	53 e4       	ldi	r21, 0x43	; 67
    194a:	6b 89       	ldd	r22, Y+19	; 0x13
    194c:	7c 89       	ldd	r23, Y+20	; 0x14
    194e:	8d 89       	ldd	r24, Y+21	; 0x15
    1950:	9e 89       	ldd	r25, Y+22	; 0x16
    1952:	0e 94 af 12 	call	0x255e	; 0x255e <__gesf2>
    1956:	18 16       	cp	r1, r24
    1958:	14 f5       	brge	.+68     	; 0x199e <LCD_Char+0xb98>
		uint16_t __ticks=(uint16_t)__tmp2;
    195a:	6f 89       	ldd	r22, Y+23	; 0x17
    195c:	78 8d       	ldd	r23, Y+24	; 0x18
    195e:	89 8d       	ldd	r24, Y+25	; 0x19
    1960:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1962:	0e 94 0b 12 	call	0x2416	; 0x2416 <__fixunssfsi>
    1966:	cc 51       	subi	r28, 0x1C	; 28
    1968:	df 4f       	sbci	r29, 0xFF	; 255
    196a:	68 83       	st	Y, r22
    196c:	79 83       	std	Y+1, r23	; 0x01
    196e:	8a 83       	std	Y+2, r24	; 0x02
    1970:	9b 83       	std	Y+3, r25	; 0x03
    1972:	c4 5e       	subi	r28, 0xE4	; 228
    1974:	d0 40       	sbci	r29, 0x00	; 0
    1976:	cc 51       	subi	r28, 0x1C	; 28
    1978:	df 4f       	sbci	r29, 0xFF	; 255
    197a:	88 81       	ld	r24, Y
    197c:	99 81       	ldd	r25, Y+1	; 0x01
    197e:	c4 5e       	subi	r28, 0xE4	; 228
    1980:	d0 40       	sbci	r29, 0x00	; 0
    1982:	9b a7       	std	Y+43, r25	; 0x2b
    1984:	8a a7       	std	Y+42, r24	; 0x2a
    1986:	8a a5       	ldd	r24, Y+42	; 0x2a
    1988:	9b a5       	ldd	r25, Y+43	; 0x2b
    198a:	9d a7       	std	Y+45, r25	; 0x2d
    198c:	8c a7       	std	Y+44, r24	; 0x2c
	__asm__ volatile (
    198e:	8c a5       	ldd	r24, Y+44	; 0x2c
    1990:	9d a5       	ldd	r25, Y+45	; 0x2d
    1992:	01 97       	sbiw	r24, 0x01	; 1
    1994:	f1 f7       	brne	.-4      	; 0x1992 <LCD_Char+0xb8c>
    1996:	9d a7       	std	Y+45, r25	; 0x2d
    1998:	8c a7       	std	Y+44, r24	; 0x2c
}
    199a:	00 00       	nop
		return;
    199c:	1b c0       	rjmp	.+54     	; 0x19d4 <LCD_Char+0xbce>
		__ticks = (uint8_t)__tmp;
    199e:	6b 89       	ldd	r22, Y+19	; 0x13
    19a0:	7c 89       	ldd	r23, Y+20	; 0x14
    19a2:	8d 89       	ldd	r24, Y+21	; 0x15
    19a4:	9e 89       	ldd	r25, Y+22	; 0x16
    19a6:	0e 94 0b 12 	call	0x2416	; 0x2416 <__fixunssfsi>
    19aa:	c8 51       	subi	r28, 0x18	; 24
    19ac:	df 4f       	sbci	r29, 0xFF	; 255
    19ae:	68 83       	st	Y, r22
    19b0:	79 83       	std	Y+1, r23	; 0x01
    19b2:	8a 83       	std	Y+2, r24	; 0x02
    19b4:	9b 83       	std	Y+3, r25	; 0x03
    19b6:	c8 5e       	subi	r28, 0xE8	; 232
    19b8:	d0 40       	sbci	r29, 0x00	; 0
    19ba:	c8 51       	subi	r28, 0x18	; 24
    19bc:	df 4f       	sbci	r29, 0xFF	; 255
    19be:	98 81       	ld	r25, Y
    19c0:	c8 5e       	subi	r28, 0xE8	; 232
    19c2:	d0 40       	sbci	r29, 0x00	; 0
    19c4:	9b 8f       	std	Y+27, r25	; 0x1b
    19c6:	8b 8d       	ldd	r24, Y+27	; 0x1b
    19c8:	8e a7       	std	Y+46, r24	; 0x2e
	__asm__ volatile (
    19ca:	8e a5       	ldd	r24, Y+46	; 0x2e
    19cc:	8a 95       	dec	r24
    19ce:	f1 f7       	brne	.-4      	; 0x19cc <LCD_Char+0xbc6>
    19d0:	8e a7       	std	Y+46, r24	; 0x2e
}
    19d2:	00 00       	nop
	_delay_us(1);
	LCD_Port &= ~ (1<<EN);
    19d4:	85 e2       	ldi	r24, 0x25	; 37
    19d6:	90 e0       	ldi	r25, 0x00	; 0
    19d8:	dc 01       	movw	r26, r24
    19da:	2c 91       	ld	r18, X
    19dc:	85 e2       	ldi	r24, 0x25	; 37
    19de:	90 e0       	ldi	r25, 0x00	; 0
    19e0:	2d 7f       	andi	r18, 0xFD	; 253
    19e2:	fc 01       	movw	r30, r24
    19e4:	20 83       	st	Z, r18
    19e6:	80 e0       	ldi	r24, 0x00	; 0
    19e8:	90 e0       	ldi	r25, 0x00	; 0
    19ea:	a0 e0       	ldi	r26, 0x00	; 0
    19ec:	b0 e4       	ldi	r27, 0x40	; 64
    19ee:	89 83       	std	Y+1, r24	; 0x01
    19f0:	9a 83       	std	Y+2, r25	; 0x02
    19f2:	ab 83       	std	Y+3, r26	; 0x03
    19f4:	bc 83       	std	Y+4, r27	; 0x04
	__tmp = ((F_CPU) / 4e3) * __ms;
    19f6:	20 e0       	ldi	r18, 0x00	; 0
    19f8:	30 e0       	ldi	r19, 0x00	; 0
    19fa:	4a e7       	ldi	r20, 0x7A	; 122
    19fc:	55 e4       	ldi	r21, 0x45	; 69
    19fe:	69 81       	ldd	r22, Y+1	; 0x01
    1a00:	7a 81       	ldd	r23, Y+2	; 0x02
    1a02:	8b 81       	ldd	r24, Y+3	; 0x03
    1a04:	9c 81       	ldd	r25, Y+4	; 0x04
    1a06:	0e 94 b4 12 	call	0x2568	; 0x2568 <__mulsf3>
    1a0a:	c4 51       	subi	r28, 0x14	; 20
    1a0c:	df 4f       	sbci	r29, 0xFF	; 255
    1a0e:	68 83       	st	Y, r22
    1a10:	79 83       	std	Y+1, r23	; 0x01
    1a12:	8a 83       	std	Y+2, r24	; 0x02
    1a14:	9b 83       	std	Y+3, r25	; 0x03
    1a16:	cc 5e       	subi	r28, 0xEC	; 236
    1a18:	d0 40       	sbci	r29, 0x00	; 0
    1a1a:	c4 51       	subi	r28, 0x14	; 20
    1a1c:	df 4f       	sbci	r29, 0xFF	; 255
    1a1e:	88 81       	ld	r24, Y
    1a20:	99 81       	ldd	r25, Y+1	; 0x01
    1a22:	aa 81       	ldd	r26, Y+2	; 0x02
    1a24:	bb 81       	ldd	r27, Y+3	; 0x03
    1a26:	cc 5e       	subi	r28, 0xEC	; 236
    1a28:	d0 40       	sbci	r29, 0x00	; 0
    1a2a:	8d 83       	std	Y+5, r24	; 0x05
    1a2c:	9e 83       	std	Y+6, r25	; 0x06
    1a2e:	af 83       	std	Y+7, r26	; 0x07
    1a30:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
    1a32:	20 e0       	ldi	r18, 0x00	; 0
    1a34:	30 e0       	ldi	r19, 0x00	; 0
    1a36:	40 e8       	ldi	r20, 0x80	; 128
    1a38:	5f e3       	ldi	r21, 0x3F	; 63
    1a3a:	6d 81       	ldd	r22, Y+5	; 0x05
    1a3c:	7e 81       	ldd	r23, Y+6	; 0x06
    1a3e:	8f 81       	ldd	r24, Y+7	; 0x07
    1a40:	98 85       	ldd	r25, Y+8	; 0x08
    1a42:	0e 94 94 11 	call	0x2328	; 0x2328 <__cmpsf2>
    1a46:	88 23       	and	r24, r24
    1a48:	2c f4       	brge	.+10     	; 0x1a54 <LCD_Char+0xc4e>
		__ticks = 1;
    1a4a:	81 e0       	ldi	r24, 0x01	; 1
    1a4c:	90 e0       	ldi	r25, 0x00	; 0
    1a4e:	9a 87       	std	Y+10, r25	; 0x0a
    1a50:	89 87       	std	Y+9, r24	; 0x09
    1a52:	71 c0       	rjmp	.+226    	; 0x1b36 <LCD_Char+0xd30>
	else if (__tmp > 65535)
    1a54:	20 e0       	ldi	r18, 0x00	; 0
    1a56:	3f ef       	ldi	r19, 0xFF	; 255
    1a58:	4f e7       	ldi	r20, 0x7F	; 127
    1a5a:	57 e4       	ldi	r21, 0x47	; 71
    1a5c:	6d 81       	ldd	r22, Y+5	; 0x05
    1a5e:	7e 81       	ldd	r23, Y+6	; 0x06
    1a60:	8f 81       	ldd	r24, Y+7	; 0x07
    1a62:	98 85       	ldd	r25, Y+8	; 0x08
    1a64:	0e 94 af 12 	call	0x255e	; 0x255e <__gesf2>
    1a68:	18 16       	cp	r1, r24
    1a6a:	0c f0       	brlt	.+2      	; 0x1a6e <LCD_Char+0xc68>
    1a6c:	4e c0       	rjmp	.+156    	; 0x1b0a <LCD_Char+0xd04>
		__ticks = (uint16_t) (__ms * 10.0);
    1a6e:	20 e0       	ldi	r18, 0x00	; 0
    1a70:	30 e0       	ldi	r19, 0x00	; 0
    1a72:	40 e2       	ldi	r20, 0x20	; 32
    1a74:	51 e4       	ldi	r21, 0x41	; 65
    1a76:	69 81       	ldd	r22, Y+1	; 0x01
    1a78:	7a 81       	ldd	r23, Y+2	; 0x02
    1a7a:	8b 81       	ldd	r24, Y+3	; 0x03
    1a7c:	9c 81       	ldd	r25, Y+4	; 0x04
    1a7e:	0e 94 b4 12 	call	0x2568	; 0x2568 <__mulsf3>
    1a82:	c0 51       	subi	r28, 0x10	; 16
    1a84:	df 4f       	sbci	r29, 0xFF	; 255
    1a86:	68 83       	st	Y, r22
    1a88:	79 83       	std	Y+1, r23	; 0x01
    1a8a:	8a 83       	std	Y+2, r24	; 0x02
    1a8c:	9b 83       	std	Y+3, r25	; 0x03
    1a8e:	c0 5f       	subi	r28, 0xF0	; 240
    1a90:	d0 40       	sbci	r29, 0x00	; 0
    1a92:	c0 51       	subi	r28, 0x10	; 16
    1a94:	df 4f       	sbci	r29, 0xFF	; 255
    1a96:	88 81       	ld	r24, Y
    1a98:	99 81       	ldd	r25, Y+1	; 0x01
    1a9a:	aa 81       	ldd	r26, Y+2	; 0x02
    1a9c:	bb 81       	ldd	r27, Y+3	; 0x03
    1a9e:	c0 5f       	subi	r28, 0xF0	; 240
    1aa0:	d0 40       	sbci	r29, 0x00	; 0
    1aa2:	e4 96       	adiw	r28, 0x34	; 52
    1aa4:	8c af       	std	Y+60, r24	; 0x3c
    1aa6:	9d af       	std	Y+61, r25	; 0x3d
    1aa8:	ae af       	std	Y+62, r26	; 0x3e
    1aaa:	bf af       	std	Y+63, r27	; 0x3f
    1aac:	e4 97       	sbiw	r28, 0x34	; 52
    1aae:	e4 96       	adiw	r28, 0x34	; 52
    1ab0:	6c ad       	ldd	r22, Y+60	; 0x3c
    1ab2:	7d ad       	ldd	r23, Y+61	; 0x3d
    1ab4:	8e ad       	ldd	r24, Y+62	; 0x3e
    1ab6:	9f ad       	ldd	r25, Y+63	; 0x3f
    1ab8:	e4 97       	sbiw	r28, 0x34	; 52
    1aba:	0e 94 0b 12 	call	0x2416	; 0x2416 <__fixunssfsi>
    1abe:	cc 50       	subi	r28, 0x0C	; 12
    1ac0:	df 4f       	sbci	r29, 0xFF	; 255
    1ac2:	68 83       	st	Y, r22
    1ac4:	79 83       	std	Y+1, r23	; 0x01
    1ac6:	8a 83       	std	Y+2, r24	; 0x02
    1ac8:	9b 83       	std	Y+3, r25	; 0x03
    1aca:	c4 5f       	subi	r28, 0xF4	; 244
    1acc:	d0 40       	sbci	r29, 0x00	; 0
    1ace:	cc 50       	subi	r28, 0x0C	; 12
    1ad0:	df 4f       	sbci	r29, 0xFF	; 255
    1ad2:	a8 81       	ld	r26, Y
    1ad4:	b9 81       	ldd	r27, Y+1	; 0x01
    1ad6:	c4 5f       	subi	r28, 0xF4	; 244
    1ad8:	d0 40       	sbci	r29, 0x00	; 0
    1ada:	ba 87       	std	Y+10, r27	; 0x0a
    1adc:	a9 87       	std	Y+9, r26	; 0x09
		while(__ticks)
    1ade:	10 c0       	rjmp	.+32     	; 0x1b00 <LCD_Char+0xcfa>
    1ae0:	80 e9       	ldi	r24, 0x90	; 144
    1ae2:	91 e0       	ldi	r25, 0x01	; 1
    1ae4:	9c 87       	std	Y+12, r25	; 0x0c
    1ae6:	8b 87       	std	Y+11, r24	; 0x0b
	__asm__ volatile (
    1ae8:	8b 85       	ldd	r24, Y+11	; 0x0b
    1aea:	9c 85       	ldd	r25, Y+12	; 0x0c
    1aec:	01 97       	sbiw	r24, 0x01	; 1
    1aee:	f1 f7       	brne	.-4      	; 0x1aec <LCD_Char+0xce6>
    1af0:	9c 87       	std	Y+12, r25	; 0x0c
    1af2:	8b 87       	std	Y+11, r24	; 0x0b
}
    1af4:	00 00       	nop
			__ticks --;
    1af6:	89 85       	ldd	r24, Y+9	; 0x09
    1af8:	9a 85       	ldd	r25, Y+10	; 0x0a
    1afa:	01 97       	sbiw	r24, 0x01	; 1
    1afc:	9a 87       	std	Y+10, r25	; 0x0a
    1afe:	89 87       	std	Y+9, r24	; 0x09
		while(__ticks)
    1b00:	89 85       	ldd	r24, Y+9	; 0x09
    1b02:	9a 85       	ldd	r25, Y+10	; 0x0a
    1b04:	89 2b       	or	r24, r25
    1b06:	61 f7       	brne	.-40     	; 0x1ae0 <LCD_Char+0xcda>
		return;
    1b08:	21 c0       	rjmp	.+66     	; 0x1b4c <LCD_Char+0xd46>
		__ticks = (uint16_t)__tmp;
    1b0a:	6d 81       	ldd	r22, Y+5	; 0x05
    1b0c:	7e 81       	ldd	r23, Y+6	; 0x06
    1b0e:	8f 81       	ldd	r24, Y+7	; 0x07
    1b10:	98 85       	ldd	r25, Y+8	; 0x08
    1b12:	0e 94 0b 12 	call	0x2416	; 0x2416 <__fixunssfsi>
    1b16:	c8 50       	subi	r28, 0x08	; 8
    1b18:	df 4f       	sbci	r29, 0xFF	; 255
    1b1a:	68 83       	st	Y, r22
    1b1c:	79 83       	std	Y+1, r23	; 0x01
    1b1e:	8a 83       	std	Y+2, r24	; 0x02
    1b20:	9b 83       	std	Y+3, r25	; 0x03
    1b22:	c8 5f       	subi	r28, 0xF8	; 248
    1b24:	d0 40       	sbci	r29, 0x00	; 0
    1b26:	c8 50       	subi	r28, 0x08	; 8
    1b28:	df 4f       	sbci	r29, 0xFF	; 255
    1b2a:	e8 81       	ld	r30, Y
    1b2c:	f9 81       	ldd	r31, Y+1	; 0x01
    1b2e:	c8 5f       	subi	r28, 0xF8	; 248
    1b30:	d0 40       	sbci	r29, 0x00	; 0
    1b32:	fa 87       	std	Y+10, r31	; 0x0a
    1b34:	e9 87       	std	Y+9, r30	; 0x09
    1b36:	89 85       	ldd	r24, Y+9	; 0x09
    1b38:	9a 85       	ldd	r25, Y+10	; 0x0a
    1b3a:	9e 87       	std	Y+14, r25	; 0x0e
    1b3c:	8d 87       	std	Y+13, r24	; 0x0d
	__asm__ volatile (
    1b3e:	8d 85       	ldd	r24, Y+13	; 0x0d
    1b40:	9e 85       	ldd	r25, Y+14	; 0x0e
    1b42:	01 97       	sbiw	r24, 0x01	; 1
    1b44:	f1 f7       	brne	.-4      	; 0x1b42 <LCD_Char+0xd3c>
    1b46:	9e 87       	std	Y+14, r25	; 0x0e
    1b48:	8d 87       	std	Y+13, r24	; 0x0d
}
    1b4a:	00 00       	nop
	_delay_ms(2);
}
    1b4c:	00 00       	nop
    1b4e:	c5 50       	subi	r28, 0x05	; 5
    1b50:	df 4f       	sbci	r29, 0xFF	; 255
    1b52:	0f b6       	in	r0, 0x3f	; 63
    1b54:	f8 94       	cli
    1b56:	de bf       	out	0x3e, r29	; 62
    1b58:	0f be       	out	0x3f, r0	; 63
    1b5a:	cd bf       	out	0x3d, r28	; 61
    1b5c:	df 91       	pop	r29
    1b5e:	cf 91       	pop	r28
    1b60:	1f 91       	pop	r17
    1b62:	0f 91       	pop	r16
    1b64:	08 95       	ret

00001b66 <LCD_Init>:

void LCD_Init (void)			/* LCD Initialize function */
{
    1b66:	cf 93       	push	r28
    1b68:	df 93       	push	r29
    1b6a:	cd b7       	in	r28, 0x3d	; 61
    1b6c:	de b7       	in	r29, 0x3e	; 62
    1b6e:	c4 54       	subi	r28, 0x44	; 68
    1b70:	d1 09       	sbc	r29, r1
    1b72:	0f b6       	in	r0, 0x3f	; 63
    1b74:	f8 94       	cli
    1b76:	de bf       	out	0x3e, r29	; 62
    1b78:	0f be       	out	0x3f, r0	; 63
    1b7a:	cd bf       	out	0x3d, r28	; 61
	LCD_Dir = 0xFF;			/* Make LCD port direction as o/p */
    1b7c:	84 e2       	ldi	r24, 0x24	; 36
    1b7e:	90 e0       	ldi	r25, 0x00	; 0
    1b80:	2f ef       	ldi	r18, 0xFF	; 255
    1b82:	dc 01       	movw	r26, r24
    1b84:	2c 93       	st	X, r18
    1b86:	80 e0       	ldi	r24, 0x00	; 0
    1b88:	90 e0       	ldi	r25, 0x00	; 0
    1b8a:	a0 ea       	ldi	r26, 0xA0	; 160
    1b8c:	b1 e4       	ldi	r27, 0x41	; 65
    1b8e:	8f 87       	std	Y+15, r24	; 0x0f
    1b90:	98 8b       	std	Y+16, r25	; 0x10
    1b92:	a9 8b       	std	Y+17, r26	; 0x11
    1b94:	ba 8b       	std	Y+18, r27	; 0x12
	__tmp = ((F_CPU) / 4e3) * __ms;
    1b96:	20 e0       	ldi	r18, 0x00	; 0
    1b98:	30 e0       	ldi	r19, 0x00	; 0
    1b9a:	4a e7       	ldi	r20, 0x7A	; 122
    1b9c:	55 e4       	ldi	r21, 0x45	; 69
    1b9e:	6f 85       	ldd	r22, Y+15	; 0x0f
    1ba0:	78 89       	ldd	r23, Y+16	; 0x10
    1ba2:	89 89       	ldd	r24, Y+17	; 0x11
    1ba4:	9a 89       	ldd	r25, Y+18	; 0x12
    1ba6:	0e 94 b4 12 	call	0x2568	; 0x2568 <__mulsf3>
    1baa:	6d a3       	std	Y+37, r22	; 0x25
    1bac:	7e a3       	std	Y+38, r23	; 0x26
    1bae:	8f a3       	std	Y+39, r24	; 0x27
    1bb0:	98 a7       	std	Y+40, r25	; 0x28
    1bb2:	8d a1       	ldd	r24, Y+37	; 0x25
    1bb4:	9e a1       	ldd	r25, Y+38	; 0x26
    1bb6:	af a1       	ldd	r26, Y+39	; 0x27
    1bb8:	b8 a5       	ldd	r27, Y+40	; 0x28
    1bba:	8b 8b       	std	Y+19, r24	; 0x13
    1bbc:	9c 8b       	std	Y+20, r25	; 0x14
    1bbe:	ad 8b       	std	Y+21, r26	; 0x15
    1bc0:	be 8b       	std	Y+22, r27	; 0x16
	if (__tmp < 1.0)
    1bc2:	20 e0       	ldi	r18, 0x00	; 0
    1bc4:	30 e0       	ldi	r19, 0x00	; 0
    1bc6:	40 e8       	ldi	r20, 0x80	; 128
    1bc8:	5f e3       	ldi	r21, 0x3F	; 63
    1bca:	6b 89       	ldd	r22, Y+19	; 0x13
    1bcc:	7c 89       	ldd	r23, Y+20	; 0x14
    1bce:	8d 89       	ldd	r24, Y+21	; 0x15
    1bd0:	9e 89       	ldd	r25, Y+22	; 0x16
    1bd2:	0e 94 94 11 	call	0x2328	; 0x2328 <__cmpsf2>
    1bd6:	88 23       	and	r24, r24
    1bd8:	2c f4       	brge	.+10     	; 0x1be4 <LCD_Init+0x7e>
		__ticks = 1;
    1bda:	81 e0       	ldi	r24, 0x01	; 1
    1bdc:	90 e0       	ldi	r25, 0x00	; 0
    1bde:	98 8f       	std	Y+24, r25	; 0x18
    1be0:	8f 8b       	std	Y+23, r24	; 0x17
    1be2:	54 c0       	rjmp	.+168    	; 0x1c8c <LCD_Init+0x126>
	else if (__tmp > 65535)
    1be4:	20 e0       	ldi	r18, 0x00	; 0
    1be6:	3f ef       	ldi	r19, 0xFF	; 255
    1be8:	4f e7       	ldi	r20, 0x7F	; 127
    1bea:	57 e4       	ldi	r21, 0x47	; 71
    1bec:	6b 89       	ldd	r22, Y+19	; 0x13
    1bee:	7c 89       	ldd	r23, Y+20	; 0x14
    1bf0:	8d 89       	ldd	r24, Y+21	; 0x15
    1bf2:	9e 89       	ldd	r25, Y+22	; 0x16
    1bf4:	0e 94 af 12 	call	0x255e	; 0x255e <__gesf2>
    1bf8:	18 16       	cp	r1, r24
    1bfa:	d4 f5       	brge	.+116    	; 0x1c70 <LCD_Init+0x10a>
		__ticks = (uint16_t) (__ms * 10.0);
    1bfc:	20 e0       	ldi	r18, 0x00	; 0
    1bfe:	30 e0       	ldi	r19, 0x00	; 0
    1c00:	40 e2       	ldi	r20, 0x20	; 32
    1c02:	51 e4       	ldi	r21, 0x41	; 65
    1c04:	6f 85       	ldd	r22, Y+15	; 0x0f
    1c06:	78 89       	ldd	r23, Y+16	; 0x10
    1c08:	89 89       	ldd	r24, Y+17	; 0x11
    1c0a:	9a 89       	ldd	r25, Y+18	; 0x12
    1c0c:	0e 94 b4 12 	call	0x2568	; 0x2568 <__mulsf3>
    1c10:	69 a7       	std	Y+41, r22	; 0x29
    1c12:	7a a7       	std	Y+42, r23	; 0x2a
    1c14:	8b a7       	std	Y+43, r24	; 0x2b
    1c16:	9c a7       	std	Y+44, r25	; 0x2c
    1c18:	89 a5       	ldd	r24, Y+41	; 0x29
    1c1a:	9a a5       	ldd	r25, Y+42	; 0x2a
    1c1c:	ab a5       	ldd	r26, Y+43	; 0x2b
    1c1e:	bc a5       	ldd	r27, Y+44	; 0x2c
    1c20:	89 a3       	std	Y+33, r24	; 0x21
    1c22:	9a a3       	std	Y+34, r25	; 0x22
    1c24:	ab a3       	std	Y+35, r26	; 0x23
    1c26:	bc a3       	std	Y+36, r27	; 0x24
    1c28:	69 a1       	ldd	r22, Y+33	; 0x21
    1c2a:	7a a1       	ldd	r23, Y+34	; 0x22
    1c2c:	8b a1       	ldd	r24, Y+35	; 0x23
    1c2e:	9c a1       	ldd	r25, Y+36	; 0x24
    1c30:	0e 94 0b 12 	call	0x2416	; 0x2416 <__fixunssfsi>
    1c34:	6d a7       	std	Y+45, r22	; 0x2d
    1c36:	7e a7       	std	Y+46, r23	; 0x2e
    1c38:	8f a7       	std	Y+47, r24	; 0x2f
    1c3a:	98 ab       	std	Y+48, r25	; 0x30
    1c3c:	ad a5       	ldd	r26, Y+45	; 0x2d
    1c3e:	be a5       	ldd	r27, Y+46	; 0x2e
    1c40:	b8 8f       	std	Y+24, r27	; 0x18
    1c42:	af 8b       	std	Y+23, r26	; 0x17
		while(__ticks)
    1c44:	10 c0       	rjmp	.+32     	; 0x1c66 <LCD_Init+0x100>
    1c46:	80 e9       	ldi	r24, 0x90	; 144
    1c48:	91 e0       	ldi	r25, 0x01	; 1
    1c4a:	9a 8f       	std	Y+26, r25	; 0x1a
    1c4c:	89 8f       	std	Y+25, r24	; 0x19
	__asm__ volatile (
    1c4e:	89 8d       	ldd	r24, Y+25	; 0x19
    1c50:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1c52:	01 97       	sbiw	r24, 0x01	; 1
    1c54:	f1 f7       	brne	.-4      	; 0x1c52 <LCD_Init+0xec>
    1c56:	9a 8f       	std	Y+26, r25	; 0x1a
    1c58:	89 8f       	std	Y+25, r24	; 0x19
}
    1c5a:	00 00       	nop
			__ticks --;
    1c5c:	8f 89       	ldd	r24, Y+23	; 0x17
    1c5e:	98 8d       	ldd	r25, Y+24	; 0x18
    1c60:	01 97       	sbiw	r24, 0x01	; 1
    1c62:	98 8f       	std	Y+24, r25	; 0x18
    1c64:	8f 8b       	std	Y+23, r24	; 0x17
		while(__ticks)
    1c66:	8f 89       	ldd	r24, Y+23	; 0x17
    1c68:	98 8d       	ldd	r25, Y+24	; 0x18
    1c6a:	89 2b       	or	r24, r25
    1c6c:	61 f7       	brne	.-40     	; 0x1c46 <LCD_Init+0xe0>
		return;
    1c6e:	19 c0       	rjmp	.+50     	; 0x1ca2 <LCD_Init+0x13c>
		__ticks = (uint16_t)__tmp;
    1c70:	6b 89       	ldd	r22, Y+19	; 0x13
    1c72:	7c 89       	ldd	r23, Y+20	; 0x14
    1c74:	8d 89       	ldd	r24, Y+21	; 0x15
    1c76:	9e 89       	ldd	r25, Y+22	; 0x16
    1c78:	0e 94 0b 12 	call	0x2416	; 0x2416 <__fixunssfsi>
    1c7c:	69 ab       	std	Y+49, r22	; 0x31
    1c7e:	7a ab       	std	Y+50, r23	; 0x32
    1c80:	8b ab       	std	Y+51, r24	; 0x33
    1c82:	9c ab       	std	Y+52, r25	; 0x34
    1c84:	e9 a9       	ldd	r30, Y+49	; 0x31
    1c86:	fa a9       	ldd	r31, Y+50	; 0x32
    1c88:	f8 8f       	std	Y+24, r31	; 0x18
    1c8a:	ef 8b       	std	Y+23, r30	; 0x17
    1c8c:	8f 89       	ldd	r24, Y+23	; 0x17
    1c8e:	98 8d       	ldd	r25, Y+24	; 0x18
    1c90:	9c 8f       	std	Y+28, r25	; 0x1c
    1c92:	8b 8f       	std	Y+27, r24	; 0x1b
	__asm__ volatile (
    1c94:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1c96:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1c98:	01 97       	sbiw	r24, 0x01	; 1
    1c9a:	f1 f7       	brne	.-4      	; 0x1c98 <LCD_Init+0x132>
    1c9c:	9c 8f       	std	Y+28, r25	; 0x1c
    1c9e:	8b 8f       	std	Y+27, r24	; 0x1b
}
    1ca0:	00 00       	nop
	_delay_ms(20);			/* LCD Power ON delay always >15ms */

	LCD_Command(0x02);		/* send for 4 bit initialization of LCD  */
    1ca2:	82 e0       	ldi	r24, 0x02	; 2
    1ca4:	0e 94 53 00 	call	0xa6	; 0xa6 <LCD_Command>
	LCD_Command(0x20);              /* 2 line, 5*7 matrix in 4-bit mode */
    1ca8:	80 e2       	ldi	r24, 0x20	; 32
    1caa:	0e 94 53 00 	call	0xa6	; 0xa6 <LCD_Command>
	LCD_Command(0x0C);              /* Display on cursor off*/
    1cae:	8c e0       	ldi	r24, 0x0C	; 12
    1cb0:	0e 94 53 00 	call	0xa6	; 0xa6 <LCD_Command>
	LCD_Command(0x06);              /* Increment cursor (shift cursor to right)*/
    1cb4:	86 e0       	ldi	r24, 0x06	; 6
    1cb6:	0e 94 53 00 	call	0xa6	; 0xa6 <LCD_Command>
	LCD_Command(0x01);              /* Clear display screen*/
    1cba:	81 e0       	ldi	r24, 0x01	; 1
    1cbc:	0e 94 53 00 	call	0xa6	; 0xa6 <LCD_Command>
    1cc0:	80 e0       	ldi	r24, 0x00	; 0
    1cc2:	90 e0       	ldi	r25, 0x00	; 0
    1cc4:	a8 e4       	ldi	r26, 0x48	; 72
    1cc6:	b3 e4       	ldi	r27, 0x43	; 67
    1cc8:	89 83       	std	Y+1, r24	; 0x01
    1cca:	9a 83       	std	Y+2, r25	; 0x02
    1ccc:	ab 83       	std	Y+3, r26	; 0x03
    1cce:	bc 83       	std	Y+4, r27	; 0x04
	__tmp = ((F_CPU) / 4e3) * __ms;
    1cd0:	20 e0       	ldi	r18, 0x00	; 0
    1cd2:	30 e0       	ldi	r19, 0x00	; 0
    1cd4:	4a e7       	ldi	r20, 0x7A	; 122
    1cd6:	55 e4       	ldi	r21, 0x45	; 69
    1cd8:	69 81       	ldd	r22, Y+1	; 0x01
    1cda:	7a 81       	ldd	r23, Y+2	; 0x02
    1cdc:	8b 81       	ldd	r24, Y+3	; 0x03
    1cde:	9c 81       	ldd	r25, Y+4	; 0x04
    1ce0:	0e 94 b4 12 	call	0x2568	; 0x2568 <__mulsf3>
    1ce4:	6d ab       	std	Y+53, r22	; 0x35
    1ce6:	7e ab       	std	Y+54, r23	; 0x36
    1ce8:	8f ab       	std	Y+55, r24	; 0x37
    1cea:	98 af       	std	Y+56, r25	; 0x38
    1cec:	8d a9       	ldd	r24, Y+53	; 0x35
    1cee:	9e a9       	ldd	r25, Y+54	; 0x36
    1cf0:	af a9       	ldd	r26, Y+55	; 0x37
    1cf2:	b8 ad       	ldd	r27, Y+56	; 0x38
    1cf4:	8d 83       	std	Y+5, r24	; 0x05
    1cf6:	9e 83       	std	Y+6, r25	; 0x06
    1cf8:	af 83       	std	Y+7, r26	; 0x07
    1cfa:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
    1cfc:	20 e0       	ldi	r18, 0x00	; 0
    1cfe:	30 e0       	ldi	r19, 0x00	; 0
    1d00:	40 e8       	ldi	r20, 0x80	; 128
    1d02:	5f e3       	ldi	r21, 0x3F	; 63
    1d04:	6d 81       	ldd	r22, Y+5	; 0x05
    1d06:	7e 81       	ldd	r23, Y+6	; 0x06
    1d08:	8f 81       	ldd	r24, Y+7	; 0x07
    1d0a:	98 85       	ldd	r25, Y+8	; 0x08
    1d0c:	0e 94 94 11 	call	0x2328	; 0x2328 <__cmpsf2>
    1d10:	88 23       	and	r24, r24
    1d12:	2c f4       	brge	.+10     	; 0x1d1e <LCD_Init+0x1b8>
		__ticks = 1;
    1d14:	81 e0       	ldi	r24, 0x01	; 1
    1d16:	90 e0       	ldi	r25, 0x00	; 0
    1d18:	9a 87       	std	Y+10, r25	; 0x0a
    1d1a:	89 87       	std	Y+9, r24	; 0x09
    1d1c:	5b c0       	rjmp	.+182    	; 0x1dd4 <LCD_Init+0x26e>
	else if (__tmp > 65535)
    1d1e:	20 e0       	ldi	r18, 0x00	; 0
    1d20:	3f ef       	ldi	r19, 0xFF	; 255
    1d22:	4f e7       	ldi	r20, 0x7F	; 127
    1d24:	57 e4       	ldi	r21, 0x47	; 71
    1d26:	6d 81       	ldd	r22, Y+5	; 0x05
    1d28:	7e 81       	ldd	r23, Y+6	; 0x06
    1d2a:	8f 81       	ldd	r24, Y+7	; 0x07
    1d2c:	98 85       	ldd	r25, Y+8	; 0x08
    1d2e:	0e 94 af 12 	call	0x255e	; 0x255e <__gesf2>
    1d32:	18 16       	cp	r1, r24
    1d34:	0c f0       	brlt	.+2      	; 0x1d38 <LCD_Init+0x1d2>
    1d36:	3c c0       	rjmp	.+120    	; 0x1db0 <LCD_Init+0x24a>
		__ticks = (uint16_t) (__ms * 10.0);
    1d38:	20 e0       	ldi	r18, 0x00	; 0
    1d3a:	30 e0       	ldi	r19, 0x00	; 0
    1d3c:	40 e2       	ldi	r20, 0x20	; 32
    1d3e:	51 e4       	ldi	r21, 0x41	; 65
    1d40:	69 81       	ldd	r22, Y+1	; 0x01
    1d42:	7a 81       	ldd	r23, Y+2	; 0x02
    1d44:	8b 81       	ldd	r24, Y+3	; 0x03
    1d46:	9c 81       	ldd	r25, Y+4	; 0x04
    1d48:	0e 94 b4 12 	call	0x2568	; 0x2568 <__mulsf3>
    1d4c:	69 af       	std	Y+57, r22	; 0x39
    1d4e:	7a af       	std	Y+58, r23	; 0x3a
    1d50:	8b af       	std	Y+59, r24	; 0x3b
    1d52:	9c af       	std	Y+60, r25	; 0x3c
    1d54:	89 ad       	ldd	r24, Y+57	; 0x39
    1d56:	9a ad       	ldd	r25, Y+58	; 0x3a
    1d58:	ab ad       	ldd	r26, Y+59	; 0x3b
    1d5a:	bc ad       	ldd	r27, Y+60	; 0x3c
    1d5c:	8d 8f       	std	Y+29, r24	; 0x1d
    1d5e:	9e 8f       	std	Y+30, r25	; 0x1e
    1d60:	af 8f       	std	Y+31, r26	; 0x1f
    1d62:	b8 a3       	std	Y+32, r27	; 0x20
    1d64:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1d66:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1d68:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1d6a:	98 a1       	ldd	r25, Y+32	; 0x20
    1d6c:	0e 94 0b 12 	call	0x2416	; 0x2416 <__fixunssfsi>
    1d70:	21 96       	adiw	r28, 0x01	; 1
    1d72:	6c af       	std	Y+60, r22	; 0x3c
    1d74:	7d af       	std	Y+61, r23	; 0x3d
    1d76:	8e af       	std	Y+62, r24	; 0x3e
    1d78:	9f af       	std	Y+63, r25	; 0x3f
    1d7a:	21 97       	sbiw	r28, 0x01	; 1
    1d7c:	ad ad       	ldd	r26, Y+61	; 0x3d
    1d7e:	be ad       	ldd	r27, Y+62	; 0x3e
    1d80:	ba 87       	std	Y+10, r27	; 0x0a
    1d82:	a9 87       	std	Y+9, r26	; 0x09
		while(__ticks)
    1d84:	10 c0       	rjmp	.+32     	; 0x1da6 <LCD_Init+0x240>
    1d86:	80 e9       	ldi	r24, 0x90	; 144
    1d88:	91 e0       	ldi	r25, 0x01	; 1
    1d8a:	9c 87       	std	Y+12, r25	; 0x0c
    1d8c:	8b 87       	std	Y+11, r24	; 0x0b
	__asm__ volatile (
    1d8e:	8b 85       	ldd	r24, Y+11	; 0x0b
    1d90:	9c 85       	ldd	r25, Y+12	; 0x0c
    1d92:	01 97       	sbiw	r24, 0x01	; 1
    1d94:	f1 f7       	brne	.-4      	; 0x1d92 <LCD_Init+0x22c>
    1d96:	9c 87       	std	Y+12, r25	; 0x0c
    1d98:	8b 87       	std	Y+11, r24	; 0x0b
}
    1d9a:	00 00       	nop
			__ticks --;
    1d9c:	89 85       	ldd	r24, Y+9	; 0x09
    1d9e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1da0:	01 97       	sbiw	r24, 0x01	; 1
    1da2:	9a 87       	std	Y+10, r25	; 0x0a
    1da4:	89 87       	std	Y+9, r24	; 0x09
		while(__ticks)
    1da6:	89 85       	ldd	r24, Y+9	; 0x09
    1da8:	9a 85       	ldd	r25, Y+10	; 0x0a
    1daa:	89 2b       	or	r24, r25
    1dac:	61 f7       	brne	.-40     	; 0x1d86 <LCD_Init+0x220>
		return;
    1dae:	1d c0       	rjmp	.+58     	; 0x1dea <LCD_Init+0x284>
		__ticks = (uint16_t)__tmp;
    1db0:	6d 81       	ldd	r22, Y+5	; 0x05
    1db2:	7e 81       	ldd	r23, Y+6	; 0x06
    1db4:	8f 81       	ldd	r24, Y+7	; 0x07
    1db6:	98 85       	ldd	r25, Y+8	; 0x08
    1db8:	0e 94 0b 12 	call	0x2416	; 0x2416 <__fixunssfsi>
    1dbc:	25 96       	adiw	r28, 0x05	; 5
    1dbe:	6c af       	std	Y+60, r22	; 0x3c
    1dc0:	7d af       	std	Y+61, r23	; 0x3d
    1dc2:	8e af       	std	Y+62, r24	; 0x3e
    1dc4:	9f af       	std	Y+63, r25	; 0x3f
    1dc6:	25 97       	sbiw	r28, 0x05	; 5
    1dc8:	23 96       	adiw	r28, 0x03	; 3
    1dca:	ee ad       	ldd	r30, Y+62	; 0x3e
    1dcc:	ff ad       	ldd	r31, Y+63	; 0x3f
    1dce:	23 97       	sbiw	r28, 0x03	; 3
    1dd0:	fa 87       	std	Y+10, r31	; 0x0a
    1dd2:	e9 87       	std	Y+9, r30	; 0x09
    1dd4:	89 85       	ldd	r24, Y+9	; 0x09
    1dd6:	9a 85       	ldd	r25, Y+10	; 0x0a
    1dd8:	9e 87       	std	Y+14, r25	; 0x0e
    1dda:	8d 87       	std	Y+13, r24	; 0x0d
	__asm__ volatile (
    1ddc:	8d 85       	ldd	r24, Y+13	; 0x0d
    1dde:	9e 85       	ldd	r25, Y+14	; 0x0e
    1de0:	01 97       	sbiw	r24, 0x01	; 1
    1de2:	f1 f7       	brne	.-4      	; 0x1de0 <LCD_Init+0x27a>
    1de4:	9e 87       	std	Y+14, r25	; 0x0e
    1de6:	8d 87       	std	Y+13, r24	; 0x0d
}
    1de8:	00 00       	nop
	_delay_ms(200);
}
    1dea:	00 00       	nop
    1dec:	cc 5b       	subi	r28, 0xBC	; 188
    1dee:	df 4f       	sbci	r29, 0xFF	; 255
    1df0:	0f b6       	in	r0, 0x3f	; 63
    1df2:	f8 94       	cli
    1df4:	de bf       	out	0x3e, r29	; 62
    1df6:	0f be       	out	0x3f, r0	; 63
    1df8:	cd bf       	out	0x3d, r28	; 61
    1dfa:	df 91       	pop	r29
    1dfc:	cf 91       	pop	r28
    1dfe:	08 95       	ret

00001e00 <LCD_String>:


void LCD_String (char *str)		/* Send string to LCD function */
{
    1e00:	cf 93       	push	r28
    1e02:	df 93       	push	r29
    1e04:	00 d0       	rcall	.+0      	; 0x1e06 <LCD_String+0x6>
    1e06:	00 d0       	rcall	.+0      	; 0x1e08 <LCD_String+0x8>
    1e08:	cd b7       	in	r28, 0x3d	; 61
    1e0a:	de b7       	in	r29, 0x3e	; 62
    1e0c:	9c 83       	std	Y+4, r25	; 0x04
    1e0e:	8b 83       	std	Y+3, r24	; 0x03
	int i;
	for(i=0;str[i]!=0;i++)		/* Send each char of string till the NULL */
    1e10:	1a 82       	std	Y+2, r1	; 0x02
    1e12:	19 82       	std	Y+1, r1	; 0x01
    1e14:	0f c0       	rjmp	.+30     	; 0x1e34 <LCD_String+0x34>
	{
		LCD_Char (str[i]);
    1e16:	89 81       	ldd	r24, Y+1	; 0x01
    1e18:	9a 81       	ldd	r25, Y+2	; 0x02
    1e1a:	2b 81       	ldd	r18, Y+3	; 0x03
    1e1c:	3c 81       	ldd	r19, Y+4	; 0x04
    1e1e:	82 0f       	add	r24, r18
    1e20:	93 1f       	adc	r25, r19
    1e22:	fc 01       	movw	r30, r24
    1e24:	80 81       	ld	r24, Z
    1e26:	0e 94 03 07 	call	0xe06	; 0xe06 <LCD_Char>
	for(i=0;str[i]!=0;i++)		/* Send each char of string till the NULL */
    1e2a:	89 81       	ldd	r24, Y+1	; 0x01
    1e2c:	9a 81       	ldd	r25, Y+2	; 0x02
    1e2e:	01 96       	adiw	r24, 0x01	; 1
    1e30:	9a 83       	std	Y+2, r25	; 0x02
    1e32:	89 83       	std	Y+1, r24	; 0x01
    1e34:	89 81       	ldd	r24, Y+1	; 0x01
    1e36:	9a 81       	ldd	r25, Y+2	; 0x02
    1e38:	2b 81       	ldd	r18, Y+3	; 0x03
    1e3a:	3c 81       	ldd	r19, Y+4	; 0x04
    1e3c:	82 0f       	add	r24, r18
    1e3e:	93 1f       	adc	r25, r19
    1e40:	fc 01       	movw	r30, r24
    1e42:	80 81       	ld	r24, Z
    1e44:	88 23       	and	r24, r24
    1e46:	39 f7       	brne	.-50     	; 0x1e16 <LCD_String+0x16>
	}
}
    1e48:	00 00       	nop
    1e4a:	00 00       	nop
    1e4c:	0f 90       	pop	r0
    1e4e:	0f 90       	pop	r0
    1e50:	0f 90       	pop	r0
    1e52:	0f 90       	pop	r0
    1e54:	df 91       	pop	r29
    1e56:	cf 91       	pop	r28
    1e58:	08 95       	ret

00001e5a <LCD_String_xy>:

void LCD_String_xy (char row, char pos, char *str)	/* Send string to LCD with xy position */
{
    1e5a:	cf 93       	push	r28
    1e5c:	df 93       	push	r29
    1e5e:	00 d0       	rcall	.+0      	; 0x1e60 <LCD_String_xy+0x6>
    1e60:	00 d0       	rcall	.+0      	; 0x1e62 <LCD_String_xy+0x8>
    1e62:	cd b7       	in	r28, 0x3d	; 61
    1e64:	de b7       	in	r29, 0x3e	; 62
    1e66:	89 83       	std	Y+1, r24	; 0x01
    1e68:	6a 83       	std	Y+2, r22	; 0x02
    1e6a:	5c 83       	std	Y+4, r21	; 0x04
    1e6c:	4b 83       	std	Y+3, r20	; 0x03
	if (row == 0 && pos<16)
    1e6e:	89 81       	ldd	r24, Y+1	; 0x01
    1e70:	88 23       	and	r24, r24
    1e72:	49 f4       	brne	.+18     	; 0x1e86 <LCD_String_xy+0x2c>
    1e74:	8a 81       	ldd	r24, Y+2	; 0x02
    1e76:	80 31       	cpi	r24, 0x10	; 16
    1e78:	34 f4       	brge	.+12     	; 0x1e86 <LCD_String_xy+0x2c>
	LCD_Command((pos & 0x0F)|0x80);	/* Command of first row and required position<16 */
    1e7a:	8a 81       	ldd	r24, Y+2	; 0x02
    1e7c:	8f 70       	andi	r24, 0x0F	; 15
    1e7e:	80 68       	ori	r24, 0x80	; 128
    1e80:	0e 94 53 00 	call	0xa6	; 0xa6 <LCD_Command>
    1e84:	0b c0       	rjmp	.+22     	; 0x1e9c <LCD_String_xy+0x42>
	else if (row == 1 && pos<16)
    1e86:	89 81       	ldd	r24, Y+1	; 0x01
    1e88:	81 30       	cpi	r24, 0x01	; 1
    1e8a:	41 f4       	brne	.+16     	; 0x1e9c <LCD_String_xy+0x42>
    1e8c:	8a 81       	ldd	r24, Y+2	; 0x02
    1e8e:	80 31       	cpi	r24, 0x10	; 16
    1e90:	2c f4       	brge	.+10     	; 0x1e9c <LCD_String_xy+0x42>
	LCD_Command((pos & 0x0F)|0xC0);	/* Command of first row and required position<16 */
    1e92:	8a 81       	ldd	r24, Y+2	; 0x02
    1e94:	8f 70       	andi	r24, 0x0F	; 15
    1e96:	80 6c       	ori	r24, 0xC0	; 192
    1e98:	0e 94 53 00 	call	0xa6	; 0xa6 <LCD_Command>
	LCD_String(str);		/* Call LCD string function */
    1e9c:	8b 81       	ldd	r24, Y+3	; 0x03
    1e9e:	9c 81       	ldd	r25, Y+4	; 0x04
    1ea0:	0e 94 00 0f 	call	0x1e00	; 0x1e00 <LCD_String>
}
    1ea4:	00 00       	nop
    1ea6:	0f 90       	pop	r0
    1ea8:	0f 90       	pop	r0
    1eaa:	0f 90       	pop	r0
    1eac:	0f 90       	pop	r0
    1eae:	df 91       	pop	r29
    1eb0:	cf 91       	pop	r28
    1eb2:	08 95       	ret

00001eb4 <LCD_Clear>:

void LCD_Clear()
{
    1eb4:	cf 93       	push	r28
    1eb6:	df 93       	push	r29
    1eb8:	cd b7       	in	r28, 0x3d	; 61
    1eba:	de b7       	in	r29, 0x3e	; 62
    1ebc:	a2 97       	sbiw	r28, 0x22	; 34
    1ebe:	0f b6       	in	r0, 0x3f	; 63
    1ec0:	f8 94       	cli
    1ec2:	de bf       	out	0x3e, r29	; 62
    1ec4:	0f be       	out	0x3f, r0	; 63
    1ec6:	cd bf       	out	0x3d, r28	; 61
	LCD_Command (0x01);		/* Clear display */
    1ec8:	81 e0       	ldi	r24, 0x01	; 1
    1eca:	0e 94 53 00 	call	0xa6	; 0xa6 <LCD_Command>
    1ece:	80 e0       	ldi	r24, 0x00	; 0
    1ed0:	90 e0       	ldi	r25, 0x00	; 0
    1ed2:	a0 e0       	ldi	r26, 0x00	; 0
    1ed4:	b0 e4       	ldi	r27, 0x40	; 64
    1ed6:	89 83       	std	Y+1, r24	; 0x01
    1ed8:	9a 83       	std	Y+2, r25	; 0x02
    1eda:	ab 83       	std	Y+3, r26	; 0x03
    1edc:	bc 83       	std	Y+4, r27	; 0x04
	__tmp = ((F_CPU) / 4e3) * __ms;
    1ede:	20 e0       	ldi	r18, 0x00	; 0
    1ee0:	30 e0       	ldi	r19, 0x00	; 0
    1ee2:	4a e7       	ldi	r20, 0x7A	; 122
    1ee4:	55 e4       	ldi	r21, 0x45	; 69
    1ee6:	69 81       	ldd	r22, Y+1	; 0x01
    1ee8:	7a 81       	ldd	r23, Y+2	; 0x02
    1eea:	8b 81       	ldd	r24, Y+3	; 0x03
    1eec:	9c 81       	ldd	r25, Y+4	; 0x04
    1eee:	0e 94 b4 12 	call	0x2568	; 0x2568 <__mulsf3>
    1ef2:	6b 8b       	std	Y+19, r22	; 0x13
    1ef4:	7c 8b       	std	Y+20, r23	; 0x14
    1ef6:	8d 8b       	std	Y+21, r24	; 0x15
    1ef8:	9e 8b       	std	Y+22, r25	; 0x16
    1efa:	8b 89       	ldd	r24, Y+19	; 0x13
    1efc:	9c 89       	ldd	r25, Y+20	; 0x14
    1efe:	ad 89       	ldd	r26, Y+21	; 0x15
    1f00:	be 89       	ldd	r27, Y+22	; 0x16
    1f02:	8d 83       	std	Y+5, r24	; 0x05
    1f04:	9e 83       	std	Y+6, r25	; 0x06
    1f06:	af 83       	std	Y+7, r26	; 0x07
    1f08:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
    1f0a:	20 e0       	ldi	r18, 0x00	; 0
    1f0c:	30 e0       	ldi	r19, 0x00	; 0
    1f0e:	40 e8       	ldi	r20, 0x80	; 128
    1f10:	5f e3       	ldi	r21, 0x3F	; 63
    1f12:	6d 81       	ldd	r22, Y+5	; 0x05
    1f14:	7e 81       	ldd	r23, Y+6	; 0x06
    1f16:	8f 81       	ldd	r24, Y+7	; 0x07
    1f18:	98 85       	ldd	r25, Y+8	; 0x08
    1f1a:	0e 94 94 11 	call	0x2328	; 0x2328 <__cmpsf2>
    1f1e:	88 23       	and	r24, r24
    1f20:	2c f4       	brge	.+10     	; 0x1f2c <LCD_Clear+0x78>
		__ticks = 1;
    1f22:	81 e0       	ldi	r24, 0x01	; 1
    1f24:	90 e0       	ldi	r25, 0x00	; 0
    1f26:	9a 87       	std	Y+10, r25	; 0x0a
    1f28:	89 87       	std	Y+9, r24	; 0x09
    1f2a:	54 c0       	rjmp	.+168    	; 0x1fd4 <LCD_Clear+0x120>
	else if (__tmp > 65535)
    1f2c:	20 e0       	ldi	r18, 0x00	; 0
    1f2e:	3f ef       	ldi	r19, 0xFF	; 255
    1f30:	4f e7       	ldi	r20, 0x7F	; 127
    1f32:	57 e4       	ldi	r21, 0x47	; 71
    1f34:	6d 81       	ldd	r22, Y+5	; 0x05
    1f36:	7e 81       	ldd	r23, Y+6	; 0x06
    1f38:	8f 81       	ldd	r24, Y+7	; 0x07
    1f3a:	98 85       	ldd	r25, Y+8	; 0x08
    1f3c:	0e 94 af 12 	call	0x255e	; 0x255e <__gesf2>
    1f40:	18 16       	cp	r1, r24
    1f42:	d4 f5       	brge	.+116    	; 0x1fb8 <LCD_Clear+0x104>
		__ticks = (uint16_t) (__ms * 10.0);
    1f44:	20 e0       	ldi	r18, 0x00	; 0
    1f46:	30 e0       	ldi	r19, 0x00	; 0
    1f48:	40 e2       	ldi	r20, 0x20	; 32
    1f4a:	51 e4       	ldi	r21, 0x41	; 65
    1f4c:	69 81       	ldd	r22, Y+1	; 0x01
    1f4e:	7a 81       	ldd	r23, Y+2	; 0x02
    1f50:	8b 81       	ldd	r24, Y+3	; 0x03
    1f52:	9c 81       	ldd	r25, Y+4	; 0x04
    1f54:	0e 94 b4 12 	call	0x2568	; 0x2568 <__mulsf3>
    1f58:	6f 8b       	std	Y+23, r22	; 0x17
    1f5a:	78 8f       	std	Y+24, r23	; 0x18
    1f5c:	89 8f       	std	Y+25, r24	; 0x19
    1f5e:	9a 8f       	std	Y+26, r25	; 0x1a
    1f60:	8f 89       	ldd	r24, Y+23	; 0x17
    1f62:	98 8d       	ldd	r25, Y+24	; 0x18
    1f64:	a9 8d       	ldd	r26, Y+25	; 0x19
    1f66:	ba 8d       	ldd	r27, Y+26	; 0x1a
    1f68:	8f 87       	std	Y+15, r24	; 0x0f
    1f6a:	98 8b       	std	Y+16, r25	; 0x10
    1f6c:	a9 8b       	std	Y+17, r26	; 0x11
    1f6e:	ba 8b       	std	Y+18, r27	; 0x12
    1f70:	6f 85       	ldd	r22, Y+15	; 0x0f
    1f72:	78 89       	ldd	r23, Y+16	; 0x10
    1f74:	89 89       	ldd	r24, Y+17	; 0x11
    1f76:	9a 89       	ldd	r25, Y+18	; 0x12
    1f78:	0e 94 0b 12 	call	0x2416	; 0x2416 <__fixunssfsi>
    1f7c:	6b 8f       	std	Y+27, r22	; 0x1b
    1f7e:	7c 8f       	std	Y+28, r23	; 0x1c
    1f80:	8d 8f       	std	Y+29, r24	; 0x1d
    1f82:	9e 8f       	std	Y+30, r25	; 0x1e
    1f84:	ab 8d       	ldd	r26, Y+27	; 0x1b
    1f86:	bc 8d       	ldd	r27, Y+28	; 0x1c
    1f88:	ba 87       	std	Y+10, r27	; 0x0a
    1f8a:	a9 87       	std	Y+9, r26	; 0x09
		while(__ticks)
    1f8c:	10 c0       	rjmp	.+32     	; 0x1fae <LCD_Clear+0xfa>
    1f8e:	80 e9       	ldi	r24, 0x90	; 144
    1f90:	91 e0       	ldi	r25, 0x01	; 1
    1f92:	9c 87       	std	Y+12, r25	; 0x0c
    1f94:	8b 87       	std	Y+11, r24	; 0x0b
	__asm__ volatile (
    1f96:	8b 85       	ldd	r24, Y+11	; 0x0b
    1f98:	9c 85       	ldd	r25, Y+12	; 0x0c
    1f9a:	01 97       	sbiw	r24, 0x01	; 1
    1f9c:	f1 f7       	brne	.-4      	; 0x1f9a <LCD_Clear+0xe6>
    1f9e:	9c 87       	std	Y+12, r25	; 0x0c
    1fa0:	8b 87       	std	Y+11, r24	; 0x0b
}
    1fa2:	00 00       	nop
			__ticks --;
    1fa4:	89 85       	ldd	r24, Y+9	; 0x09
    1fa6:	9a 85       	ldd	r25, Y+10	; 0x0a
    1fa8:	01 97       	sbiw	r24, 0x01	; 1
    1faa:	9a 87       	std	Y+10, r25	; 0x0a
    1fac:	89 87       	std	Y+9, r24	; 0x09
		while(__ticks)
    1fae:	89 85       	ldd	r24, Y+9	; 0x09
    1fb0:	9a 85       	ldd	r25, Y+10	; 0x0a
    1fb2:	89 2b       	or	r24, r25
    1fb4:	61 f7       	brne	.-40     	; 0x1f8e <LCD_Clear+0xda>
		return;
    1fb6:	19 c0       	rjmp	.+50     	; 0x1fea <LCD_Clear+0x136>
		__ticks = (uint16_t)__tmp;
    1fb8:	6d 81       	ldd	r22, Y+5	; 0x05
    1fba:	7e 81       	ldd	r23, Y+6	; 0x06
    1fbc:	8f 81       	ldd	r24, Y+7	; 0x07
    1fbe:	98 85       	ldd	r25, Y+8	; 0x08
    1fc0:	0e 94 0b 12 	call	0x2416	; 0x2416 <__fixunssfsi>
    1fc4:	6f 8f       	std	Y+31, r22	; 0x1f
    1fc6:	78 a3       	std	Y+32, r23	; 0x20
    1fc8:	89 a3       	std	Y+33, r24	; 0x21
    1fca:	9a a3       	std	Y+34, r25	; 0x22
    1fcc:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1fce:	98 a1       	ldd	r25, Y+32	; 0x20
    1fd0:	9a 87       	std	Y+10, r25	; 0x0a
    1fd2:	89 87       	std	Y+9, r24	; 0x09
    1fd4:	89 85       	ldd	r24, Y+9	; 0x09
    1fd6:	9a 85       	ldd	r25, Y+10	; 0x0a
    1fd8:	9e 87       	std	Y+14, r25	; 0x0e
    1fda:	8d 87       	std	Y+13, r24	; 0x0d
	__asm__ volatile (
    1fdc:	8d 85       	ldd	r24, Y+13	; 0x0d
    1fde:	9e 85       	ldd	r25, Y+14	; 0x0e
    1fe0:	01 97       	sbiw	r24, 0x01	; 1
    1fe2:	f1 f7       	brne	.-4      	; 0x1fe0 <LCD_Clear+0x12c>
    1fe4:	9e 87       	std	Y+14, r25	; 0x0e
    1fe6:	8d 87       	std	Y+13, r24	; 0x0d
}
    1fe8:	00 00       	nop
	_delay_ms(2);
	LCD_Command (0x80);		/* Cursor at home position */
    1fea:	80 e8       	ldi	r24, 0x80	; 128
    1fec:	0e 94 53 00 	call	0xa6	; 0xa6 <LCD_Command>
}
    1ff0:	00 00       	nop
    1ff2:	a2 96       	adiw	r28, 0x22	; 34
    1ff4:	0f b6       	in	r0, 0x3f	; 63
    1ff6:	f8 94       	cli
    1ff8:	de bf       	out	0x3e, r29	; 62
    1ffa:	0f be       	out	0x3f, r0	; 63
    1ffc:	cd bf       	out	0x3d, r28	; 61
    1ffe:	df 91       	pop	r29
    2000:	cf 91       	pop	r28
    2002:	08 95       	ret

00002004 <main>:

char inputString[16];
int pos = 0;


int main(void){
    2004:	cf 93       	push	r28
    2006:	df 93       	push	r29
    2008:	cd b7       	in	r28, 0x3d	; 61
    200a:	de b7       	in	r29, 0x3e	; 62
    USART_init();
    200c:	0e 94 2c 11 	call	0x2258	; 0x2258 <USART_init>
    LCD_Init();
    2010:	0e 94 b3 0d 	call	0x1b66	; 0x1b66 <LCD_Init>
    UCSR0B |= (1 << RXCIE0);
    2014:	81 ec       	ldi	r24, 0xC1	; 193
    2016:	90 e0       	ldi	r25, 0x00	; 0
    2018:	fc 01       	movw	r30, r24
    201a:	20 81       	ld	r18, Z
    201c:	81 ec       	ldi	r24, 0xC1	; 193
    201e:	90 e0       	ldi	r25, 0x00	; 0
    2020:	20 68       	ori	r18, 0x80	; 128
    2022:	fc 01       	movw	r30, r24
    2024:	20 83       	st	Z, r18
    sei();
    2026:	78 94       	sei
    USART_putstring("Ready!");
    2028:	80 e0       	ldi	r24, 0x00	; 0
    202a:	91 e0       	ldi	r25, 0x01	; 1
    202c:	0e 94 74 11 	call	0x22e8	; 0x22e8 <USART_putstring>
    while(1){    }
    2030:	ff cf       	rjmp	.-2      	; 0x2030 <main+0x2c>

00002032 <__vector_18>:
    return 0;
}
ISR(USART_RX_vect){
    2032:	1f 92       	push	r1
    2034:	0f 92       	push	r0
    2036:	0f b6       	in	r0, 0x3f	; 63
    2038:	0f 92       	push	r0
    203a:	11 24       	eor	r1, r1
    203c:	2f 93       	push	r18
    203e:	3f 93       	push	r19
    2040:	4f 93       	push	r20
    2042:	5f 93       	push	r21
    2044:	6f 93       	push	r22
    2046:	7f 93       	push	r23
    2048:	8f 93       	push	r24
    204a:	9f 93       	push	r25
    204c:	af 93       	push	r26
    204e:	bf 93       	push	r27
    2050:	ef 93       	push	r30
    2052:	ff 93       	push	r31
    2054:	cf 93       	push	r28
    2056:	df 93       	push	r29
    2058:	cd b7       	in	r28, 0x3d	; 61
    205a:	de b7       	in	r29, 0x3e	; 62
    205c:	a4 97       	sbiw	r28, 0x24	; 36
    205e:	de bf       	out	0x3e, r29	; 62
    2060:	cd bf       	out	0x3d, r28	; 61
    if(inputString[15] != 0){
    2062:	80 91 1d 01 	lds	r24, 0x011D	; 0x80011d <inputString+0xf>
    2066:	88 23       	and	r24, r24
    2068:	39 f1       	breq	.+78     	; 0x20b8 <__vector_18+0x86>
        for(int i = 0; i <= 14; i++){
    206a:	1a 82       	std	Y+2, r1	; 0x02
    206c:	19 82       	std	Y+1, r1	; 0x01
    206e:	12 c0       	rjmp	.+36     	; 0x2094 <__vector_18+0x62>
            inputString[i] = inputString[i+1];
    2070:	89 81       	ldd	r24, Y+1	; 0x01
    2072:	9a 81       	ldd	r25, Y+2	; 0x02
    2074:	01 96       	adiw	r24, 0x01	; 1
    2076:	82 5f       	subi	r24, 0xF2	; 242
    2078:	9e 4f       	sbci	r25, 0xFE	; 254
    207a:	dc 01       	movw	r26, r24
    207c:	2c 91       	ld	r18, X
    207e:	89 81       	ldd	r24, Y+1	; 0x01
    2080:	9a 81       	ldd	r25, Y+2	; 0x02
    2082:	82 5f       	subi	r24, 0xF2	; 242
    2084:	9e 4f       	sbci	r25, 0xFE	; 254
    2086:	fc 01       	movw	r30, r24
    2088:	20 83       	st	Z, r18
        for(int i = 0; i <= 14; i++){
    208a:	89 81       	ldd	r24, Y+1	; 0x01
    208c:	9a 81       	ldd	r25, Y+2	; 0x02
    208e:	01 96       	adiw	r24, 0x01	; 1
    2090:	9a 83       	std	Y+2, r25	; 0x02
    2092:	89 83       	std	Y+1, r24	; 0x01
    2094:	89 81       	ldd	r24, Y+1	; 0x01
    2096:	9a 81       	ldd	r25, Y+2	; 0x02
    2098:	0f 97       	sbiw	r24, 0x0f	; 15
    209a:	54 f3       	brlt	.-44     	; 0x2070 <__vector_18+0x3e>
        }
        inputString[15] = UDR0;
    209c:	86 ec       	ldi	r24, 0xC6	; 198
    209e:	90 e0       	ldi	r25, 0x00	; 0
    20a0:	dc 01       	movw	r26, r24
    20a2:	8c 91       	ld	r24, X
    20a4:	80 93 1d 01 	sts	0x011D, r24	; 0x80011d <inputString+0xf>
        LCD_Command(0x01);
    20a8:	81 e0       	ldi	r24, 0x01	; 1
    20aa:	0e 94 53 00 	call	0xa6	; 0xa6 <LCD_Command>
        LCD_String(inputString);
    20ae:	8e e0       	ldi	r24, 0x0E	; 14
    20b0:	91 e0       	ldi	r25, 0x01	; 1
    20b2:	0e 94 00 0f 	call	0x1e00	; 0x1e00 <LCD_String>
    20b6:	24 c0       	rjmp	.+72     	; 0x2100 <__vector_18+0xce>
    }
    else{
        LCD_Clear();
    20b8:	0e 94 5a 0f 	call	0x1eb4	; 0x1eb4 <LCD_Clear>
        inputString[pos] = UDR0;
    20bc:	86 ec       	ldi	r24, 0xC6	; 198
    20be:	90 e0       	ldi	r25, 0x00	; 0
    20c0:	fc 01       	movw	r30, r24
    20c2:	20 81       	ld	r18, Z
    20c4:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <__data_end>
    20c8:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <__data_end+0x1>
    20cc:	82 5f       	subi	r24, 0xF2	; 242
    20ce:	9e 4f       	sbci	r25, 0xFE	; 254
    20d0:	dc 01       	movw	r26, r24
    20d2:	2c 93       	st	X, r18
        pos++;
    20d4:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <__data_end>
    20d8:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <__data_end+0x1>
    20dc:	01 96       	adiw	r24, 0x01	; 1
    20de:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <__data_end+0x1>
    20e2:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <__data_end>
        LCD_Command(0x90 - pos);
    20e6:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <__data_end>
    20ea:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <__data_end+0x1>
    20ee:	98 2f       	mov	r25, r24
    20f0:	80 e9       	ldi	r24, 0x90	; 144
    20f2:	89 1b       	sub	r24, r25
    20f4:	0e 94 53 00 	call	0xa6	; 0xa6 <LCD_Command>
        LCD_String(inputString);
    20f8:	8e e0       	ldi	r24, 0x0E	; 14
    20fa:	91 e0       	ldi	r25, 0x01	; 1
    20fc:	0e 94 00 0f 	call	0x1e00	; 0x1e00 <LCD_String>
    2100:	80 e0       	ldi	r24, 0x00	; 0
    2102:	90 e0       	ldi	r25, 0x00	; 0
    2104:	a6 e9       	ldi	r26, 0x96	; 150
    2106:	b3 e4       	ldi	r27, 0x43	; 67
    2108:	8b 83       	std	Y+3, r24	; 0x03
    210a:	9c 83       	std	Y+4, r25	; 0x04
    210c:	ad 83       	std	Y+5, r26	; 0x05
    210e:	be 83       	std	Y+6, r27	; 0x06
	__tmp = ((F_CPU) / 4e3) * __ms;
    2110:	20 e0       	ldi	r18, 0x00	; 0
    2112:	30 e0       	ldi	r19, 0x00	; 0
    2114:	4a e7       	ldi	r20, 0x7A	; 122
    2116:	55 e4       	ldi	r21, 0x45	; 69
    2118:	6b 81       	ldd	r22, Y+3	; 0x03
    211a:	7c 81       	ldd	r23, Y+4	; 0x04
    211c:	8d 81       	ldd	r24, Y+5	; 0x05
    211e:	9e 81       	ldd	r25, Y+6	; 0x06
    2120:	0e 94 b4 12 	call	0x2568	; 0x2568 <__mulsf3>
    2124:	6d 8b       	std	Y+21, r22	; 0x15
    2126:	7e 8b       	std	Y+22, r23	; 0x16
    2128:	8f 8b       	std	Y+23, r24	; 0x17
    212a:	98 8f       	std	Y+24, r25	; 0x18
    212c:	8d 89       	ldd	r24, Y+21	; 0x15
    212e:	9e 89       	ldd	r25, Y+22	; 0x16
    2130:	af 89       	ldd	r26, Y+23	; 0x17
    2132:	b8 8d       	ldd	r27, Y+24	; 0x18
    2134:	8f 83       	std	Y+7, r24	; 0x07
    2136:	98 87       	std	Y+8, r25	; 0x08
    2138:	a9 87       	std	Y+9, r26	; 0x09
    213a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    213c:	20 e0       	ldi	r18, 0x00	; 0
    213e:	30 e0       	ldi	r19, 0x00	; 0
    2140:	40 e8       	ldi	r20, 0x80	; 128
    2142:	5f e3       	ldi	r21, 0x3F	; 63
    2144:	6f 81       	ldd	r22, Y+7	; 0x07
    2146:	78 85       	ldd	r23, Y+8	; 0x08
    2148:	89 85       	ldd	r24, Y+9	; 0x09
    214a:	9a 85       	ldd	r25, Y+10	; 0x0a
    214c:	0e 94 94 11 	call	0x2328	; 0x2328 <__cmpsf2>
    2150:	88 23       	and	r24, r24
    2152:	2c f4       	brge	.+10     	; 0x215e <__vector_18+0x12c>
		__ticks = 1;
    2154:	81 e0       	ldi	r24, 0x01	; 1
    2156:	90 e0       	ldi	r25, 0x00	; 0
    2158:	9c 87       	std	Y+12, r25	; 0x0c
    215a:	8b 87       	std	Y+11, r24	; 0x0b
    215c:	54 c0       	rjmp	.+168    	; 0x2206 <__vector_18+0x1d4>
	else if (__tmp > 65535)
    215e:	20 e0       	ldi	r18, 0x00	; 0
    2160:	3f ef       	ldi	r19, 0xFF	; 255
    2162:	4f e7       	ldi	r20, 0x7F	; 127
    2164:	57 e4       	ldi	r21, 0x47	; 71
    2166:	6f 81       	ldd	r22, Y+7	; 0x07
    2168:	78 85       	ldd	r23, Y+8	; 0x08
    216a:	89 85       	ldd	r24, Y+9	; 0x09
    216c:	9a 85       	ldd	r25, Y+10	; 0x0a
    216e:	0e 94 af 12 	call	0x255e	; 0x255e <__gesf2>
    2172:	18 16       	cp	r1, r24
    2174:	d4 f5       	brge	.+116    	; 0x21ea <__vector_18+0x1b8>
		__ticks = (uint16_t) (__ms * 10.0);
    2176:	20 e0       	ldi	r18, 0x00	; 0
    2178:	30 e0       	ldi	r19, 0x00	; 0
    217a:	40 e2       	ldi	r20, 0x20	; 32
    217c:	51 e4       	ldi	r21, 0x41	; 65
    217e:	6b 81       	ldd	r22, Y+3	; 0x03
    2180:	7c 81       	ldd	r23, Y+4	; 0x04
    2182:	8d 81       	ldd	r24, Y+5	; 0x05
    2184:	9e 81       	ldd	r25, Y+6	; 0x06
    2186:	0e 94 b4 12 	call	0x2568	; 0x2568 <__mulsf3>
    218a:	69 8f       	std	Y+25, r22	; 0x19
    218c:	7a 8f       	std	Y+26, r23	; 0x1a
    218e:	8b 8f       	std	Y+27, r24	; 0x1b
    2190:	9c 8f       	std	Y+28, r25	; 0x1c
    2192:	89 8d       	ldd	r24, Y+25	; 0x19
    2194:	9a 8d       	ldd	r25, Y+26	; 0x1a
    2196:	ab 8d       	ldd	r26, Y+27	; 0x1b
    2198:	bc 8d       	ldd	r27, Y+28	; 0x1c
    219a:	89 8b       	std	Y+17, r24	; 0x11
    219c:	9a 8b       	std	Y+18, r25	; 0x12
    219e:	ab 8b       	std	Y+19, r26	; 0x13
    21a0:	bc 8b       	std	Y+20, r27	; 0x14
    21a2:	69 89       	ldd	r22, Y+17	; 0x11
    21a4:	7a 89       	ldd	r23, Y+18	; 0x12
    21a6:	8b 89       	ldd	r24, Y+19	; 0x13
    21a8:	9c 89       	ldd	r25, Y+20	; 0x14
    21aa:	0e 94 0b 12 	call	0x2416	; 0x2416 <__fixunssfsi>
    21ae:	6d 8f       	std	Y+29, r22	; 0x1d
    21b0:	7e 8f       	std	Y+30, r23	; 0x1e
    21b2:	8f 8f       	std	Y+31, r24	; 0x1f
    21b4:	98 a3       	std	Y+32, r25	; 0x20
    21b6:	ad 8d       	ldd	r26, Y+29	; 0x1d
    21b8:	be 8d       	ldd	r27, Y+30	; 0x1e
    21ba:	bc 87       	std	Y+12, r27	; 0x0c
    21bc:	ab 87       	std	Y+11, r26	; 0x0b
		while(__ticks)
    21be:	10 c0       	rjmp	.+32     	; 0x21e0 <__vector_18+0x1ae>
    21c0:	80 e9       	ldi	r24, 0x90	; 144
    21c2:	91 e0       	ldi	r25, 0x01	; 1
    21c4:	9e 87       	std	Y+14, r25	; 0x0e
    21c6:	8d 87       	std	Y+13, r24	; 0x0d
	__asm__ volatile (
    21c8:	8d 85       	ldd	r24, Y+13	; 0x0d
    21ca:	9e 85       	ldd	r25, Y+14	; 0x0e
    21cc:	01 97       	sbiw	r24, 0x01	; 1
    21ce:	f1 f7       	brne	.-4      	; 0x21cc <__vector_18+0x19a>
    21d0:	9e 87       	std	Y+14, r25	; 0x0e
    21d2:	8d 87       	std	Y+13, r24	; 0x0d
}
    21d4:	00 00       	nop
			__ticks --;
    21d6:	8b 85       	ldd	r24, Y+11	; 0x0b
    21d8:	9c 85       	ldd	r25, Y+12	; 0x0c
    21da:	01 97       	sbiw	r24, 0x01	; 1
    21dc:	9c 87       	std	Y+12, r25	; 0x0c
    21de:	8b 87       	std	Y+11, r24	; 0x0b
		while(__ticks)
    21e0:	8b 85       	ldd	r24, Y+11	; 0x0b
    21e2:	9c 85       	ldd	r25, Y+12	; 0x0c
    21e4:	89 2b       	or	r24, r25
    21e6:	61 f7       	brne	.-40     	; 0x21c0 <__vector_18+0x18e>
		return;
    21e8:	19 c0       	rjmp	.+50     	; 0x221c <__vector_18+0x1ea>
		__ticks = (uint16_t)__tmp;
    21ea:	6f 81       	ldd	r22, Y+7	; 0x07
    21ec:	78 85       	ldd	r23, Y+8	; 0x08
    21ee:	89 85       	ldd	r24, Y+9	; 0x09
    21f0:	9a 85       	ldd	r25, Y+10	; 0x0a
    21f2:	0e 94 0b 12 	call	0x2416	; 0x2416 <__fixunssfsi>
    21f6:	69 a3       	std	Y+33, r22	; 0x21
    21f8:	7a a3       	std	Y+34, r23	; 0x22
    21fa:	8b a3       	std	Y+35, r24	; 0x23
    21fc:	9c a3       	std	Y+36, r25	; 0x24
    21fe:	e9 a1       	ldd	r30, Y+33	; 0x21
    2200:	fa a1       	ldd	r31, Y+34	; 0x22
    2202:	fc 87       	std	Y+12, r31	; 0x0c
    2204:	eb 87       	std	Y+11, r30	; 0x0b
    2206:	8b 85       	ldd	r24, Y+11	; 0x0b
    2208:	9c 85       	ldd	r25, Y+12	; 0x0c
    220a:	98 8b       	std	Y+16, r25	; 0x10
    220c:	8f 87       	std	Y+15, r24	; 0x0f
	__asm__ volatile (
    220e:	8f 85       	ldd	r24, Y+15	; 0x0f
    2210:	98 89       	ldd	r25, Y+16	; 0x10
    2212:	01 97       	sbiw	r24, 0x01	; 1
    2214:	f1 f7       	brne	.-4      	; 0x2212 <__vector_18+0x1e0>
    2216:	98 8b       	std	Y+16, r25	; 0x10
    2218:	8f 87       	std	Y+15, r24	; 0x0f
}
    221a:	00 00       	nop
        //LCD_Command(0x18);
    }

    _delay_ms(300);
    USART_putstring("OK!");
    221c:	87 e0       	ldi	r24, 0x07	; 7
    221e:	91 e0       	ldi	r25, 0x01	; 1
    2220:	0e 94 74 11 	call	0x22e8	; 0x22e8 <USART_putstring>

    //char c;
    //c = UDR0;
    //UDR0 = c;
}
    2224:	00 00       	nop
    2226:	a4 96       	adiw	r28, 0x24	; 36
    2228:	0f b6       	in	r0, 0x3f	; 63
    222a:	f8 94       	cli
    222c:	de bf       	out	0x3e, r29	; 62
    222e:	0f be       	out	0x3f, r0	; 63
    2230:	cd bf       	out	0x3d, r28	; 61
    2232:	df 91       	pop	r29
    2234:	cf 91       	pop	r28
    2236:	ff 91       	pop	r31
    2238:	ef 91       	pop	r30
    223a:	bf 91       	pop	r27
    223c:	af 91       	pop	r26
    223e:	9f 91       	pop	r25
    2240:	8f 91       	pop	r24
    2242:	7f 91       	pop	r23
    2244:	6f 91       	pop	r22
    2246:	5f 91       	pop	r21
    2248:	4f 91       	pop	r20
    224a:	3f 91       	pop	r19
    224c:	2f 91       	pop	r18
    224e:	0f 90       	pop	r0
    2250:	0f be       	out	0x3f, r0	; 63
    2252:	0f 90       	pop	r0
    2254:	1f 90       	pop	r1
    2256:	18 95       	reti

00002258 <USART_init>:
void USART_init(void);
unsigned char USART_receive(void);
void USART_send( unsigned char data);
void USART_putstring(char* StringPtr);

void USART_init(void){
    2258:	cf 93       	push	r28
    225a:	df 93       	push	r29
    225c:	cd b7       	in	r28, 0x3d	; 61
    225e:	de b7       	in	r29, 0x3e	; 62

 UBRR0H = (uint8_t)(BAUD_PRESCALLER>>8);
    2260:	85 ec       	ldi	r24, 0xC5	; 197
    2262:	90 e0       	ldi	r25, 0x00	; 0
    2264:	fc 01       	movw	r30, r24
    2266:	10 82       	st	Z, r1
 UBRR0L = (uint8_t)(BAUD_PRESCALLER);
    2268:	84 ec       	ldi	r24, 0xC4	; 196
    226a:	90 e0       	ldi	r25, 0x00	; 0
    226c:	27 e6       	ldi	r18, 0x67	; 103
    226e:	fc 01       	movw	r30, r24
    2270:	20 83       	st	Z, r18
 UCSR0B = (1<<RXEN0)|(1<<TXEN0);
    2272:	81 ec       	ldi	r24, 0xC1	; 193
    2274:	90 e0       	ldi	r25, 0x00	; 0
    2276:	28 e1       	ldi	r18, 0x18	; 24
    2278:	fc 01       	movw	r30, r24
    227a:	20 83       	st	Z, r18
 UCSR0C = (3<<UCSZ00);
    227c:	82 ec       	ldi	r24, 0xC2	; 194
    227e:	90 e0       	ldi	r25, 0x00	; 0
    2280:	26 e0       	ldi	r18, 0x06	; 6
    2282:	fc 01       	movw	r30, r24
    2284:	20 83       	st	Z, r18
}
    2286:	00 00       	nop
    2288:	df 91       	pop	r29
    228a:	cf 91       	pop	r28
    228c:	08 95       	ret

0000228e <USART_receive>:

unsigned char USART_receive(void){
    228e:	cf 93       	push	r28
    2290:	df 93       	push	r29
    2292:	cd b7       	in	r28, 0x3d	; 61
    2294:	de b7       	in	r29, 0x3e	; 62

 while(!(UCSR0A & (1<<RXC0)));
    2296:	00 00       	nop
    2298:	80 ec       	ldi	r24, 0xC0	; 192
    229a:	90 e0       	ldi	r25, 0x00	; 0
    229c:	fc 01       	movw	r30, r24
    229e:	80 81       	ld	r24, Z
    22a0:	88 23       	and	r24, r24
    22a2:	d4 f7       	brge	.-12     	; 0x2298 <USART_receive+0xa>
 return UDR0;
    22a4:	86 ec       	ldi	r24, 0xC6	; 198
    22a6:	90 e0       	ldi	r25, 0x00	; 0
    22a8:	fc 01       	movw	r30, r24
    22aa:	80 81       	ld	r24, Z

}
    22ac:	df 91       	pop	r29
    22ae:	cf 91       	pop	r28
    22b0:	08 95       	ret

000022b2 <USART_send>:

void USART_send( unsigned char data){
    22b2:	cf 93       	push	r28
    22b4:	df 93       	push	r29
    22b6:	0f 92       	push	r0
    22b8:	cd b7       	in	r28, 0x3d	; 61
    22ba:	de b7       	in	r29, 0x3e	; 62
    22bc:	89 83       	std	Y+1, r24	; 0x01

 while(!(UCSR0A & (1<<UDRE0)));
    22be:	00 00       	nop
    22c0:	80 ec       	ldi	r24, 0xC0	; 192
    22c2:	90 e0       	ldi	r25, 0x00	; 0
    22c4:	fc 01       	movw	r30, r24
    22c6:	80 81       	ld	r24, Z
    22c8:	88 2f       	mov	r24, r24
    22ca:	90 e0       	ldi	r25, 0x00	; 0
    22cc:	80 72       	andi	r24, 0x20	; 32
    22ce:	99 27       	eor	r25, r25
    22d0:	89 2b       	or	r24, r25
    22d2:	b1 f3       	breq	.-20     	; 0x22c0 <USART_send+0xe>
 UDR0 = data;
    22d4:	86 ec       	ldi	r24, 0xC6	; 198
    22d6:	90 e0       	ldi	r25, 0x00	; 0
    22d8:	29 81       	ldd	r18, Y+1	; 0x01
    22da:	fc 01       	movw	r30, r24
    22dc:	20 83       	st	Z, r18

}
    22de:	00 00       	nop
    22e0:	0f 90       	pop	r0
    22e2:	df 91       	pop	r29
    22e4:	cf 91       	pop	r28
    22e6:	08 95       	ret

000022e8 <USART_putstring>:

void USART_putstring(char* StringPtr){
    22e8:	cf 93       	push	r28
    22ea:	df 93       	push	r29
    22ec:	00 d0       	rcall	.+0      	; 0x22ee <USART_putstring+0x6>
    22ee:	cd b7       	in	r28, 0x3d	; 61
    22f0:	de b7       	in	r29, 0x3e	; 62
    22f2:	9a 83       	std	Y+2, r25	; 0x02
    22f4:	89 83       	std	Y+1, r24	; 0x01

while(*StringPtr != 0x00){
    22f6:	0b c0       	rjmp	.+22     	; 0x230e <USART_putstring+0x26>
 USART_send(*StringPtr);
    22f8:	89 81       	ldd	r24, Y+1	; 0x01
    22fa:	9a 81       	ldd	r25, Y+2	; 0x02
    22fc:	fc 01       	movw	r30, r24
    22fe:	80 81       	ld	r24, Z
    2300:	0e 94 59 11 	call	0x22b2	; 0x22b2 <USART_send>
 StringPtr++;}
    2304:	89 81       	ldd	r24, Y+1	; 0x01
    2306:	9a 81       	ldd	r25, Y+2	; 0x02
    2308:	01 96       	adiw	r24, 0x01	; 1
    230a:	9a 83       	std	Y+2, r25	; 0x02
    230c:	89 83       	std	Y+1, r24	; 0x01
while(*StringPtr != 0x00){
    230e:	89 81       	ldd	r24, Y+1	; 0x01
    2310:	9a 81       	ldd	r25, Y+2	; 0x02
    2312:	fc 01       	movw	r30, r24
    2314:	80 81       	ld	r24, Z
    2316:	88 23       	and	r24, r24
    2318:	79 f7       	brne	.-34     	; 0x22f8 <USART_putstring+0x10>

}
    231a:	00 00       	nop
    231c:	00 00       	nop
    231e:	0f 90       	pop	r0
    2320:	0f 90       	pop	r0
    2322:	df 91       	pop	r29
    2324:	cf 91       	pop	r28
    2326:	08 95       	ret

00002328 <__cmpsf2>:
    2328:	0e 94 3a 12 	call	0x2474	; 0x2474 <__fp_cmp>
    232c:	08 f4       	brcc	.+2      	; 0x2330 <__cmpsf2+0x8>
    232e:	81 e0       	ldi	r24, 0x01	; 1
    2330:	08 95       	ret

00002332 <__divsf3>:
    2332:	0e 94 ad 11 	call	0x235a	; 0x235a <__divsf3x>
    2336:	0c 94 75 12 	jmp	0x24ea	; 0x24ea <__fp_round>
    233a:	0e 94 6e 12 	call	0x24dc	; 0x24dc <__fp_pscB>
    233e:	58 f0       	brcs	.+22     	; 0x2356 <__divsf3+0x24>
    2340:	0e 94 67 12 	call	0x24ce	; 0x24ce <__fp_pscA>
    2344:	40 f0       	brcs	.+16     	; 0x2356 <__divsf3+0x24>
    2346:	29 f4       	brne	.+10     	; 0x2352 <__divsf3+0x20>
    2348:	5f 3f       	cpi	r21, 0xFF	; 255
    234a:	29 f0       	breq	.+10     	; 0x2356 <__divsf3+0x24>
    234c:	0c 94 5e 12 	jmp	0x24bc	; 0x24bc <__fp_inf>
    2350:	51 11       	cpse	r21, r1
    2352:	0c 94 a9 12 	jmp	0x2552	; 0x2552 <__fp_szero>
    2356:	0c 94 64 12 	jmp	0x24c8	; 0x24c8 <__fp_nan>

0000235a <__divsf3x>:
    235a:	0e 94 86 12 	call	0x250c	; 0x250c <__fp_split3>
    235e:	68 f3       	brcs	.-38     	; 0x233a <__divsf3+0x8>

00002360 <__divsf3_pse>:
    2360:	99 23       	and	r25, r25
    2362:	b1 f3       	breq	.-20     	; 0x2350 <__divsf3+0x1e>
    2364:	55 23       	and	r21, r21
    2366:	91 f3       	breq	.-28     	; 0x234c <__divsf3+0x1a>
    2368:	95 1b       	sub	r25, r21
    236a:	55 0b       	sbc	r21, r21
    236c:	bb 27       	eor	r27, r27
    236e:	aa 27       	eor	r26, r26
    2370:	62 17       	cp	r22, r18
    2372:	73 07       	cpc	r23, r19
    2374:	84 07       	cpc	r24, r20
    2376:	38 f0       	brcs	.+14     	; 0x2386 <__divsf3_pse+0x26>
    2378:	9f 5f       	subi	r25, 0xFF	; 255
    237a:	5f 4f       	sbci	r21, 0xFF	; 255
    237c:	22 0f       	add	r18, r18
    237e:	33 1f       	adc	r19, r19
    2380:	44 1f       	adc	r20, r20
    2382:	aa 1f       	adc	r26, r26
    2384:	a9 f3       	breq	.-22     	; 0x2370 <__divsf3_pse+0x10>
    2386:	35 d0       	rcall	.+106    	; 0x23f2 <__divsf3_pse+0x92>
    2388:	0e 2e       	mov	r0, r30
    238a:	3a f0       	brmi	.+14     	; 0x239a <__divsf3_pse+0x3a>
    238c:	e0 e8       	ldi	r30, 0x80	; 128
    238e:	32 d0       	rcall	.+100    	; 0x23f4 <__divsf3_pse+0x94>
    2390:	91 50       	subi	r25, 0x01	; 1
    2392:	50 40       	sbci	r21, 0x00	; 0
    2394:	e6 95       	lsr	r30
    2396:	00 1c       	adc	r0, r0
    2398:	ca f7       	brpl	.-14     	; 0x238c <__divsf3_pse+0x2c>
    239a:	2b d0       	rcall	.+86     	; 0x23f2 <__divsf3_pse+0x92>
    239c:	fe 2f       	mov	r31, r30
    239e:	29 d0       	rcall	.+82     	; 0x23f2 <__divsf3_pse+0x92>
    23a0:	66 0f       	add	r22, r22
    23a2:	77 1f       	adc	r23, r23
    23a4:	88 1f       	adc	r24, r24
    23a6:	bb 1f       	adc	r27, r27
    23a8:	26 17       	cp	r18, r22
    23aa:	37 07       	cpc	r19, r23
    23ac:	48 07       	cpc	r20, r24
    23ae:	ab 07       	cpc	r26, r27
    23b0:	b0 e8       	ldi	r27, 0x80	; 128
    23b2:	09 f0       	breq	.+2      	; 0x23b6 <__divsf3_pse+0x56>
    23b4:	bb 0b       	sbc	r27, r27
    23b6:	80 2d       	mov	r24, r0
    23b8:	bf 01       	movw	r22, r30
    23ba:	ff 27       	eor	r31, r31
    23bc:	93 58       	subi	r25, 0x83	; 131
    23be:	5f 4f       	sbci	r21, 0xFF	; 255
    23c0:	3a f0       	brmi	.+14     	; 0x23d0 <__divsf3_pse+0x70>
    23c2:	9e 3f       	cpi	r25, 0xFE	; 254
    23c4:	51 05       	cpc	r21, r1
    23c6:	78 f0       	brcs	.+30     	; 0x23e6 <__divsf3_pse+0x86>
    23c8:	0c 94 5e 12 	jmp	0x24bc	; 0x24bc <__fp_inf>
    23cc:	0c 94 a9 12 	jmp	0x2552	; 0x2552 <__fp_szero>
    23d0:	5f 3f       	cpi	r21, 0xFF	; 255
    23d2:	e4 f3       	brlt	.-8      	; 0x23cc <__divsf3_pse+0x6c>
    23d4:	98 3e       	cpi	r25, 0xE8	; 232
    23d6:	d4 f3       	brlt	.-12     	; 0x23cc <__divsf3_pse+0x6c>
    23d8:	86 95       	lsr	r24
    23da:	77 95       	ror	r23
    23dc:	67 95       	ror	r22
    23de:	b7 95       	ror	r27
    23e0:	f7 95       	ror	r31
    23e2:	9f 5f       	subi	r25, 0xFF	; 255
    23e4:	c9 f7       	brne	.-14     	; 0x23d8 <__divsf3_pse+0x78>
    23e6:	88 0f       	add	r24, r24
    23e8:	91 1d       	adc	r25, r1
    23ea:	96 95       	lsr	r25
    23ec:	87 95       	ror	r24
    23ee:	97 f9       	bld	r25, 7
    23f0:	08 95       	ret
    23f2:	e1 e0       	ldi	r30, 0x01	; 1
    23f4:	66 0f       	add	r22, r22
    23f6:	77 1f       	adc	r23, r23
    23f8:	88 1f       	adc	r24, r24
    23fa:	bb 1f       	adc	r27, r27
    23fc:	62 17       	cp	r22, r18
    23fe:	73 07       	cpc	r23, r19
    2400:	84 07       	cpc	r24, r20
    2402:	ba 07       	cpc	r27, r26
    2404:	20 f0       	brcs	.+8      	; 0x240e <__divsf3_pse+0xae>
    2406:	62 1b       	sub	r22, r18
    2408:	73 0b       	sbc	r23, r19
    240a:	84 0b       	sbc	r24, r20
    240c:	ba 0b       	sbc	r27, r26
    240e:	ee 1f       	adc	r30, r30
    2410:	88 f7       	brcc	.-30     	; 0x23f4 <__divsf3_pse+0x94>
    2412:	e0 95       	com	r30
    2414:	08 95       	ret

00002416 <__fixunssfsi>:
    2416:	0e 94 8e 12 	call	0x251c	; 0x251c <__fp_splitA>
    241a:	88 f0       	brcs	.+34     	; 0x243e <__fixunssfsi+0x28>
    241c:	9f 57       	subi	r25, 0x7F	; 127
    241e:	98 f0       	brcs	.+38     	; 0x2446 <__fixunssfsi+0x30>
    2420:	b9 2f       	mov	r27, r25
    2422:	99 27       	eor	r25, r25
    2424:	b7 51       	subi	r27, 0x17	; 23
    2426:	b0 f0       	brcs	.+44     	; 0x2454 <__fixunssfsi+0x3e>
    2428:	e1 f0       	breq	.+56     	; 0x2462 <__fixunssfsi+0x4c>
    242a:	66 0f       	add	r22, r22
    242c:	77 1f       	adc	r23, r23
    242e:	88 1f       	adc	r24, r24
    2430:	99 1f       	adc	r25, r25
    2432:	1a f0       	brmi	.+6      	; 0x243a <__fixunssfsi+0x24>
    2434:	ba 95       	dec	r27
    2436:	c9 f7       	brne	.-14     	; 0x242a <__fixunssfsi+0x14>
    2438:	14 c0       	rjmp	.+40     	; 0x2462 <__fixunssfsi+0x4c>
    243a:	b1 30       	cpi	r27, 0x01	; 1
    243c:	91 f0       	breq	.+36     	; 0x2462 <__fixunssfsi+0x4c>
    243e:	0e 94 a8 12 	call	0x2550	; 0x2550 <__fp_zero>
    2442:	b1 e0       	ldi	r27, 0x01	; 1
    2444:	08 95       	ret
    2446:	0c 94 a8 12 	jmp	0x2550	; 0x2550 <__fp_zero>
    244a:	67 2f       	mov	r22, r23
    244c:	78 2f       	mov	r23, r24
    244e:	88 27       	eor	r24, r24
    2450:	b8 5f       	subi	r27, 0xF8	; 248
    2452:	39 f0       	breq	.+14     	; 0x2462 <__fixunssfsi+0x4c>
    2454:	b9 3f       	cpi	r27, 0xF9	; 249
    2456:	cc f3       	brlt	.-14     	; 0x244a <__fixunssfsi+0x34>
    2458:	86 95       	lsr	r24
    245a:	77 95       	ror	r23
    245c:	67 95       	ror	r22
    245e:	b3 95       	inc	r27
    2460:	d9 f7       	brne	.-10     	; 0x2458 <__fixunssfsi+0x42>
    2462:	3e f4       	brtc	.+14     	; 0x2472 <__fixunssfsi+0x5c>
    2464:	90 95       	com	r25
    2466:	80 95       	com	r24
    2468:	70 95       	com	r23
    246a:	61 95       	neg	r22
    246c:	7f 4f       	sbci	r23, 0xFF	; 255
    246e:	8f 4f       	sbci	r24, 0xFF	; 255
    2470:	9f 4f       	sbci	r25, 0xFF	; 255
    2472:	08 95       	ret

00002474 <__fp_cmp>:
    2474:	99 0f       	add	r25, r25
    2476:	00 08       	sbc	r0, r0
    2478:	55 0f       	add	r21, r21
    247a:	aa 0b       	sbc	r26, r26
    247c:	e0 e8       	ldi	r30, 0x80	; 128
    247e:	fe ef       	ldi	r31, 0xFE	; 254
    2480:	16 16       	cp	r1, r22
    2482:	17 06       	cpc	r1, r23
    2484:	e8 07       	cpc	r30, r24
    2486:	f9 07       	cpc	r31, r25
    2488:	c0 f0       	brcs	.+48     	; 0x24ba <__fp_cmp+0x46>
    248a:	12 16       	cp	r1, r18
    248c:	13 06       	cpc	r1, r19
    248e:	e4 07       	cpc	r30, r20
    2490:	f5 07       	cpc	r31, r21
    2492:	98 f0       	brcs	.+38     	; 0x24ba <__fp_cmp+0x46>
    2494:	62 1b       	sub	r22, r18
    2496:	73 0b       	sbc	r23, r19
    2498:	84 0b       	sbc	r24, r20
    249a:	95 0b       	sbc	r25, r21
    249c:	39 f4       	brne	.+14     	; 0x24ac <__fp_cmp+0x38>
    249e:	0a 26       	eor	r0, r26
    24a0:	61 f0       	breq	.+24     	; 0x24ba <__fp_cmp+0x46>
    24a2:	23 2b       	or	r18, r19
    24a4:	24 2b       	or	r18, r20
    24a6:	25 2b       	or	r18, r21
    24a8:	21 f4       	brne	.+8      	; 0x24b2 <__fp_cmp+0x3e>
    24aa:	08 95       	ret
    24ac:	0a 26       	eor	r0, r26
    24ae:	09 f4       	brne	.+2      	; 0x24b2 <__fp_cmp+0x3e>
    24b0:	a1 40       	sbci	r26, 0x01	; 1
    24b2:	a6 95       	lsr	r26
    24b4:	8f ef       	ldi	r24, 0xFF	; 255
    24b6:	81 1d       	adc	r24, r1
    24b8:	81 1d       	adc	r24, r1
    24ba:	08 95       	ret

000024bc <__fp_inf>:
    24bc:	97 f9       	bld	r25, 7
    24be:	9f 67       	ori	r25, 0x7F	; 127
    24c0:	80 e8       	ldi	r24, 0x80	; 128
    24c2:	70 e0       	ldi	r23, 0x00	; 0
    24c4:	60 e0       	ldi	r22, 0x00	; 0
    24c6:	08 95       	ret

000024c8 <__fp_nan>:
    24c8:	9f ef       	ldi	r25, 0xFF	; 255
    24ca:	80 ec       	ldi	r24, 0xC0	; 192
    24cc:	08 95       	ret

000024ce <__fp_pscA>:
    24ce:	00 24       	eor	r0, r0
    24d0:	0a 94       	dec	r0
    24d2:	16 16       	cp	r1, r22
    24d4:	17 06       	cpc	r1, r23
    24d6:	18 06       	cpc	r1, r24
    24d8:	09 06       	cpc	r0, r25
    24da:	08 95       	ret

000024dc <__fp_pscB>:
    24dc:	00 24       	eor	r0, r0
    24de:	0a 94       	dec	r0
    24e0:	12 16       	cp	r1, r18
    24e2:	13 06       	cpc	r1, r19
    24e4:	14 06       	cpc	r1, r20
    24e6:	05 06       	cpc	r0, r21
    24e8:	08 95       	ret

000024ea <__fp_round>:
    24ea:	09 2e       	mov	r0, r25
    24ec:	03 94       	inc	r0
    24ee:	00 0c       	add	r0, r0
    24f0:	11 f4       	brne	.+4      	; 0x24f6 <__fp_round+0xc>
    24f2:	88 23       	and	r24, r24
    24f4:	52 f0       	brmi	.+20     	; 0x250a <__fp_round+0x20>
    24f6:	bb 0f       	add	r27, r27
    24f8:	40 f4       	brcc	.+16     	; 0x250a <__fp_round+0x20>
    24fa:	bf 2b       	or	r27, r31
    24fc:	11 f4       	brne	.+4      	; 0x2502 <__fp_round+0x18>
    24fe:	60 ff       	sbrs	r22, 0
    2500:	04 c0       	rjmp	.+8      	; 0x250a <__fp_round+0x20>
    2502:	6f 5f       	subi	r22, 0xFF	; 255
    2504:	7f 4f       	sbci	r23, 0xFF	; 255
    2506:	8f 4f       	sbci	r24, 0xFF	; 255
    2508:	9f 4f       	sbci	r25, 0xFF	; 255
    250a:	08 95       	ret

0000250c <__fp_split3>:
    250c:	57 fd       	sbrc	r21, 7
    250e:	90 58       	subi	r25, 0x80	; 128
    2510:	44 0f       	add	r20, r20
    2512:	55 1f       	adc	r21, r21
    2514:	59 f0       	breq	.+22     	; 0x252c <__fp_splitA+0x10>
    2516:	5f 3f       	cpi	r21, 0xFF	; 255
    2518:	71 f0       	breq	.+28     	; 0x2536 <__fp_splitA+0x1a>
    251a:	47 95       	ror	r20

0000251c <__fp_splitA>:
    251c:	88 0f       	add	r24, r24
    251e:	97 fb       	bst	r25, 7
    2520:	99 1f       	adc	r25, r25
    2522:	61 f0       	breq	.+24     	; 0x253c <__fp_splitA+0x20>
    2524:	9f 3f       	cpi	r25, 0xFF	; 255
    2526:	79 f0       	breq	.+30     	; 0x2546 <__fp_splitA+0x2a>
    2528:	87 95       	ror	r24
    252a:	08 95       	ret
    252c:	12 16       	cp	r1, r18
    252e:	13 06       	cpc	r1, r19
    2530:	14 06       	cpc	r1, r20
    2532:	55 1f       	adc	r21, r21
    2534:	f2 cf       	rjmp	.-28     	; 0x251a <__fp_split3+0xe>
    2536:	46 95       	lsr	r20
    2538:	f1 df       	rcall	.-30     	; 0x251c <__fp_splitA>
    253a:	08 c0       	rjmp	.+16     	; 0x254c <__fp_splitA+0x30>
    253c:	16 16       	cp	r1, r22
    253e:	17 06       	cpc	r1, r23
    2540:	18 06       	cpc	r1, r24
    2542:	99 1f       	adc	r25, r25
    2544:	f1 cf       	rjmp	.-30     	; 0x2528 <__fp_splitA+0xc>
    2546:	86 95       	lsr	r24
    2548:	71 05       	cpc	r23, r1
    254a:	61 05       	cpc	r22, r1
    254c:	08 94       	sec
    254e:	08 95       	ret

00002550 <__fp_zero>:
    2550:	e8 94       	clt

00002552 <__fp_szero>:
    2552:	bb 27       	eor	r27, r27
    2554:	66 27       	eor	r22, r22
    2556:	77 27       	eor	r23, r23
    2558:	cb 01       	movw	r24, r22
    255a:	97 f9       	bld	r25, 7
    255c:	08 95       	ret

0000255e <__gesf2>:
    255e:	0e 94 3a 12 	call	0x2474	; 0x2474 <__fp_cmp>
    2562:	08 f4       	brcc	.+2      	; 0x2566 <__gesf2+0x8>
    2564:	8f ef       	ldi	r24, 0xFF	; 255
    2566:	08 95       	ret

00002568 <__mulsf3>:
    2568:	0e 94 c7 12 	call	0x258e	; 0x258e <__mulsf3x>
    256c:	0c 94 75 12 	jmp	0x24ea	; 0x24ea <__fp_round>
    2570:	0e 94 67 12 	call	0x24ce	; 0x24ce <__fp_pscA>
    2574:	38 f0       	brcs	.+14     	; 0x2584 <__mulsf3+0x1c>
    2576:	0e 94 6e 12 	call	0x24dc	; 0x24dc <__fp_pscB>
    257a:	20 f0       	brcs	.+8      	; 0x2584 <__mulsf3+0x1c>
    257c:	95 23       	and	r25, r21
    257e:	11 f0       	breq	.+4      	; 0x2584 <__mulsf3+0x1c>
    2580:	0c 94 5e 12 	jmp	0x24bc	; 0x24bc <__fp_inf>
    2584:	0c 94 64 12 	jmp	0x24c8	; 0x24c8 <__fp_nan>
    2588:	11 24       	eor	r1, r1
    258a:	0c 94 a9 12 	jmp	0x2552	; 0x2552 <__fp_szero>

0000258e <__mulsf3x>:
    258e:	0e 94 86 12 	call	0x250c	; 0x250c <__fp_split3>
    2592:	70 f3       	brcs	.-36     	; 0x2570 <__mulsf3+0x8>

00002594 <__mulsf3_pse>:
    2594:	95 9f       	mul	r25, r21
    2596:	c1 f3       	breq	.-16     	; 0x2588 <__mulsf3+0x20>
    2598:	95 0f       	add	r25, r21
    259a:	50 e0       	ldi	r21, 0x00	; 0
    259c:	55 1f       	adc	r21, r21
    259e:	62 9f       	mul	r22, r18
    25a0:	f0 01       	movw	r30, r0
    25a2:	72 9f       	mul	r23, r18
    25a4:	bb 27       	eor	r27, r27
    25a6:	f0 0d       	add	r31, r0
    25a8:	b1 1d       	adc	r27, r1
    25aa:	63 9f       	mul	r22, r19
    25ac:	aa 27       	eor	r26, r26
    25ae:	f0 0d       	add	r31, r0
    25b0:	b1 1d       	adc	r27, r1
    25b2:	aa 1f       	adc	r26, r26
    25b4:	64 9f       	mul	r22, r20
    25b6:	66 27       	eor	r22, r22
    25b8:	b0 0d       	add	r27, r0
    25ba:	a1 1d       	adc	r26, r1
    25bc:	66 1f       	adc	r22, r22
    25be:	82 9f       	mul	r24, r18
    25c0:	22 27       	eor	r18, r18
    25c2:	b0 0d       	add	r27, r0
    25c4:	a1 1d       	adc	r26, r1
    25c6:	62 1f       	adc	r22, r18
    25c8:	73 9f       	mul	r23, r19
    25ca:	b0 0d       	add	r27, r0
    25cc:	a1 1d       	adc	r26, r1
    25ce:	62 1f       	adc	r22, r18
    25d0:	83 9f       	mul	r24, r19
    25d2:	a0 0d       	add	r26, r0
    25d4:	61 1d       	adc	r22, r1
    25d6:	22 1f       	adc	r18, r18
    25d8:	74 9f       	mul	r23, r20
    25da:	33 27       	eor	r19, r19
    25dc:	a0 0d       	add	r26, r0
    25de:	61 1d       	adc	r22, r1
    25e0:	23 1f       	adc	r18, r19
    25e2:	84 9f       	mul	r24, r20
    25e4:	60 0d       	add	r22, r0
    25e6:	21 1d       	adc	r18, r1
    25e8:	82 2f       	mov	r24, r18
    25ea:	76 2f       	mov	r23, r22
    25ec:	6a 2f       	mov	r22, r26
    25ee:	11 24       	eor	r1, r1
    25f0:	9f 57       	subi	r25, 0x7F	; 127
    25f2:	50 40       	sbci	r21, 0x00	; 0
    25f4:	9a f0       	brmi	.+38     	; 0x261c <__mulsf3_pse+0x88>
    25f6:	f1 f0       	breq	.+60     	; 0x2634 <__mulsf3_pse+0xa0>
    25f8:	88 23       	and	r24, r24
    25fa:	4a f0       	brmi	.+18     	; 0x260e <__mulsf3_pse+0x7a>
    25fc:	ee 0f       	add	r30, r30
    25fe:	ff 1f       	adc	r31, r31
    2600:	bb 1f       	adc	r27, r27
    2602:	66 1f       	adc	r22, r22
    2604:	77 1f       	adc	r23, r23
    2606:	88 1f       	adc	r24, r24
    2608:	91 50       	subi	r25, 0x01	; 1
    260a:	50 40       	sbci	r21, 0x00	; 0
    260c:	a9 f7       	brne	.-22     	; 0x25f8 <__mulsf3_pse+0x64>
    260e:	9e 3f       	cpi	r25, 0xFE	; 254
    2610:	51 05       	cpc	r21, r1
    2612:	80 f0       	brcs	.+32     	; 0x2634 <__mulsf3_pse+0xa0>
    2614:	0c 94 5e 12 	jmp	0x24bc	; 0x24bc <__fp_inf>
    2618:	0c 94 a9 12 	jmp	0x2552	; 0x2552 <__fp_szero>
    261c:	5f 3f       	cpi	r21, 0xFF	; 255
    261e:	e4 f3       	brlt	.-8      	; 0x2618 <__mulsf3_pse+0x84>
    2620:	98 3e       	cpi	r25, 0xE8	; 232
    2622:	d4 f3       	brlt	.-12     	; 0x2618 <__mulsf3_pse+0x84>
    2624:	86 95       	lsr	r24
    2626:	77 95       	ror	r23
    2628:	67 95       	ror	r22
    262a:	b7 95       	ror	r27
    262c:	f7 95       	ror	r31
    262e:	e7 95       	ror	r30
    2630:	9f 5f       	subi	r25, 0xFF	; 255
    2632:	c1 f7       	brne	.-16     	; 0x2624 <__mulsf3_pse+0x90>
    2634:	fe 2b       	or	r31, r30
    2636:	88 0f       	add	r24, r24
    2638:	91 1d       	adc	r25, r1
    263a:	96 95       	lsr	r25
    263c:	87 95       	ror	r24
    263e:	97 f9       	bld	r25, 7
    2640:	08 95       	ret

00002642 <_exit>:
    2642:	f8 94       	cli

00002644 <__stop_program>:
    2644:	ff cf       	rjmp	.-2      	; 0x2644 <__stop_program>
